{"ast":null,"code":"import { format as isoFormat } from \"isoformat\";\nimport { string } from \"./options.js\";\nimport { memoize1 } from \"./memoize.js\";\nconst numberFormat = memoize1(locale => {\n  return new Intl.NumberFormat(locale);\n});\nconst monthFormat = memoize1((locale, month) => {\n  return new Intl.DateTimeFormat(locale, {\n    timeZone: \"UTC\",\n    ...(month && {\n      month\n    })\n  });\n});\nconst weekdayFormat = memoize1((locale, weekday) => {\n  return new Intl.DateTimeFormat(locale, {\n    timeZone: \"UTC\",\n    ...(weekday && {\n      weekday\n    })\n  });\n});\nexport function formatNumber(locale = \"en-US\") {\n  const format = numberFormat(locale);\n  return i => i != null && !isNaN(i) ? format.format(i) : undefined;\n}\nexport function formatMonth(locale = \"en-US\", format = \"short\") {\n  const fmt = monthFormat(locale, format);\n  return i => i != null && !isNaN(i = +new Date(Date.UTC(2000, +i))) ? fmt.format(i) : undefined;\n}\nexport function formatWeekday(locale = \"en-US\", format = \"short\") {\n  const fmt = weekdayFormat(locale, format);\n  return i => i != null && !isNaN(i = +new Date(Date.UTC(2001, 0, +i))) ? fmt.format(i) : undefined;\n}\nexport function formatIsoDate(date) {\n  return isoFormat(date, \"Invalid Date\");\n}\nexport function formatAuto(locale = \"en-US\") {\n  const number = formatNumber(locale);\n  return v => (v instanceof Date ? formatIsoDate : typeof v === \"number\" ? number : string)(v);\n}\n\n// TODO When Plot supports a top-level locale option, this should be removed\n// because it lacks context to know which locale to use; formatAuto should be\n// used instead whenever possible.\nexport const formatDefault = formatAuto();","map":{"version":3,"names":["format","isoFormat","string","memoize1","numberFormat","locale","Intl","NumberFormat","monthFormat","month","DateTimeFormat","timeZone","weekdayFormat","weekday","formatNumber","i","isNaN","undefined","formatMonth","fmt","Date","UTC","formatWeekday","formatIsoDate","date","formatAuto","number","v","formatDefault"],"sources":["D:/Notebooks/notebooks-web/vue/node_modules/@observablehq/plot/src/format.js"],"sourcesContent":["import {format as isoFormat} from \"isoformat\";\nimport {string} from \"./options.js\";\nimport {memoize1} from \"./memoize.js\";\n\nconst numberFormat = memoize1((locale) => {\n  return new Intl.NumberFormat(locale);\n});\n\nconst monthFormat = memoize1((locale, month) => {\n  return new Intl.DateTimeFormat(locale, {timeZone: \"UTC\", ...(month && {month})});\n});\n\nconst weekdayFormat = memoize1((locale, weekday) => {\n  return new Intl.DateTimeFormat(locale, {timeZone: \"UTC\", ...(weekday && {weekday})});\n});\n\nexport function formatNumber(locale = \"en-US\") {\n  const format = numberFormat(locale);\n  return (i) => (i != null && !isNaN(i) ? format.format(i) : undefined);\n}\n\nexport function formatMonth(locale = \"en-US\", format = \"short\") {\n  const fmt = monthFormat(locale, format);\n  return (i) => (i != null && !isNaN((i = +new Date(Date.UTC(2000, +i)))) ? fmt.format(i) : undefined);\n}\n\nexport function formatWeekday(locale = \"en-US\", format = \"short\") {\n  const fmt = weekdayFormat(locale, format);\n  return (i) => (i != null && !isNaN((i = +new Date(Date.UTC(2001, 0, +i)))) ? fmt.format(i) : undefined);\n}\n\nexport function formatIsoDate(date) {\n  return isoFormat(date, \"Invalid Date\");\n}\n\nexport function formatAuto(locale = \"en-US\") {\n  const number = formatNumber(locale);\n  return (v) => (v instanceof Date ? formatIsoDate : typeof v === \"number\" ? number : string)(v);\n}\n\n// TODO When Plot supports a top-level locale option, this should be removed\n// because it lacks context to know which locale to use; formatAuto should be\n// used instead whenever possible.\nexport const formatDefault = formatAuto();\n"],"mappings":"AAAA,SAAQA,MAAM,IAAIC,SAAS,QAAO,WAAW;AAC7C,SAAQC,MAAM,QAAO,cAAc;AACnC,SAAQC,QAAQ,QAAO,cAAc;AAErC,MAAMC,YAAY,GAAGD,QAAQ,CAAEE,MAAM,IAAK;EACxC,OAAO,IAAIC,IAAI,CAACC,YAAY,CAACF,MAAM,CAAC;AACtC,CAAC,CAAC;AAEF,MAAMG,WAAW,GAAGL,QAAQ,CAAC,CAACE,MAAM,EAAEI,KAAK,KAAK;EAC9C,OAAO,IAAIH,IAAI,CAACI,cAAc,CAACL,MAAM,EAAE;IAACM,QAAQ,EAAE,KAAK;IAAE,IAAIF,KAAK,IAAI;MAACA;IAAK,CAAC;EAAC,CAAC,CAAC;AAClF,CAAC,CAAC;AAEF,MAAMG,aAAa,GAAGT,QAAQ,CAAC,CAACE,MAAM,EAAEQ,OAAO,KAAK;EAClD,OAAO,IAAIP,IAAI,CAACI,cAAc,CAACL,MAAM,EAAE;IAACM,QAAQ,EAAE,KAAK;IAAE,IAAIE,OAAO,IAAI;MAACA;IAAO,CAAC;EAAC,CAAC,CAAC;AACtF,CAAC,CAAC;AAEF,OAAO,SAASC,YAAYA,CAACT,MAAM,GAAG,OAAO,EAAE;EAC7C,MAAML,MAAM,GAAGI,YAAY,CAACC,MAAM,CAAC;EACnC,OAAQU,CAAC,IAAMA,CAAC,IAAI,IAAI,IAAI,CAACC,KAAK,CAACD,CAAC,CAAC,GAAGf,MAAM,CAACA,MAAM,CAACe,CAAC,CAAC,GAAGE,SAAU;AACvE;AAEA,OAAO,SAASC,WAAWA,CAACb,MAAM,GAAG,OAAO,EAAEL,MAAM,GAAG,OAAO,EAAE;EAC9D,MAAMmB,GAAG,GAAGX,WAAW,CAACH,MAAM,EAAEL,MAAM,CAAC;EACvC,OAAQe,CAAC,IAAMA,CAAC,IAAI,IAAI,IAAI,CAACC,KAAK,CAAED,CAAC,GAAG,CAAC,IAAIK,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,IAAI,EAAE,CAACN,CAAC,CAAC,CAAE,CAAC,GAAGI,GAAG,CAACnB,MAAM,CAACe,CAAC,CAAC,GAAGE,SAAU;AACtG;AAEA,OAAO,SAASK,aAAaA,CAACjB,MAAM,GAAG,OAAO,EAAEL,MAAM,GAAG,OAAO,EAAE;EAChE,MAAMmB,GAAG,GAAGP,aAAa,CAACP,MAAM,EAAEL,MAAM,CAAC;EACzC,OAAQe,CAAC,IAAMA,CAAC,IAAI,IAAI,IAAI,CAACC,KAAK,CAAED,CAAC,GAAG,CAAC,IAAIK,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAACN,CAAC,CAAC,CAAE,CAAC,GAAGI,GAAG,CAACnB,MAAM,CAACe,CAAC,CAAC,GAAGE,SAAU;AACzG;AAEA,OAAO,SAASM,aAAaA,CAACC,IAAI,EAAE;EAClC,OAAOvB,SAAS,CAACuB,IAAI,EAAE,cAAc,CAAC;AACxC;AAEA,OAAO,SAASC,UAAUA,CAACpB,MAAM,GAAG,OAAO,EAAE;EAC3C,MAAMqB,MAAM,GAAGZ,YAAY,CAACT,MAAM,CAAC;EACnC,OAAQsB,CAAC,IAAK,CAACA,CAAC,YAAYP,IAAI,GAAGG,aAAa,GAAG,OAAOI,CAAC,KAAK,QAAQ,GAAGD,MAAM,GAAGxB,MAAM,EAAEyB,CAAC,CAAC;AAChG;;AAEA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAGH,UAAU,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}