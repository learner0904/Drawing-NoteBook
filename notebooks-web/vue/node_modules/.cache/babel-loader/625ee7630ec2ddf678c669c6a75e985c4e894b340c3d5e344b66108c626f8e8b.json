{"ast":null,"code":"import { deviation, max, median, min, mode, variance } from \"d3\";\nimport { defined } from \"../defined.js\";\nimport { percentile, subarray, taker } from \"../options.js\";\nimport { warn } from \"../warnings.js\";\nimport { mapX, mapY } from \"./map.js\";\nexport function windowX(windowOptions = {}, options) {\n  if (arguments.length === 1) options = windowOptions;\n  return mapX(window(windowOptions), options);\n}\nexport function windowY(windowOptions = {}, options) {\n  if (arguments.length === 1) options = windowOptions;\n  return mapY(window(windowOptions), options);\n}\nexport function window(options = {}) {\n  if (typeof options === \"number\") options = {\n    k: options\n  };\n  let {\n    k,\n    reduce,\n    shift,\n    anchor,\n    strict\n  } = options;\n  if (anchor === undefined && shift !== undefined) {\n    anchor = maybeShift(shift);\n    warn(`Warning: the shift option is deprecated; please use anchor \"${anchor}\" instead.`);\n  }\n  if (!((k = Math.floor(k)) > 0)) throw new Error(`invalid k: ${k}`);\n  return maybeReduce(reduce)(k, maybeAnchor(anchor, k), strict);\n}\nfunction maybeAnchor(anchor = \"middle\", k) {\n  switch (`${anchor}`.toLowerCase()) {\n    case \"middle\":\n      return k - 1 >> 1;\n    case \"start\":\n      return 0;\n    case \"end\":\n      return k - 1;\n  }\n  throw new Error(`invalid anchor: ${anchor}`);\n}\nfunction maybeShift(shift) {\n  switch (`${shift}`.toLowerCase()) {\n    case \"centered\":\n      return \"middle\";\n    case \"leading\":\n      return \"start\";\n    case \"trailing\":\n      return \"end\";\n  }\n  throw new Error(`invalid shift: ${shift}`);\n}\nfunction maybeReduce(reduce = \"mean\") {\n  if (typeof reduce === \"string\") {\n    if (/^p\\d{2}$/i.test(reduce)) return reduceAccessor(percentile(reduce));\n    switch (reduce.toLowerCase()) {\n      case \"deviation\":\n        return reduceAccessor(deviation);\n      case \"max\":\n        return reduceArray((I, V) => max(I, i => V[i]));\n      case \"mean\":\n        return reduceMean;\n      case \"median\":\n        return reduceAccessor(median);\n      case \"min\":\n        return reduceArray((I, V) => min(I, i => V[i]));\n      case \"mode\":\n        return reduceArray((I, V) => mode(I, i => V[i]));\n      case \"sum\":\n        return reduceSum;\n      case \"variance\":\n        return reduceAccessor(variance);\n      case \"difference\":\n        return reduceDifference;\n      case \"ratio\":\n        return reduceRatio;\n      case \"first\":\n        return reduceFirst;\n      case \"last\":\n        return reduceLast;\n    }\n  }\n  if (typeof reduce !== \"function\") throw new Error(`invalid reduce: ${reduce}`);\n  return reduceArray(taker(reduce));\n}\n\n// Note that the subarray may include NaN in the non-strict case; we expect the\n// function f to handle that itself (e.g., by filtering as needed). The D3\n// reducers (e.g., min, max, mean, median) do, and itâ€™s faster to avoid\n// redundant filtering.\nfunction reduceAccessor(f) {\n  return (k, s, strict) => strict ? {\n    mapIndex(I, S, T) {\n      const v = i => S[i] == null ? NaN : +S[i];\n      let nans = 0;\n      for (let i = 0; i < k - 1; ++i) if (isNaN(v(i))) ++nans;\n      for (let i = 0, n = I.length - k + 1; i < n; ++i) {\n        if (isNaN(v(i + k - 1))) ++nans;\n        T[I[i + s]] = nans === 0 ? f(subarray(I, i, i + k), v) : NaN;\n        if (isNaN(v(i))) --nans;\n      }\n    }\n  } : {\n    mapIndex(I, S, T) {\n      const v = i => S[i] == null ? NaN : +S[i];\n      for (let i = -s; i < 0; ++i) {\n        T[I[i + s]] = f(subarray(I, 0, i + k), v);\n      }\n      for (let i = 0, n = I.length - s; i < n; ++i) {\n        T[I[i + s]] = f(subarray(I, i, i + k), v);\n      }\n    }\n  };\n}\nfunction reduceArray(f) {\n  return (k, s, strict) => strict ? {\n    mapIndex(I, S, T) {\n      let count = 0;\n      for (let i = 0; i < k - 1; ++i) count += defined(S[I[i]]);\n      for (let i = 0, n = I.length - k + 1; i < n; ++i) {\n        count += defined(S[I[i + k - 1]]);\n        if (count === k) T[I[i + s]] = f(subarray(I, i, i + k), S);\n        count -= defined(S[I[i]]);\n      }\n    }\n  } : {\n    mapIndex(I, S, T) {\n      for (let i = -s; i < 0; ++i) {\n        T[I[i + s]] = f(subarray(I, 0, i + k), S);\n      }\n      for (let i = 0, n = I.length - s; i < n; ++i) {\n        T[I[i + s]] = f(subarray(I, i, i + k), S);\n      }\n    }\n  };\n}\nfunction reduceSum(k, s, strict) {\n  return strict ? {\n    mapIndex(I, S, T) {\n      let nans = 0;\n      let sum = 0;\n      for (let i = 0; i < k - 1; ++i) {\n        const v = S[I[i]];\n        if (v === null || isNaN(v)) ++nans;else sum += +v;\n      }\n      for (let i = 0, n = I.length - k + 1; i < n; ++i) {\n        const a = S[I[i]];\n        const b = S[I[i + k - 1]];\n        if (b === null || isNaN(b)) ++nans;else sum += +b;\n        T[I[i + s]] = nans === 0 ? sum : NaN;\n        if (a === null || isNaN(a)) --nans;else sum -= +a;\n      }\n    }\n  } : {\n    mapIndex(I, S, T) {\n      let sum = 0;\n      const n = I.length;\n      for (let i = 0, j = Math.min(n, k - s - 1); i < j; ++i) {\n        sum += +S[I[i]] || 0;\n      }\n      for (let i = -s, j = n - s; i < j; ++i) {\n        sum += +S[I[i + k - 1]] || 0;\n        T[I[i + s]] = sum;\n        sum -= +S[I[i]] || 0;\n      }\n    }\n  };\n}\nfunction reduceMean(k, s, strict) {\n  if (strict) {\n    const sum = reduceSum(k, s, strict);\n    return {\n      mapIndex(I, S, T) {\n        sum.mapIndex(I, S, T);\n        for (let i = 0, n = I.length - k + 1; i < n; ++i) {\n          T[I[i + s]] /= k;\n        }\n      }\n    };\n  } else {\n    return {\n      mapIndex(I, S, T) {\n        let sum = 0;\n        let count = 0;\n        const n = I.length;\n        for (let i = 0, j = Math.min(n, k - s - 1); i < j; ++i) {\n          let v = S[I[i]];\n          if (v !== null && !isNaN(v = +v)) sum += v, ++count;\n        }\n        for (let i = -s, j = n - s; i < j; ++i) {\n          let a = S[I[i + k - 1]];\n          let b = S[I[i]];\n          if (a !== null && !isNaN(a = +a)) sum += a, ++count;\n          T[I[i + s]] = sum / count;\n          if (b !== null && !isNaN(b = +b)) sum -= b, --count;\n        }\n      }\n    };\n  }\n}\nfunction firstDefined(S, I, i, k) {\n  for (let j = i + k; i < j; ++i) {\n    const v = S[I[i]];\n    if (defined(v)) return v;\n  }\n}\nfunction lastDefined(S, I, i, k) {\n  for (let j = i + k - 1; j >= i; --j) {\n    const v = S[I[j]];\n    if (defined(v)) return v;\n  }\n}\nfunction firstNumber(S, I, i, k) {\n  for (let j = i + k; i < j; ++i) {\n    let v = S[I[i]];\n    if (v !== null && !isNaN(v = +v)) return v;\n  }\n}\nfunction lastNumber(S, I, i, k) {\n  for (let j = i + k - 1; j >= i; --j) {\n    let v = S[I[j]];\n    if (v !== null && !isNaN(v = +v)) return v;\n  }\n}\nfunction reduceDifference(k, s, strict) {\n  return strict ? {\n    mapIndex(I, S, T) {\n      for (let i = 0, n = I.length - k; i < n; ++i) {\n        const a = S[I[i]];\n        const b = S[I[i + k - 1]];\n        T[I[i + s]] = a === null || b === null ? NaN : b - a;\n      }\n    }\n  } : {\n    mapIndex(I, S, T) {\n      for (let i = -s, n = I.length - k + s + 1; i < n; ++i) {\n        T[I[i + s]] = lastNumber(S, I, i, k) - firstNumber(S, I, i, k);\n      }\n    }\n  };\n}\nfunction reduceRatio(k, s, strict) {\n  return strict ? {\n    mapIndex(I, S, T) {\n      for (let i = 0, n = I.length - k; i < n; ++i) {\n        const a = S[I[i]];\n        const b = S[I[i + k - 1]];\n        T[I[i + s]] = a === null || b === null ? NaN : b / a;\n      }\n    }\n  } : {\n    mapIndex(I, S, T) {\n      for (let i = -s, n = I.length - k + s + 1; i < n; ++i) {\n        T[I[i + s]] = lastNumber(S, I, i, k) / firstNumber(S, I, i, k);\n      }\n    }\n  };\n}\nfunction reduceFirst(k, s, strict) {\n  return strict ? {\n    mapIndex(I, S, T) {\n      for (let i = 0, n = I.length - k; i < n; ++i) {\n        T[I[i + s]] = S[I[i]];\n      }\n    }\n  } : {\n    mapIndex(I, S, T) {\n      for (let i = -s, n = I.length - k + s + 1; i < n; ++i) {\n        T[I[i + s]] = firstDefined(S, I, i, k);\n      }\n    }\n  };\n}\nfunction reduceLast(k, s, strict) {\n  return strict ? {\n    mapIndex(I, S, T) {\n      for (let i = 0, n = I.length - k; i < n; ++i) {\n        T[I[i + s]] = S[I[i + k - 1]];\n      }\n    }\n  } : {\n    mapIndex(I, S, T) {\n      for (let i = -s, n = I.length - k + s + 1; i < n; ++i) {\n        T[I[i + s]] = lastDefined(S, I, i, k);\n      }\n    }\n  };\n}","map":{"version":3,"names":["deviation","max","median","min","mode","variance","defined","percentile","subarray","taker","warn","mapX","mapY","windowX","windowOptions","options","arguments","length","window","windowY","k","reduce","shift","anchor","strict","undefined","maybeShift","Math","floor","Error","maybeReduce","maybeAnchor","toLowerCase","test","reduceAccessor","reduceArray","I","V","i","reduceMean","reduceSum","reduceDifference","reduceRatio","reduceFirst","reduceLast","f","s","mapIndex","S","T","v","NaN","nans","isNaN","n","count","sum","a","b","j","firstDefined","lastDefined","firstNumber","lastNumber"],"sources":["D:/Notebooks/notebooks-web/vue/node_modules/@observablehq/plot/src/transforms/window.js"],"sourcesContent":["import {deviation, max, median, min, mode, variance} from \"d3\";\nimport {defined} from \"../defined.js\";\nimport {percentile, subarray, taker} from \"../options.js\";\nimport {warn} from \"../warnings.js\";\nimport {mapX, mapY} from \"./map.js\";\n\nexport function windowX(windowOptions = {}, options) {\n  if (arguments.length === 1) options = windowOptions;\n  return mapX(window(windowOptions), options);\n}\n\nexport function windowY(windowOptions = {}, options) {\n  if (arguments.length === 1) options = windowOptions;\n  return mapY(window(windowOptions), options);\n}\n\nexport function window(options = {}) {\n  if (typeof options === \"number\") options = {k: options};\n  let {k, reduce, shift, anchor, strict} = options;\n  if (anchor === undefined && shift !== undefined) {\n    anchor = maybeShift(shift);\n    warn(`Warning: the shift option is deprecated; please use anchor \"${anchor}\" instead.`);\n  }\n  if (!((k = Math.floor(k)) > 0)) throw new Error(`invalid k: ${k}`);\n  return maybeReduce(reduce)(k, maybeAnchor(anchor, k), strict);\n}\n\nfunction maybeAnchor(anchor = \"middle\", k) {\n  switch (`${anchor}`.toLowerCase()) {\n    case \"middle\":\n      return (k - 1) >> 1;\n    case \"start\":\n      return 0;\n    case \"end\":\n      return k - 1;\n  }\n  throw new Error(`invalid anchor: ${anchor}`);\n}\n\nfunction maybeShift(shift) {\n  switch (`${shift}`.toLowerCase()) {\n    case \"centered\":\n      return \"middle\";\n    case \"leading\":\n      return \"start\";\n    case \"trailing\":\n      return \"end\";\n  }\n  throw new Error(`invalid shift: ${shift}`);\n}\n\nfunction maybeReduce(reduce = \"mean\") {\n  if (typeof reduce === \"string\") {\n    if (/^p\\d{2}$/i.test(reduce)) return reduceAccessor(percentile(reduce));\n    switch (reduce.toLowerCase()) {\n      case \"deviation\":\n        return reduceAccessor(deviation);\n      case \"max\":\n        return reduceArray((I, V) => max(I, (i) => V[i]));\n      case \"mean\":\n        return reduceMean;\n      case \"median\":\n        return reduceAccessor(median);\n      case \"min\":\n        return reduceArray((I, V) => min(I, (i) => V[i]));\n      case \"mode\":\n        return reduceArray((I, V) => mode(I, (i) => V[i]));\n      case \"sum\":\n        return reduceSum;\n      case \"variance\":\n        return reduceAccessor(variance);\n      case \"difference\":\n        return reduceDifference;\n      case \"ratio\":\n        return reduceRatio;\n      case \"first\":\n        return reduceFirst;\n      case \"last\":\n        return reduceLast;\n    }\n  }\n  if (typeof reduce !== \"function\") throw new Error(`invalid reduce: ${reduce}`);\n  return reduceArray(taker(reduce));\n}\n\n// Note that the subarray may include NaN in the non-strict case; we expect the\n// function f to handle that itself (e.g., by filtering as needed). The D3\n// reducers (e.g., min, max, mean, median) do, and itâ€™s faster to avoid\n// redundant filtering.\nfunction reduceAccessor(f) {\n  return (k, s, strict) =>\n    strict\n      ? {\n          mapIndex(I, S, T) {\n            const v = (i) => (S[i] == null ? NaN : +S[i]);\n            let nans = 0;\n            for (let i = 0; i < k - 1; ++i) if (isNaN(v(i))) ++nans;\n            for (let i = 0, n = I.length - k + 1; i < n; ++i) {\n              if (isNaN(v(i + k - 1))) ++nans;\n              T[I[i + s]] = nans === 0 ? f(subarray(I, i, i + k), v) : NaN;\n              if (isNaN(v(i))) --nans;\n            }\n          }\n        }\n      : {\n          mapIndex(I, S, T) {\n            const v = (i) => (S[i] == null ? NaN : +S[i]);\n            for (let i = -s; i < 0; ++i) {\n              T[I[i + s]] = f(subarray(I, 0, i + k), v);\n            }\n            for (let i = 0, n = I.length - s; i < n; ++i) {\n              T[I[i + s]] = f(subarray(I, i, i + k), v);\n            }\n          }\n        };\n}\n\nfunction reduceArray(f) {\n  return (k, s, strict) =>\n    strict\n      ? {\n          mapIndex(I, S, T) {\n            let count = 0;\n            for (let i = 0; i < k - 1; ++i) count += defined(S[I[i]]);\n            for (let i = 0, n = I.length - k + 1; i < n; ++i) {\n              count += defined(S[I[i + k - 1]]);\n              if (count === k) T[I[i + s]] = f(subarray(I, i, i + k), S);\n              count -= defined(S[I[i]]);\n            }\n          }\n        }\n      : {\n          mapIndex(I, S, T) {\n            for (let i = -s; i < 0; ++i) {\n              T[I[i + s]] = f(subarray(I, 0, i + k), S);\n            }\n            for (let i = 0, n = I.length - s; i < n; ++i) {\n              T[I[i + s]] = f(subarray(I, i, i + k), S);\n            }\n          }\n        };\n}\n\nfunction reduceSum(k, s, strict) {\n  return strict\n    ? {\n        mapIndex(I, S, T) {\n          let nans = 0;\n          let sum = 0;\n          for (let i = 0; i < k - 1; ++i) {\n            const v = S[I[i]];\n            if (v === null || isNaN(v)) ++nans;\n            else sum += +v;\n          }\n          for (let i = 0, n = I.length - k + 1; i < n; ++i) {\n            const a = S[I[i]];\n            const b = S[I[i + k - 1]];\n            if (b === null || isNaN(b)) ++nans;\n            else sum += +b;\n            T[I[i + s]] = nans === 0 ? sum : NaN;\n            if (a === null || isNaN(a)) --nans;\n            else sum -= +a;\n          }\n        }\n      }\n    : {\n        mapIndex(I, S, T) {\n          let sum = 0;\n          const n = I.length;\n          for (let i = 0, j = Math.min(n, k - s - 1); i < j; ++i) {\n            sum += +S[I[i]] || 0;\n          }\n          for (let i = -s, j = n - s; i < j; ++i) {\n            sum += +S[I[i + k - 1]] || 0;\n            T[I[i + s]] = sum;\n            sum -= +S[I[i]] || 0;\n          }\n        }\n      };\n}\n\nfunction reduceMean(k, s, strict) {\n  if (strict) {\n    const sum = reduceSum(k, s, strict);\n    return {\n      mapIndex(I, S, T) {\n        sum.mapIndex(I, S, T);\n        for (let i = 0, n = I.length - k + 1; i < n; ++i) {\n          T[I[i + s]] /= k;\n        }\n      }\n    };\n  } else {\n    return {\n      mapIndex(I, S, T) {\n        let sum = 0;\n        let count = 0;\n        const n = I.length;\n        for (let i = 0, j = Math.min(n, k - s - 1); i < j; ++i) {\n          let v = S[I[i]];\n          if (v !== null && !isNaN((v = +v))) (sum += v), ++count;\n        }\n        for (let i = -s, j = n - s; i < j; ++i) {\n          let a = S[I[i + k - 1]];\n          let b = S[I[i]];\n          if (a !== null && !isNaN((a = +a))) (sum += a), ++count;\n          T[I[i + s]] = sum / count;\n          if (b !== null && !isNaN((b = +b))) (sum -= b), --count;\n        }\n      }\n    };\n  }\n}\n\nfunction firstDefined(S, I, i, k) {\n  for (let j = i + k; i < j; ++i) {\n    const v = S[I[i]];\n    if (defined(v)) return v;\n  }\n}\n\nfunction lastDefined(S, I, i, k) {\n  for (let j = i + k - 1; j >= i; --j) {\n    const v = S[I[j]];\n    if (defined(v)) return v;\n  }\n}\n\nfunction firstNumber(S, I, i, k) {\n  for (let j = i + k; i < j; ++i) {\n    let v = S[I[i]];\n    if (v !== null && !isNaN((v = +v))) return v;\n  }\n}\n\nfunction lastNumber(S, I, i, k) {\n  for (let j = i + k - 1; j >= i; --j) {\n    let v = S[I[j]];\n    if (v !== null && !isNaN((v = +v))) return v;\n  }\n}\n\nfunction reduceDifference(k, s, strict) {\n  return strict\n    ? {\n        mapIndex(I, S, T) {\n          for (let i = 0, n = I.length - k; i < n; ++i) {\n            const a = S[I[i]];\n            const b = S[I[i + k - 1]];\n            T[I[i + s]] = a === null || b === null ? NaN : b - a;\n          }\n        }\n      }\n    : {\n        mapIndex(I, S, T) {\n          for (let i = -s, n = I.length - k + s + 1; i < n; ++i) {\n            T[I[i + s]] = lastNumber(S, I, i, k) - firstNumber(S, I, i, k);\n          }\n        }\n      };\n}\n\nfunction reduceRatio(k, s, strict) {\n  return strict\n    ? {\n        mapIndex(I, S, T) {\n          for (let i = 0, n = I.length - k; i < n; ++i) {\n            const a = S[I[i]];\n            const b = S[I[i + k - 1]];\n            T[I[i + s]] = a === null || b === null ? NaN : b / a;\n          }\n        }\n      }\n    : {\n        mapIndex(I, S, T) {\n          for (let i = -s, n = I.length - k + s + 1; i < n; ++i) {\n            T[I[i + s]] = lastNumber(S, I, i, k) / firstNumber(S, I, i, k);\n          }\n        }\n      };\n}\n\nfunction reduceFirst(k, s, strict) {\n  return strict\n    ? {\n        mapIndex(I, S, T) {\n          for (let i = 0, n = I.length - k; i < n; ++i) {\n            T[I[i + s]] = S[I[i]];\n          }\n        }\n      }\n    : {\n        mapIndex(I, S, T) {\n          for (let i = -s, n = I.length - k + s + 1; i < n; ++i) {\n            T[I[i + s]] = firstDefined(S, I, i, k);\n          }\n        }\n      };\n}\n\nfunction reduceLast(k, s, strict) {\n  return strict\n    ? {\n        mapIndex(I, S, T) {\n          for (let i = 0, n = I.length - k; i < n; ++i) {\n            T[I[i + s]] = S[I[i + k - 1]];\n          }\n        }\n      }\n    : {\n        mapIndex(I, S, T) {\n          for (let i = -s, n = I.length - k + s + 1; i < n; ++i) {\n            T[I[i + s]] = lastDefined(S, I, i, k);\n          }\n        }\n      };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}