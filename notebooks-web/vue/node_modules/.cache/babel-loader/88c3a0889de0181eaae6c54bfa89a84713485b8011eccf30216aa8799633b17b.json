{"ast":null,"code":"export default {\n  props: {\n    chartData: {\n      type: Object,\n      required: true\n    }\n  },\n  mounted() {\n    this.runInteractiveD3(this.chartData);\n  },\n  methods: {\n    runInteractiveD3(data) {\n      const width = 928;\n      const height = width;\n      const radius = width / 6;\n      const color = d3.scaleOrdinal(d3.quantize(d3.interpolateRainbow, data.children.length + 1));\n      const hierarchy = d3.hierarchy(data).sum(d => d.value).sort((a, b) => b.value - a.value);\n      const root = d3.partition().size([2 * Math.PI, hierarchy.height + 1])(hierarchy);\n      root.each(d => d.current = d);\n      const arc = d3.arc().startAngle(d => d.x0).endAngle(d => d.x1).padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005)).padRadius(radius * 1.5).innerRadius(d => d.y0 * radius).outerRadius(d => Math.max(d.y0 * radius, d.y1 * radius - 1));\n      const svg = d3.create(\"svg\").attr(\"viewBox\", [-width / 2, -height / 2, width, width]).style(\"font\", \"10px sans-serif\");\n      const path = svg.append(\"g\").selectAll(\"path\").data(root.descendants().slice(1)).join(\"path\").attr(\"fill\", d => {\n        while (d.depth > 1) d = d.parent;\n        return color(d.data.name);\n      }).attr(\"fill-opacity\", d => this.arcVisible(d.current) ? d.children ? 0.6 : 0.4 : 0).attr(\"pointer-events\", d => this.arcVisible(d.current) ? \"auto\" : \"none\").attr(\"d\", d => arc(d.current));\n      path.filter(d => d.children).style(\"cursor\", \"pointer\").on(\"click\", clicked);\n      const format = d3.format(\",d\");\n      path.append(\"title\").text(d => `${d.ancestors().map(d => d.data.name).reverse().join(\"/\")}\\n${format(d.value)}`);\n      const label = svg.append(\"g\").attr(\"pointer-events\", \"none\").attr(\"text-anchor\", \"middle\").style(\"user-select\", \"none\").selectAll(\"text\").data(root.descendants().slice(1)).join(\"text\").attr(\"dy\", \"0.35em\").attr(\"fill-opacity\", d => +this.labelVisible(d.current)).attr(\"transform\", d => this.labelTransform(d.current)).text(d => d.data.name);\n      const parent = svg.append(\"circle\").datum(root).attr(\"r\", radius).attr(\"fill\", \"none\").attr(\"pointer-events\", \"all\").on(\"click\", clicked);\n      function clicked(event, p) {\n        parent.datum(p.parent || root);\n        root.each(d => {\n          d.target = {\n            x0: Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n            x1: Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n            y0: Math.max(0, d.y0 - p.depth),\n            y1: Math.max(0, d.y1 - p.depth)\n          };\n        });\n        const t = svg.transition().duration(750);\n        path.transition(t).tween(\"data\", d => {\n          const i = d3.interpolate(d.current, d.target);\n          return t => d.current = i(t);\n        }).filter(function (d) {\n          return +this.getAttribute(\"fill-opacity\") || arcVisible(d.target);\n        }).attr(\"fill-opacity\", d => arcVisible(d.target) ? d.children ? 0.6 : 0.4 : 0).attr(\"pointer-events\", d => arcVisible(d.target) ? \"auto\" : \"none\").attrTween(\"d\", d => () => arc(d.current));\n        label.filter(function (d) {\n          return +this.getAttribute(\"fill-opacity\") || labelVisible(d.target);\n        }).transition(t).attr(\"fill-opacity\", d => +labelVisible(d.target)).attrTween(\"transform\", d => () => labelTransform(d.current));\n      }\n      this.parent = parent; // Store reference for later use\n      this.svg = svg; // Store reference for later use\n      document.getElementById(\"chart\").appendChild(svg.node());\n    },\n    arcVisible(d) {\n      return d.y1 <= 3 && d.y0 >= 1 && d.x1 > d.x0;\n    },\n    labelVisible(d) {\n      return d.y1 <= 3 && d.y0 >= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) > 0.03;\n    },\n    labelTransform(d) {\n      const x = (d.x0 + d.x1) / 2 * 180 / Math.PI;\n      const y = (d.y0 + d.y1) / 2 * radius;\n      return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\n    }\n  }\n};","map":{"version":3,"names":["props","chartData","type","Object","required","mounted","runInteractiveD3","methods","data","width","height","radius","color","d3","scaleOrdinal","quantize","interpolateRainbow","children","length","hierarchy","sum","d","value","sort","a","b","root","partition","size","Math","PI","each","current","arc","startAngle","x0","endAngle","x1","padAngle","min","padRadius","innerRadius","y0","outerRadius","max","y1","svg","create","attr","style","path","append","selectAll","descendants","slice","join","depth","parent","name","arcVisible","filter","on","clicked","format","text","ancestors","map","reverse","label","labelVisible","labelTransform","datum","event","p","target","t","transition","duration","tween","i","interpolate","getAttribute","attrTween","document","getElementById","appendChild","node","x","y"],"sources":["src/views/manager/D3Runner.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>D3 Interactive Chart</h1>\r\n    <div id=\"chart\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    chartData: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  mounted() {\r\n    this.runInteractiveD3(this.chartData);\r\n  },\r\n  methods: {\r\n    runInteractiveD3(data) {\r\n      const width = 928;\r\n      const height = width;\r\n      const radius = width / 6;\r\n\r\n      const color = d3.scaleOrdinal(d3.quantize(d3.interpolateRainbow, data.children.length + 1));\r\n\r\n      const hierarchy = d3.hierarchy(data).sum(d => d.value).sort((a, b) => b.value - a.value);\r\n      const root = d3.partition().size([2 * Math.PI, hierarchy.height + 1])(hierarchy);\r\n      root.each(d => (d.current = d));\r\n\r\n      const arc = d3\r\n        .arc()\r\n        .startAngle(d => d.x0)\r\n        .endAngle(d => d.x1)\r\n        .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\r\n        .padRadius(radius * 1.5)\r\n        .innerRadius(d => d.y0 * radius)\r\n        .outerRadius(d => Math.max(d.y0 * radius, d.y1 * radius - 1));\r\n\r\n      const svg = d3\r\n        .create(\"svg\")\r\n        .attr(\"viewBox\", [-width / 2, -height / 2, width, width])\r\n        .style(\"font\", \"10px sans-serif\");\r\n\r\n      const path = svg\r\n        .append(\"g\")\r\n        .selectAll(\"path\")\r\n        .data(root.descendants().slice(1))\r\n        .join(\"path\")\r\n        .attr(\"fill\", d => {\r\n          while (d.depth > 1) d = d.parent;\r\n          return color(d.data.name);\r\n        })\r\n        .attr(\"fill-opacity\", d => (this.arcVisible(d.current) ? (d.children ? 0.6 : 0.4) : 0))\r\n        .attr(\"pointer-events\", d => (this.arcVisible(d.current) ? \"auto\" : \"none\"))\r\n        .attr(\"d\", d => arc(d.current));\r\n\r\n      path.filter(d => d.children).style(\"cursor\", \"pointer\").on(\"click\", clicked);\r\n\r\n      const format = d3.format(\",d\");\r\n      path.append(\"title\").text(d => `${d.ancestors().map(d => d.data.name).reverse().join(\"/\")}\\n${format(d.value)}`);\r\n\r\n      const label = svg\r\n        .append(\"g\")\r\n        .attr(\"pointer-events\", \"none\")\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .style(\"user-select\", \"none\")\r\n        .selectAll(\"text\")\r\n        .data(root.descendants().slice(1))\r\n        .join(\"text\")\r\n        .attr(\"dy\", \"0.35em\")\r\n        .attr(\"fill-opacity\", d => +this.labelVisible(d.current))\r\n        .attr(\"transform\", d => this.labelTransform(d.current))\r\n        .text(d => d.data.name);\r\n\r\n      const parent = svg\r\n        .append(\"circle\")\r\n        .datum(root)\r\n        .attr(\"r\", radius)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"pointer-events\", \"all\")\r\n        .on(\"click\", clicked);\r\n\r\n      function clicked(event, p) {\r\n        parent.datum(p.parent || root);\r\n        root.each(d => {\r\n          d.target = {\r\n            x0: Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\r\n            x1: Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\r\n            y0: Math.max(0, d.y0 - p.depth),\r\n            y1: Math.max(0, d.y1 - p.depth)\r\n          };\r\n        });\r\n\r\n        const t = svg.transition().duration(750);\r\n        path\r\n          .transition(t)\r\n          .tween(\"data\", d => {\r\n            const i = d3.interpolate(d.current, d.target);\r\n            return t => (d.current = i(t));\r\n          })\r\n          .filter(function(d) {\r\n            return +this.getAttribute(\"fill-opacity\") || arcVisible(d.target);\r\n          })\r\n          .attr(\"fill-opacity\", d => (arcVisible(d.target) ? (d.children ? 0.6 : 0.4) : 0))\r\n          .attr(\"pointer-events\", d => (arcVisible(d.target) ? \"auto\" : \"none\"))\r\n          .attrTween(\"d\", d => () => arc(d.current));\r\n\r\n        label\r\n          .filter(function(d) {\r\n            return +this.getAttribute(\"fill-opacity\") || labelVisible(d.target);\r\n          })\r\n          .transition(t)\r\n          .attr(\"fill-opacity\", d => +labelVisible(d.target))\r\n          .attrTween(\"transform\", d => () => labelTransform(d.current));\r\n      }\r\n\r\n      this.parent = parent; // Store reference for later use\r\n      this.svg = svg; // Store reference for later use\r\n      document.getElementById(\"chart\").appendChild(svg.node());\r\n    },\r\n\r\n    arcVisible(d) {\r\n      return d.y1 <= 3 && d.y0 >= 1 && d.x1 > d.x0;\r\n    },\r\n\r\n    labelVisible(d) {\r\n      return d.y1 <= 3 && d.y0 >= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) > 0.03;\r\n    },\r\n\r\n    labelTransform(d) {\r\n      const x = ((d.x0 + d.x1) / 2) * 180 / Math.PI;\r\n      const y = ((d.y0 + d.y1) / 2) * radius;\r\n      return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* Add any styles you want for your chart */\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}