{"ast":null,"code":"import { pathRound as path } from \"d3\";\nimport { create } from \"../context.js\";\nimport { Mark } from \"../mark.js\";\nimport { maybeFrameAnchor, maybeNumberChannel, maybeTuple, keyword, identity } from \"../options.js\";\nimport { applyChannelStyles, applyDirectStyles, applyFrameAnchor, applyIndirectStyles, applyTransform } from \"../style.js\";\nimport { template } from \"../template.js\";\nconst defaults = {\n  ariaLabel: \"vector\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 1.5,\n  strokeLinejoin: \"round\",\n  strokeLinecap: \"round\"\n};\nconst defaultRadius = 3.5;\n\n// The size of the arrowhead is proportional to its length, but we still allow\n// the relative size of the head to be controlled via the mark’s width option;\n// doubling the default radius will produce an arrowhead that is twice as big.\n// That said, we’ll probably want a arrow with a fixed head size, too.\nconst wingRatio = defaultRadius * 5;\nconst shapeArrow = {\n  draw(context, l, r) {\n    const wing = l * r / wingRatio;\n    context.moveTo(0, 0);\n    context.lineTo(0, -l);\n    context.moveTo(-wing, wing - l);\n    context.lineTo(0, -l);\n    context.lineTo(wing, wing - l);\n  }\n};\nconst shapeSpike = {\n  draw(context, l, r) {\n    context.moveTo(-r, 0);\n    context.lineTo(0, -l);\n    context.lineTo(r, 0);\n  }\n};\nconst shapes = new Map([[\"arrow\", shapeArrow], [\"spike\", shapeSpike]]);\nfunction isShapeObject(value) {\n  return value && typeof value.draw === \"function\";\n}\nfunction maybeShape(shape) {\n  if (isShapeObject(shape)) return shape;\n  const value = shapes.get(`${shape}`.toLowerCase());\n  if (value) return value;\n  throw new Error(`invalid shape: ${shape}`);\n}\nexport class Vector extends Mark {\n  constructor(data, options = {}) {\n    const {\n      x,\n      y,\n      r = defaultRadius,\n      length,\n      rotate,\n      shape = shapeArrow,\n      anchor = \"middle\",\n      frameAnchor\n    } = options;\n    const [vl, cl] = maybeNumberChannel(length, 12);\n    const [vr, cr] = maybeNumberChannel(rotate, 0);\n    super(data, {\n      x: {\n        value: x,\n        scale: \"x\",\n        optional: true\n      },\n      y: {\n        value: y,\n        scale: \"y\",\n        optional: true\n      },\n      length: {\n        value: vl,\n        scale: \"length\",\n        optional: true\n      },\n      rotate: {\n        value: vr,\n        optional: true\n      }\n    }, options, defaults);\n    this.r = +r;\n    this.length = cl;\n    this.rotate = cr;\n    this.shape = maybeShape(shape);\n    this.anchor = keyword(anchor, \"anchor\", [\"start\", \"middle\", \"end\"]);\n    this.frameAnchor = maybeFrameAnchor(frameAnchor);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x,\n      y\n    } = scales;\n    const {\n      x: X,\n      y: Y,\n      length: L,\n      rotate: A\n    } = channels;\n    const {\n      length,\n      rotate,\n      anchor,\n      shape,\n      r\n    } = this;\n    const [cx, cy] = applyFrameAnchor(this, dimensions);\n    return create(\"svg:g\", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, {\n      x: X && x,\n      y: Y && y\n    }).call(g => g.selectAll().data(index).enter().append(\"path\").call(applyDirectStyles, this).attr(\"transform\", template`translate(${X ? i => X[i] : cx},${Y ? i => Y[i] : cy})${A ? i => ` rotate(${A[i]})` : rotate ? ` rotate(${rotate})` : ``}${anchor === \"start\" ? `` : anchor === \"end\" ? L ? i => ` translate(0,${L[i]})` : ` translate(0,${length})` : L ? i => ` translate(0,${L[i] / 2})` : ` translate(0,${length / 2})`}`).attr(\"d\", L ? i => {\n      const p = path();\n      shape.draw(p, L[i], r);\n      return p;\n    } : (() => {\n      const p = path();\n      shape.draw(p, length, r);\n      return p;\n    })()).call(applyChannelStyles, this, channels)).node();\n  }\n}\nexport function vector(data, options = {}) {\n  let {\n    x,\n    y,\n    ...rest\n  } = options;\n  if (options.frameAnchor === undefined) [x, y] = maybeTuple(x, y);\n  return new Vector(data, {\n    ...rest,\n    x,\n    y\n  });\n}\nexport function vectorX(data, options = {}) {\n  const {\n    x = identity,\n    ...rest\n  } = options;\n  return new Vector(data, {\n    ...rest,\n    x\n  });\n}\nexport function vectorY(data, options = {}) {\n  const {\n    y = identity,\n    ...rest\n  } = options;\n  return new Vector(data, {\n    ...rest,\n    y\n  });\n}\nexport function spike(data, options = {}) {\n  const {\n    shape = shapeSpike,\n    stroke = defaults.stroke,\n    strokeWidth = 1,\n    fill = stroke,\n    fillOpacity = 0.3,\n    anchor = \"start\",\n    ...rest\n  } = options;\n  return vector(data, {\n    ...rest,\n    shape,\n    stroke,\n    strokeWidth,\n    fill,\n    fillOpacity,\n    anchor\n  });\n}","map":{"version":3,"names":["pathRound","path","create","Mark","maybeFrameAnchor","maybeNumberChannel","maybeTuple","keyword","identity","applyChannelStyles","applyDirectStyles","applyFrameAnchor","applyIndirectStyles","applyTransform","template","defaults","ariaLabel","fill","stroke","strokeWidth","strokeLinejoin","strokeLinecap","defaultRadius","wingRatio","shapeArrow","draw","context","l","r","wing","moveTo","lineTo","shapeSpike","shapes","Map","isShapeObject","value","maybeShape","shape","get","toLowerCase","Error","Vector","constructor","data","options","x","y","length","rotate","anchor","frameAnchor","vl","cl","vr","cr","scale","optional","render","index","scales","channels","dimensions","X","Y","L","A","cx","cy","call","g","selectAll","enter","append","attr","i","p","node","vector","rest","undefined","vectorX","vectorY","spike","fillOpacity"],"sources":["D:/Notebooks/notebooks-web/vue/node_modules/@observablehq/plot/src/marks/vector.js"],"sourcesContent":["import {pathRound as path} from \"d3\";\nimport {create} from \"../context.js\";\nimport {Mark} from \"../mark.js\";\nimport {maybeFrameAnchor, maybeNumberChannel, maybeTuple, keyword, identity} from \"../options.js\";\nimport {\n  applyChannelStyles,\n  applyDirectStyles,\n  applyFrameAnchor,\n  applyIndirectStyles,\n  applyTransform\n} from \"../style.js\";\nimport {template} from \"../template.js\";\n\nconst defaults = {\n  ariaLabel: \"vector\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 1.5,\n  strokeLinejoin: \"round\",\n  strokeLinecap: \"round\"\n};\n\nconst defaultRadius = 3.5;\n\n// The size of the arrowhead is proportional to its length, but we still allow\n// the relative size of the head to be controlled via the mark’s width option;\n// doubling the default radius will produce an arrowhead that is twice as big.\n// That said, we’ll probably want a arrow with a fixed head size, too.\nconst wingRatio = defaultRadius * 5;\n\nconst shapeArrow = {\n  draw(context, l, r) {\n    const wing = (l * r) / wingRatio;\n    context.moveTo(0, 0);\n    context.lineTo(0, -l);\n    context.moveTo(-wing, wing - l);\n    context.lineTo(0, -l);\n    context.lineTo(wing, wing - l);\n  }\n};\n\nconst shapeSpike = {\n  draw(context, l, r) {\n    context.moveTo(-r, 0);\n    context.lineTo(0, -l);\n    context.lineTo(r, 0);\n  }\n};\n\nconst shapes = new Map([\n  [\"arrow\", shapeArrow],\n  [\"spike\", shapeSpike]\n]);\n\nfunction isShapeObject(value) {\n  return value && typeof value.draw === \"function\";\n}\n\nfunction maybeShape(shape) {\n  if (isShapeObject(shape)) return shape;\n  const value = shapes.get(`${shape}`.toLowerCase());\n  if (value) return value;\n  throw new Error(`invalid shape: ${shape}`);\n}\n\nexport class Vector extends Mark {\n  constructor(data, options = {}) {\n    const {x, y, r = defaultRadius, length, rotate, shape = shapeArrow, anchor = \"middle\", frameAnchor} = options;\n    const [vl, cl] = maybeNumberChannel(length, 12);\n    const [vr, cr] = maybeNumberChannel(rotate, 0);\n    super(\n      data,\n      {\n        x: {value: x, scale: \"x\", optional: true},\n        y: {value: y, scale: \"y\", optional: true},\n        length: {value: vl, scale: \"length\", optional: true},\n        rotate: {value: vr, optional: true}\n      },\n      options,\n      defaults\n    );\n    this.r = +r;\n    this.length = cl;\n    this.rotate = cr;\n    this.shape = maybeShape(shape);\n    this.anchor = keyword(anchor, \"anchor\", [\"start\", \"middle\", \"end\"]);\n    this.frameAnchor = maybeFrameAnchor(frameAnchor);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {x, y} = scales;\n    const {x: X, y: Y, length: L, rotate: A} = channels;\n    const {length, rotate, anchor, shape, r} = this;\n    const [cx, cy] = applyFrameAnchor(this, dimensions);\n    return create(\"svg:g\", context)\n      .call(applyIndirectStyles, this, dimensions, context)\n      .call(applyTransform, this, {x: X && x, y: Y && y})\n      .call((g) =>\n        g\n          .selectAll()\n          .data(index)\n          .enter()\n          .append(\"path\")\n          .call(applyDirectStyles, this)\n          .attr(\n            \"transform\",\n            template`translate(${X ? (i) => X[i] : cx},${Y ? (i) => Y[i] : cy})${\n              A ? (i) => ` rotate(${A[i]})` : rotate ? ` rotate(${rotate})` : ``\n            }${\n              anchor === \"start\"\n                ? ``\n                : anchor === \"end\"\n                ? L\n                  ? (i) => ` translate(0,${L[i]})`\n                  : ` translate(0,${length})`\n                : L\n                ? (i) => ` translate(0,${L[i] / 2})`\n                : ` translate(0,${length / 2})`\n            }`\n          )\n          .attr(\n            \"d\",\n            L\n              ? (i) => {\n                  const p = path();\n                  shape.draw(p, L[i], r);\n                  return p;\n                }\n              : (() => {\n                  const p = path();\n                  shape.draw(p, length, r);\n                  return p;\n                })()\n          )\n          .call(applyChannelStyles, this, channels)\n      )\n      .node();\n  }\n}\n\nexport function vector(data, options = {}) {\n  let {x, y, ...rest} = options;\n  if (options.frameAnchor === undefined) [x, y] = maybeTuple(x, y);\n  return new Vector(data, {...rest, x, y});\n}\n\nexport function vectorX(data, options = {}) {\n  const {x = identity, ...rest} = options;\n  return new Vector(data, {...rest, x});\n}\n\nexport function vectorY(data, options = {}) {\n  const {y = identity, ...rest} = options;\n  return new Vector(data, {...rest, y});\n}\n\nexport function spike(data, options = {}) {\n  const {\n    shape = shapeSpike,\n    stroke = defaults.stroke,\n    strokeWidth = 1,\n    fill = stroke,\n    fillOpacity = 0.3,\n    anchor = \"start\",\n    ...rest\n  } = options;\n  return vector(data, {...rest, shape, stroke, strokeWidth, fill, fillOpacity, anchor});\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}