{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      notes: []\n    };\n  },\n  created() {\n    this.fetchNotes();\n  },\n  methods: {\n    fetchNotes() {\n      this.$request.get('/notes/selectAll').then(res => {\n        this.notes = res.data || []; // 假设后端返回的数据结构是正确的\n        console.log(\"Fetched notes:\", this.notes);\n        console.log(\"Fetched notes:\", this.res);\n      }).catch(error => {\n        console.error(\"Error fetching notes:\", error);\n      });\n    },\n    goToD3Runner(noteId) {\n      this.$router.push({\n        path: '/d3runner',\n        query: {\n          id: noteId\n        }\n      });\n    },\n    goToD3RunnerWithoutId() {\n      this.$router.push({\n        path: '/d3runner'\n      });\n    },\n    getPictureUrl(picture) {\n      // 如果 picture 已经是完整 URL，则直接返回\n      if (picture.startsWith('http')) {\n        return picture;\n      }\n      // 否则使用 baseUrl 拼接图片路径\n      return this.$baseUrl + picture;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","notes","created","fetchNotes","methods","$request","get","then","res","console","log","catch","error","goToD3Runner","noteId","$router","push","path","query","id","goToD3RunnerWithoutId","getPictureUrl","picture","startsWith","$baseUrl"],"sources":["src/views/manager/Notes.vue"],"sourcesContent":["<template>\r\n    <div class=\"notes-container\">\r\n      <el-row :gutter=\"20\">\r\n        <!-- Card with plus sign -->\r\n        <el-col :span=\"8\">\r\n          <div class=\"add-card\" @click=\"goToD3RunnerWithoutId\">\r\n            <div class=\"plus-sign\">+</div>\r\n          </div>\r\n        </el-col>\r\n  \r\n        <!-- Existing notes -->\r\n        <el-col :span=\"8\" v-for=\"note in notes\" :key=\"note.id\">\r\n          <el-card class=\"note-card\" shadow=\"hover\" style=\"margin-bottom: 20px; position: relative;\">\r\n            <!-- Note Picture -->\r\n            <img :src=\"note.picture\" alt=\"\" style=\"max-height: 250px; width: 100%; object-fit: cover; display: block; margin: 0 auto;\">\r\n            \r\n            <!-- Note Content -->\r\n            <div class=\"note-content\" style=\"background-color: rgba(0, 0, 0, 0.7); color: white; width: 100%; padding: 10px; position: absolute; bottom: 0; left: 0; display: flex; flex-direction: column; justify-content: space-between; align-items: flex-start;\">\r\n              <div style=\"display: flex; justify-content: space-between; width: 100%; align-items: center;\">\r\n                <p style=\"margin: 0;\">{{ note.comment }}</p>\r\n                <el-button type=\"primary\" @click=\"goToD3Runner(note.id)\" size=\"mini\">查看详情</el-button>\r\n              </div>\r\n              <small style=\"color: #ccc; font-size: 12px; margin-top: 5px;\">{{ note.date }}</small>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n\r\n\r\n\r\n\r\n      </el-row>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        notes: []\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchNotes();\r\n    },\r\n    methods: {\r\n        fetchNotes() {\r\n            this.$request.get('/notes/selectAll')\r\n              .then(res => {\r\n                this.notes = res.data || []; // 假设后端返回的数据结构是正确的\r\n                console.log(\"Fetched notes:\", this.notes);\r\n                console.log(\"Fetched notes:\", this.res);\r\n              })\r\n              .catch(error => {\r\n                console.error(\"Error fetching notes:\", error);\r\n              });\r\n          },\r\n        goToD3Runner(noteId) {\r\n          this.$router.push({ path: '/d3runner', query: { id: noteId } });\r\n        },\r\n        goToD3RunnerWithoutId() {\r\n          this.$router.push({ path: '/d3runner' });\r\n        },\r\n        getPictureUrl(picture) {\r\n          // 如果 picture 已经是完整 URL，则直接返回\r\n          if (picture.startsWith('http')) {\r\n            return picture;\r\n          }\r\n          // 否则使用 baseUrl 拼接图片路径\r\n          return this.$baseUrl + picture;\r\n        }\r\n      }\r\n    };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .notes-container {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .note-picture {\r\n    width: 100%;\r\n    height: 250px;\r\n    object-fit: cover;\r\n    border-radius: 15px;\r\n  }\r\n  \r\n  .note-content {\r\n    margin-top: 10px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .note-card {\r\n    border-radius: 15px;\r\n    width: 100%;\r\n    height: 350px; /* 调整卡片高度 */\r\n  }\r\n  \r\n  .add-card {\r\n    border: 2px dashed #d9d9d9;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 350px;\r\n    width: 100%; /* 同 note-card 保持一致的大小 */\r\n    border-radius: 15px;\r\n    cursor: pointer;\r\n    transition: border-color 0.3s ease;\r\n  }\r\n  \r\n  .add-card:hover {\r\n    border-color: #409EFF;\r\n  }\r\n  \r\n  .plus-sign {\r\n    font-size: 60px;\r\n    color: #409EFF;\r\n  }\r\n  </style>\r\n  "],"mappings":";AAoCA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACAD,WAAA;MACA,KAAAE,QAAA,CAAAC,GAAA,qBACAC,IAAA,CAAAC,GAAA;QACA,KAAAP,KAAA,GAAAO,GAAA,CAAAR,IAAA;QACAS,OAAA,CAAAC,GAAA,wBAAAT,KAAA;QACAQ,OAAA,CAAAC,GAAA,wBAAAF,GAAA;MACA,GACAG,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAG,KAAA,0BAAAA,KAAA;MACA;IACA;IACAC,aAAAC,MAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;QAAAC,KAAA;UAAAC,EAAA,EAAAL;QAAA;MAAA;IACA;IACAM,sBAAA;MACA,KAAAL,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;IACAI,cAAAC,OAAA;MACA;MACA,IAAAA,OAAA,CAAAC,UAAA;QACA,OAAAD,OAAA;MACA;MACA;MACA,YAAAE,QAAA,GAAAF,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}