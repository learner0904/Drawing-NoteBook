{"ast":null,"code":"export default {\n  props: {\n    chartData: {\n      \"name\": \"flare\",\n      \"children\": [{\n        \"name\": \"analytics\",\n        \"children\": [{\n          \"name\": \"cluster\",\n          \"children\": [{\n            \"name\": \"AgglomerativeCluster\",\n            \"value\": 3938\n          }, {\n            \"name\": \"CommunityStructure\",\n            \"value\": 3812\n          }, {\n            \"name\": \"HierarchicalCluster\",\n            \"value\": 6714\n          }, {\n            \"name\": \"MergeEdge\",\n            \"value\": 743\n          }]\n        }, {\n          \"name\": \"graph\",\n          \"children\": [{\n            \"name\": \"BetweennessCentrality\",\n            \"value\": 3534\n          }, {\n            \"name\": \"LinkDistance\",\n            \"value\": 5731\n          }, {\n            \"name\": \"MaxFlowMinCut\",\n            \"value\": 7840\n          }, {\n            \"name\": \"ShortestPaths\",\n            \"value\": 5914\n          }, {\n            \"name\": \"SpanningTree\",\n            \"value\": 3416\n          }]\n        }, {\n          \"name\": \"optimization\",\n          \"children\": [{\n            \"name\": \"AspectRatioBanker\",\n            \"value\": 7074\n          }]\n        }]\n      }, {\n        \"name\": \"animate\",\n        \"children\": [{\n          \"name\": \"Easing\",\n          \"value\": 17010\n        }, {\n          \"name\": \"FunctionSequence\",\n          \"value\": 5842\n        }, {\n          \"name\": \"interpolate\",\n          \"children\": [{\n            \"name\": \"ArrayInterpolator\",\n            \"value\": 1983\n          }, {\n            \"name\": \"ColorInterpolator\",\n            \"value\": 2047\n          }, {\n            \"name\": \"DateInterpolator\",\n            \"value\": 1375\n          }, {\n            \"name\": \"Interpolator\",\n            \"value\": 8746\n          }, {\n            \"name\": \"MatrixInterpolator\",\n            \"value\": 2202\n          }, {\n            \"name\": \"NumberInterpolator\",\n            \"value\": 1382\n          }, {\n            \"name\": \"ObjectInterpolator\",\n            \"value\": 1629\n          }, {\n            \"name\": \"PointInterpolator\",\n            \"value\": 1675\n          }, {\n            \"name\": \"RectangleInterpolator\",\n            \"value\": 2042\n          }]\n        }, {\n          \"name\": \"ISchedulable\",\n          \"value\": 1041\n        }, {\n          \"name\": \"Parallel\",\n          \"value\": 5176\n        }, {\n          \"name\": \"Pause\",\n          \"value\": 449\n        }, {\n          \"name\": \"Scheduler\",\n          \"value\": 5593\n        }, {\n          \"name\": \"Sequence\",\n          \"value\": 5534\n        }, {\n          \"name\": \"Transition\",\n          \"value\": 9201\n        }, {\n          \"name\": \"Transitioner\",\n          \"value\": 19975\n        }, {\n          \"name\": \"TransitionEvent\",\n          \"value\": 1116\n        }, {\n          \"name\": \"Tween\",\n          \"value\": 6006\n        }]\n      }, {\n        \"name\": \"data\",\n        \"children\": [{\n          \"name\": \"converters\",\n          \"children\": [{\n            \"name\": \"Converters\",\n            \"value\": 721\n          }, {\n            \"name\": \"DelimitedTextConverter\",\n            \"value\": 4294\n          }, {\n            \"name\": \"GraphMLConverter\",\n            \"value\": 9800\n          }, {\n            \"name\": \"IDataConverter\",\n            \"value\": 1314\n          }, {\n            \"name\": \"JSONConverter\",\n            \"value\": 2220\n          }]\n        }, {\n          \"name\": \"DataField\",\n          \"value\": 1759\n        }, {\n          \"name\": \"DataSchema\",\n          \"value\": 2165\n        }, {\n          \"name\": \"DataSet\",\n          \"value\": 586\n        }, {\n          \"name\": \"DataSource\",\n          \"value\": 3331\n        }, {\n          \"name\": \"DataTable\",\n          \"value\": 772\n        }, {\n          \"name\": \"DataUtil\",\n          \"value\": 3322\n        }]\n      }, {\n        \"name\": \"display\",\n        \"children\": [{\n          \"name\": \"DirtySprite\",\n          \"value\": 8833\n        }, {\n          \"name\": \"LineSprite\",\n          \"value\": 1732\n        }, {\n          \"name\": \"RectSprite\",\n          \"value\": 3623\n        }, {\n          \"name\": \"TextSprite\",\n          \"value\": 10066\n        }]\n      }, {\n        \"name\": \"flex\",\n        \"children\": [{\n          \"name\": \"FlareVis\",\n          \"value\": 4116\n        }]\n      }, {\n        \"name\": \"physics\",\n        \"children\": [{\n          \"name\": \"DragForce\",\n          \"value\": 1082\n        }, {\n          \"name\": \"GravityForce\",\n          \"value\": 1336\n        }, {\n          \"name\": \"IForce\",\n          \"value\": 319\n        }, {\n          \"name\": \"NBodyForce\",\n          \"value\": 10498\n        }, {\n          \"name\": \"Particle\",\n          \"value\": 2822\n        }, {\n          \"name\": \"Simulation\",\n          \"value\": 9983\n        }, {\n          \"name\": \"Spring\",\n          \"value\": 2213\n        }, {\n          \"name\": \"SpringForce\",\n          \"value\": 1681\n        }]\n      }, {\n        \"name\": \"query\",\n        \"children\": [{\n          \"name\": \"AggregateExpression\",\n          \"value\": 1616\n        }, {\n          \"name\": \"And\",\n          \"value\": 1027\n        }, {\n          \"name\": \"Arithmetic\",\n          \"value\": 3891\n        }, {\n          \"name\": \"Average\",\n          \"value\": 891\n        }, {\n          \"name\": \"BinaryExpression\",\n          \"value\": 2893\n        }, {\n          \"name\": \"Comparison\",\n          \"value\": 5103\n        }, {\n          \"name\": \"CompositeExpression\",\n          \"value\": 3677\n        }, {\n          \"name\": \"Count\",\n          \"value\": 781\n        }, {\n          \"name\": \"DateUtil\",\n          \"value\": 4141\n        }, {\n          \"name\": \"Distinct\",\n          \"value\": 933\n        }, {\n          \"name\": \"Expression\",\n          \"value\": 5130\n        }, {\n          \"name\": \"ExpressionIterator\",\n          \"value\": 3617\n        }, {\n          \"name\": \"Fn\",\n          \"value\": 3240\n        }, {\n          \"name\": \"If\",\n          \"value\": 2732\n        }, {\n          \"name\": \"IsA\",\n          \"value\": 2039\n        }, {\n          \"name\": \"Literal\",\n          \"value\": 1214\n        }, {\n          \"name\": \"Match\",\n          \"value\": 3748\n        }, {\n          \"name\": \"Maximum\",\n          \"value\": 843\n        }, {\n          \"name\": \"methods\",\n          \"children\": [{\n            \"name\": \"add\",\n            \"value\": 593\n          }, {\n            \"name\": \"and\",\n            \"value\": 330\n          }, {\n            \"name\": \"average\",\n            \"value\": 287\n          }, {\n            \"name\": \"count\",\n            \"value\": 277\n          }, {\n            \"name\": \"distinct\",\n            \"value\": 292\n          }, {\n            \"name\": \"div\",\n            \"value\": 595\n          }, {\n            \"name\": \"eq\",\n            \"value\": 594\n          }, {\n            \"name\": \"fn\",\n            \"value\": 460\n          }, {\n            \"name\": \"gt\",\n            \"value\": 603\n          }, {\n            \"name\": \"gte\",\n            \"value\": 625\n          }, {\n            \"name\": \"iff\",\n            \"value\": 748\n          }, {\n            \"name\": \"isa\",\n            \"value\": 461\n          }, {\n            \"name\": \"lt\",\n            \"value\": 597\n          }, {\n            \"name\": \"lte\",\n            \"value\": 619\n          }, {\n            \"name\": \"max\",\n            \"value\": 283\n          }, {\n            \"name\": \"min\",\n            \"value\": 283\n          }, {\n            \"name\": \"mod\",\n            \"value\": 591\n          }, {\n            \"name\": \"mul\",\n            \"value\": 603\n          }, {\n            \"name\": \"neq\",\n            \"value\": 599\n          }, {\n            \"name\": \"not\",\n            \"value\": 386\n          }, {\n            \"name\": \"or\",\n            \"value\": 323\n          }, {\n            \"name\": \"orderby\",\n            \"value\": 307\n          }, {\n            \"name\": \"range\",\n            \"value\": 772\n          }, {\n            \"name\": \"select\",\n            \"value\": 296\n          }, {\n            \"name\": \"stddev\",\n            \"value\": 363\n          }, {\n            \"name\": \"sub\",\n            \"value\": 600\n          }, {\n            \"name\": \"sum\",\n            \"value\": 280\n          }, {\n            \"name\": \"update\",\n            \"value\": 307\n          }, {\n            \"name\": \"variance\",\n            \"value\": 335\n          }, {\n            \"name\": \"where\",\n            \"value\": 299\n          }, {\n            \"name\": \"xor\",\n            \"value\": 354\n          }, {\n            \"name\": \"_\",\n            \"value\": 264\n          }]\n        }, {\n          \"name\": \"Minimum\",\n          \"value\": 843\n        }, {\n          \"name\": \"Not\",\n          \"value\": 1554\n        }, {\n          \"name\": \"Or\",\n          \"value\": 970\n        }, {\n          \"name\": \"Query\",\n          \"value\": 13896\n        }, {\n          \"name\": \"Range\",\n          \"value\": 1594\n        }, {\n          \"name\": \"StringUtil\",\n          \"value\": 4130\n        }, {\n          \"name\": \"Sum\",\n          \"value\": 791\n        }, {\n          \"name\": \"Variable\",\n          \"value\": 1124\n        }, {\n          \"name\": \"Variance\",\n          \"value\": 1876\n        }, {\n          \"name\": \"Xor\",\n          \"value\": 1101\n        }]\n      }, {\n        \"name\": \"scale\",\n        \"children\": [{\n          \"name\": \"IScaleMap\",\n          \"value\": 2105\n        }, {\n          \"name\": \"LinearScale\",\n          \"value\": 1316\n        }, {\n          \"name\": \"LogScale\",\n          \"value\": 3151\n        }, {\n          \"name\": \"OrdinalScale\",\n          \"value\": 3770\n        }, {\n          \"name\": \"QuantileScale\",\n          \"value\": 2435\n        }, {\n          \"name\": \"QuantitativeScale\",\n          \"value\": 4839\n        }, {\n          \"name\": \"RootScale\",\n          \"value\": 1756\n        }, {\n          \"name\": \"Scale\",\n          \"value\": 4268\n        }, {\n          \"name\": \"ScaleType\",\n          \"value\": 1821\n        }, {\n          \"name\": \"TimeScale\",\n          \"value\": 5833\n        }]\n      }, {\n        \"name\": \"util\",\n        \"children\": [{\n          \"name\": \"Arrays\",\n          \"value\": 8258\n        }, {\n          \"name\": \"Colors\",\n          \"value\": 10001\n        }, {\n          \"name\": \"Dates\",\n          \"value\": 8217\n        }, {\n          \"name\": \"Displays\",\n          \"value\": 12555\n        }, {\n          \"name\": \"Filter\",\n          \"value\": 2324\n        }, {\n          \"name\": \"Geometry\",\n          \"value\": 10993\n        }, {\n          \"name\": \"heap\",\n          \"children\": [{\n            \"name\": \"FibonacciHeap\",\n            \"value\": 9354\n          }, {\n            \"name\": \"HeapNode\",\n            \"value\": 1233\n          }]\n        }, {\n          \"name\": \"IEvaluable\",\n          \"value\": 335\n        }, {\n          \"name\": \"IPredicate\",\n          \"value\": 383\n        }, {\n          \"name\": \"IValueProxy\",\n          \"value\": 874\n        }, {\n          \"name\": \"math\",\n          \"children\": [{\n            \"name\": \"DenseMatrix\",\n            \"value\": 3165\n          }, {\n            \"name\": \"IMatrix\",\n            \"value\": 2815\n          }, {\n            \"name\": \"SparseMatrix\",\n            \"value\": 3366\n          }]\n        }, {\n          \"name\": \"Maths\",\n          \"value\": 17705\n        }, {\n          \"name\": \"Orientation\",\n          \"value\": 1486\n        }, {\n          \"name\": \"palette\",\n          \"children\": [{\n            \"name\": \"ColorPalette\",\n            \"value\": 6367\n          }, {\n            \"name\": \"Palette\",\n            \"value\": 1229\n          }, {\n            \"name\": \"ShapePalette\",\n            \"value\": 2059\n          }, {\n            \"name\": \"SizePalette\",\n            \"value\": 2291\n          }]\n        }, {\n          \"name\": \"Property\",\n          \"value\": 5559\n        }, {\n          \"name\": \"Shapes\",\n          \"value\": 19118\n        }, {\n          \"name\": \"Sort\",\n          \"value\": 6887\n        }, {\n          \"name\": \"Stats\",\n          \"value\": 6557\n        }, {\n          \"name\": \"Strings\",\n          \"value\": 22026\n        }]\n      }, {\n        \"name\": \"vis\",\n        \"children\": [{\n          \"name\": \"axis\",\n          \"children\": [{\n            \"name\": \"Axes\",\n            \"value\": 1302\n          }, {\n            \"name\": \"Axis\",\n            \"value\": 24593\n          }, {\n            \"name\": \"AxisGridLine\",\n            \"value\": 652\n          }, {\n            \"name\": \"AxisLabel\",\n            \"value\": 636\n          }, {\n            \"name\": \"CartesianAxes\",\n            \"value\": 6703\n          }]\n        }, {\n          \"name\": \"controls\",\n          \"children\": [{\n            \"name\": \"AnchorControl\",\n            \"value\": 2138\n          }, {\n            \"name\": \"ClickControl\",\n            \"value\": 3824\n          }, {\n            \"name\": \"Control\",\n            \"value\": 1353\n          }, {\n            \"name\": \"ControlList\",\n            \"value\": 4665\n          }, {\n            \"name\": \"DragControl\",\n            \"value\": 2649\n          }, {\n            \"name\": \"ExpandControl\",\n            \"value\": 2832\n          }, {\n            \"name\": \"HoverControl\",\n            \"value\": 4896\n          }, {\n            \"name\": \"IControl\",\n            \"value\": 763\n          }, {\n            \"name\": \"PanZoomControl\",\n            \"value\": 5222\n          }, {\n            \"name\": \"SelectionControl\",\n            \"value\": 7862\n          }, {\n            \"name\": \"TooltipControl\",\n            \"value\": 8435\n          }]\n        }, {\n          \"name\": \"data\",\n          \"children\": [{\n            \"name\": \"Data\",\n            \"value\": 20544\n          }, {\n            \"name\": \"DataList\",\n            \"value\": 19788\n          }, {\n            \"name\": \"DataSprite\",\n            \"value\": 10349\n          }, {\n            \"name\": \"EdgeSprite\",\n            \"value\": 3301\n          }, {\n            \"name\": \"NodeSprite\",\n            \"value\": 19382\n          }, {\n            \"name\": \"render\",\n            \"children\": [{\n              \"name\": \"ArrowType\",\n              \"value\": 698\n            }, {\n              \"name\": \"EdgeRenderer\",\n              \"value\": 5569\n            }, {\n              \"name\": \"IRenderer\",\n              \"value\": 353\n            }, {\n              \"name\": \"ShapeRenderer\",\n              \"value\": 2247\n            }]\n          }, {\n            \"name\": \"ScaleBinding\",\n            \"value\": 11275\n          }, {\n            \"name\": \"Tree\",\n            \"value\": 7147\n          }, {\n            \"name\": \"TreeBuilder\",\n            \"value\": 9930\n          }]\n        }, {\n          \"name\": \"events\",\n          \"children\": [{\n            \"name\": \"DataEvent\",\n            \"value\": 2313\n          }, {\n            \"name\": \"SelectionEvent\",\n            \"value\": 1880\n          }, {\n            \"name\": \"TooltipEvent\",\n            \"value\": 1701\n          }, {\n            \"name\": \"VisualizationEvent\",\n            \"value\": 1117\n          }]\n        }, {\n          \"name\": \"legend\",\n          \"children\": [{\n            \"name\": \"Legend\",\n            \"value\": 20859\n          }, {\n            \"name\": \"LegendItem\",\n            \"value\": 4614\n          }, {\n            \"name\": \"LegendRange\",\n            \"value\": 10530\n          }]\n        }, {\n          \"name\": \"operator\",\n          \"children\": [{\n            \"name\": \"distortion\",\n            \"children\": [{\n              \"name\": \"BifocalDistortion\",\n              \"value\": 4461\n            }, {\n              \"name\": \"Distortion\",\n              \"value\": 6314\n            }, {\n              \"name\": \"FisheyeDistortion\",\n              \"value\": 3444\n            }]\n          }, {\n            \"name\": \"encoder\",\n            \"children\": [{\n              \"name\": \"ColorEncoder\",\n              \"value\": 3179\n            }, {\n              \"name\": \"Encoder\",\n              \"value\": 4060\n            }, {\n              \"name\": \"PropertyEncoder\",\n              \"value\": 4138\n            }, {\n              \"name\": \"ShapeEncoder\",\n              \"value\": 1690\n            }, {\n              \"name\": \"SizeEncoder\",\n              \"value\": 1830\n            }]\n          }, {\n            \"name\": \"filter\",\n            \"children\": [{\n              \"name\": \"FisheyeTreeFilter\",\n              \"value\": 5219\n            }, {\n              \"name\": \"GraphDistanceFilter\",\n              \"value\": 3165\n            }, {\n              \"name\": \"VisibilityFilter\",\n              \"value\": 3509\n            }]\n          }, {\n            \"name\": \"IOperator\",\n            \"value\": 1286\n          }, {\n            \"name\": \"label\",\n            \"children\": [{\n              \"name\": \"Labeler\",\n              \"value\": 9956\n            }, {\n              \"name\": \"RadialLabeler\",\n              \"value\": 3899\n            }, {\n              \"name\": \"StackedAreaLabeler\",\n              \"value\": 3202\n            }]\n          }, {\n            \"name\": \"layout\",\n            \"children\": [{\n              \"name\": \"AxisLayout\",\n              \"value\": 6725\n            }, {\n              \"name\": \"BundledEdgeRouter\",\n              \"value\": 3727\n            }, {\n              \"name\": \"CircleLayout\",\n              \"value\": 9317\n            }, {\n              \"name\": \"CirclePackingLayout\",\n              \"value\": 12003\n            }, {\n              \"name\": \"DendrogramLayout\",\n              \"value\": 4853\n            }, {\n              \"name\": \"ForceDirectedLayout\",\n              \"value\": 8411\n            }, {\n              \"name\": \"IcicleTreeLayout\",\n              \"value\": 4864\n            }, {\n              \"name\": \"IndentedTreeLayout\",\n              \"value\": 3174\n            }, {\n              \"name\": \"Layout\",\n              \"value\": 7881\n            }, {\n              \"name\": \"NodeLinkTreeLayout\",\n              \"value\": 12870\n            }, {\n              \"name\": \"PieLayout\",\n              \"value\": 2728\n            }, {\n              \"name\": \"RadialTreeLayout\",\n              \"value\": 12348\n            }, {\n              \"name\": \"RandomLayout\",\n              \"value\": 870\n            }, {\n              \"name\": \"StackedAreaLayout\",\n              \"value\": 9121\n            }, {\n              \"name\": \"TreeMapLayout\",\n              \"value\": 9191\n            }]\n          }, {\n            \"name\": \"Operator\",\n            \"value\": 2490\n          }, {\n            \"name\": \"OperatorList\",\n            \"value\": 5248\n          }, {\n            \"name\": \"OperatorSequence\",\n            \"value\": 4190\n          }, {\n            \"name\": \"OperatorSwitch\",\n            \"value\": 2581\n          }, {\n            \"name\": \"SortOperator\",\n            \"value\": 2023\n          }]\n        }, {\n          \"name\": \"Visualization\",\n          \"value\": 16540\n        }]\n      }]\n    }\n  },\n  mounted() {\n    this.runInteractiveD3(this.chartData);\n  },\n  methods: {\n    runInteractiveD3(data) {\n      const width = 928;\n      const height = width;\n      const radius = width / 6;\n      const color = d3.scaleOrdinal(d3.quantize(d3.interpolateRainbow, data.children.length + 1));\n      const hierarchy = d3.hierarchy(data).sum(d => d.value).sort((a, b) => b.value - a.value);\n      const root = d3.partition().size([2 * Math.PI, hierarchy.height + 1])(hierarchy);\n      root.each(d => d.current = d);\n      const arc = d3.arc().startAngle(d => d.x0).endAngle(d => d.x1).padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005)).padRadius(radius * 1.5).innerRadius(d => d.y0 * radius).outerRadius(d => Math.max(d.y0 * radius, d.y1 * radius - 1));\n      const svg = d3.create(\"svg\").attr(\"viewBox\", [-width / 2, -height / 2, width, width]).style(\"font\", \"10px sans-serif\");\n      const path = svg.append(\"g\").selectAll(\"path\").data(root.descendants().slice(1)).join(\"path\").attr(\"fill\", d => {\n        while (d.depth > 1) d = d.parent;\n        return color(d.data.name);\n      }).attr(\"fill-opacity\", d => this.arcVisible(d.current) ? d.children ? 0.6 : 0.4 : 0).attr(\"pointer-events\", d => this.arcVisible(d.current) ? \"auto\" : \"none\").attr(\"d\", d => arc(d.current));\n      path.filter(d => d.children).style(\"cursor\", \"pointer\").on(\"click\", clicked);\n      const format = d3.format(\",d\");\n      path.append(\"title\").text(d => `${d.ancestors().map(d => d.data.name).reverse().join(\"/\")}\\n${format(d.value)}`);\n      const label = svg.append(\"g\").attr(\"pointer-events\", \"none\").attr(\"text-anchor\", \"middle\").style(\"user-select\", \"none\").selectAll(\"text\").data(root.descendants().slice(1)).join(\"text\").attr(\"dy\", \"0.35em\").attr(\"fill-opacity\", d => +this.labelVisible(d.current)).attr(\"transform\", d => this.labelTransform(d.current)).text(d => d.data.name);\n      const parent = svg.append(\"circle\").datum(root).attr(\"r\", radius).attr(\"fill\", \"none\").attr(\"pointer-events\", \"all\").on(\"click\", clicked);\n      function clicked(event, p) {\n        parent.datum(p.parent || root);\n        root.each(d => {\n          d.target = {\n            x0: Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n            x1: Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n            y0: Math.max(0, d.y0 - p.depth),\n            y1: Math.max(0, d.y1 - p.depth)\n          };\n        });\n        const t = svg.transition().duration(750);\n        path.transition(t).tween(\"data\", d => {\n          const i = d3.interpolate(d.current, d.target);\n          return t => d.current = i(t);\n        }).filter(function (d) {\n          return +this.getAttribute(\"fill-opacity\") || arcVisible(d.target);\n        }).attr(\"fill-opacity\", d => arcVisible(d.target) ? d.children ? 0.6 : 0.4 : 0).attr(\"pointer-events\", d => arcVisible(d.target) ? \"auto\" : \"none\").attrTween(\"d\", d => () => arc(d.current));\n        label.filter(function (d) {\n          return +this.getAttribute(\"fill-opacity\") || labelVisible(d.target);\n        }).transition(t).attr(\"fill-opacity\", d => +labelVisible(d.target)).attrTween(\"transform\", d => () => labelTransform(d.current));\n      }\n      this.parent = parent; // Store reference for later use\n      this.svg = svg; // Store reference for later use\n      document.getElementById(\"chart\").appendChild(svg.node());\n    },\n    arcVisible(d) {\n      return d.y1 <= 3 && d.y0 >= 1 && d.x1 > d.x0;\n    },\n    labelVisible(d) {\n      return d.y1 <= 3 && d.y0 >= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) > 0.03;\n    },\n    labelTransform(d) {\n      const x = (d.x0 + d.x1) / 2 * 180 / Math.PI;\n      const y = (d.y0 + d.y1) / 2 * radius;\n      return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\n    }\n  }\n};","map":{"version":3,"names":["props","chartData","mounted","runInteractiveD3","methods","data","width","height","radius","color","d3","scaleOrdinal","quantize","interpolateRainbow","children","length","hierarchy","sum","d","value","sort","a","b","root","partition","size","Math","PI","each","current","arc","startAngle","x0","endAngle","x1","padAngle","min","padRadius","innerRadius","y0","outerRadius","max","y1","svg","create","attr","style","path","append","selectAll","descendants","slice","join","depth","parent","name","arcVisible","filter","on","clicked","format","text","ancestors","map","reverse","label","labelVisible","labelTransform","datum","event","p","target","t","transition","duration","tween","i","interpolate","getAttribute","attrTween","document","getElementById","appendChild","node","x","y"],"sources":["src/views/manager/D3Runner.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>D3 Interactive Chart</h1>\r\n    <div id=\"chart\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    chartData: {\r\n \"name\": \"flare\",\r\n \"children\": [\r\n  {\r\n   \"name\": \"analytics\",\r\n   \"children\": [\r\n    {\r\n     \"name\": \"cluster\",\r\n     \"children\": [\r\n      {\"name\": \"AgglomerativeCluster\", \"value\": 3938},\r\n      {\"name\": \"CommunityStructure\", \"value\": 3812},\r\n      {\"name\": \"HierarchicalCluster\", \"value\": 6714},\r\n      {\"name\": \"MergeEdge\", \"value\": 743}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"graph\",\r\n     \"children\": [\r\n      {\"name\": \"BetweennessCentrality\", \"value\": 3534},\r\n      {\"name\": \"LinkDistance\", \"value\": 5731},\r\n      {\"name\": \"MaxFlowMinCut\", \"value\": 7840},\r\n      {\"name\": \"ShortestPaths\", \"value\": 5914},\r\n      {\"name\": \"SpanningTree\", \"value\": 3416}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"optimization\",\r\n     \"children\": [\r\n      {\"name\": \"AspectRatioBanker\", \"value\": 7074}\r\n     ]\r\n    }\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"animate\",\r\n   \"children\": [\r\n    {\"name\": \"Easing\", \"value\": 17010},\r\n    {\"name\": \"FunctionSequence\", \"value\": 5842},\r\n    {\r\n     \"name\": \"interpolate\",\r\n     \"children\": [\r\n      {\"name\": \"ArrayInterpolator\", \"value\": 1983},\r\n      {\"name\": \"ColorInterpolator\", \"value\": 2047},\r\n      {\"name\": \"DateInterpolator\", \"value\": 1375},\r\n      {\"name\": \"Interpolator\", \"value\": 8746},\r\n      {\"name\": \"MatrixInterpolator\", \"value\": 2202},\r\n      {\"name\": \"NumberInterpolator\", \"value\": 1382},\r\n      {\"name\": \"ObjectInterpolator\", \"value\": 1629},\r\n      {\"name\": \"PointInterpolator\", \"value\": 1675},\r\n      {\"name\": \"RectangleInterpolator\", \"value\": 2042}\r\n     ]\r\n    },\r\n    {\"name\": \"ISchedulable\", \"value\": 1041},\r\n    {\"name\": \"Parallel\", \"value\": 5176},\r\n    {\"name\": \"Pause\", \"value\": 449},\r\n    {\"name\": \"Scheduler\", \"value\": 5593},\r\n    {\"name\": \"Sequence\", \"value\": 5534},\r\n    {\"name\": \"Transition\", \"value\": 9201},\r\n    {\"name\": \"Transitioner\", \"value\": 19975},\r\n    {\"name\": \"TransitionEvent\", \"value\": 1116},\r\n    {\"name\": \"Tween\", \"value\": 6006}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"data\",\r\n   \"children\": [\r\n    {\r\n     \"name\": \"converters\",\r\n     \"children\": [\r\n      {\"name\": \"Converters\", \"value\": 721},\r\n      {\"name\": \"DelimitedTextConverter\", \"value\": 4294},\r\n      {\"name\": \"GraphMLConverter\", \"value\": 9800},\r\n      {\"name\": \"IDataConverter\", \"value\": 1314},\r\n      {\"name\": \"JSONConverter\", \"value\": 2220}\r\n     ]\r\n    },\r\n    {\"name\": \"DataField\", \"value\": 1759},\r\n    {\"name\": \"DataSchema\", \"value\": 2165},\r\n    {\"name\": \"DataSet\", \"value\": 586},\r\n    {\"name\": \"DataSource\", \"value\": 3331},\r\n    {\"name\": \"DataTable\", \"value\": 772},\r\n    {\"name\": \"DataUtil\", \"value\": 3322}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"display\",\r\n   \"children\": [\r\n    {\"name\": \"DirtySprite\", \"value\": 8833},\r\n    {\"name\": \"LineSprite\", \"value\": 1732},\r\n    {\"name\": \"RectSprite\", \"value\": 3623},\r\n    {\"name\": \"TextSprite\", \"value\": 10066}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"flex\",\r\n   \"children\": [\r\n    {\"name\": \"FlareVis\", \"value\": 4116}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"physics\",\r\n   \"children\": [\r\n    {\"name\": \"DragForce\", \"value\": 1082},\r\n    {\"name\": \"GravityForce\", \"value\": 1336},\r\n    {\"name\": \"IForce\", \"value\": 319},\r\n    {\"name\": \"NBodyForce\", \"value\": 10498},\r\n    {\"name\": \"Particle\", \"value\": 2822},\r\n    {\"name\": \"Simulation\", \"value\": 9983},\r\n    {\"name\": \"Spring\", \"value\": 2213},\r\n    {\"name\": \"SpringForce\", \"value\": 1681}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"query\",\r\n   \"children\": [\r\n    {\"name\": \"AggregateExpression\", \"value\": 1616},\r\n    {\"name\": \"And\", \"value\": 1027},\r\n    {\"name\": \"Arithmetic\", \"value\": 3891},\r\n    {\"name\": \"Average\", \"value\": 891},\r\n    {\"name\": \"BinaryExpression\", \"value\": 2893},\r\n    {\"name\": \"Comparison\", \"value\": 5103},\r\n    {\"name\": \"CompositeExpression\", \"value\": 3677},\r\n    {\"name\": \"Count\", \"value\": 781},\r\n    {\"name\": \"DateUtil\", \"value\": 4141},\r\n    {\"name\": \"Distinct\", \"value\": 933},\r\n    {\"name\": \"Expression\", \"value\": 5130},\r\n    {\"name\": \"ExpressionIterator\", \"value\": 3617},\r\n    {\"name\": \"Fn\", \"value\": 3240},\r\n    {\"name\": \"If\", \"value\": 2732},\r\n    {\"name\": \"IsA\", \"value\": 2039},\r\n    {\"name\": \"Literal\", \"value\": 1214},\r\n    {\"name\": \"Match\", \"value\": 3748},\r\n    {\"name\": \"Maximum\", \"value\": 843},\r\n    {\r\n     \"name\": \"methods\",\r\n     \"children\": [\r\n      {\"name\": \"add\", \"value\": 593},\r\n      {\"name\": \"and\", \"value\": 330},\r\n      {\"name\": \"average\", \"value\": 287},\r\n      {\"name\": \"count\", \"value\": 277},\r\n      {\"name\": \"distinct\", \"value\": 292},\r\n      {\"name\": \"div\", \"value\": 595},\r\n      {\"name\": \"eq\", \"value\": 594},\r\n      {\"name\": \"fn\", \"value\": 460},\r\n      {\"name\": \"gt\", \"value\": 603},\r\n      {\"name\": \"gte\", \"value\": 625},\r\n      {\"name\": \"iff\", \"value\": 748},\r\n      {\"name\": \"isa\", \"value\": 461},\r\n      {\"name\": \"lt\", \"value\": 597},\r\n      {\"name\": \"lte\", \"value\": 619},\r\n      {\"name\": \"max\", \"value\": 283},\r\n      {\"name\": \"min\", \"value\": 283},\r\n      {\"name\": \"mod\", \"value\": 591},\r\n      {\"name\": \"mul\", \"value\": 603},\r\n      {\"name\": \"neq\", \"value\": 599},\r\n      {\"name\": \"not\", \"value\": 386},\r\n      {\"name\": \"or\", \"value\": 323},\r\n      {\"name\": \"orderby\", \"value\": 307},\r\n      {\"name\": \"range\", \"value\": 772},\r\n      {\"name\": \"select\", \"value\": 296},\r\n      {\"name\": \"stddev\", \"value\": 363},\r\n      {\"name\": \"sub\", \"value\": 600},\r\n      {\"name\": \"sum\", \"value\": 280},\r\n      {\"name\": \"update\", \"value\": 307},\r\n      {\"name\": \"variance\", \"value\": 335},\r\n      {\"name\": \"where\", \"value\": 299},\r\n      {\"name\": \"xor\", \"value\": 354},\r\n      {\"name\": \"_\", \"value\": 264}\r\n     ]\r\n    },\r\n    {\"name\": \"Minimum\", \"value\": 843},\r\n    {\"name\": \"Not\", \"value\": 1554},\r\n    {\"name\": \"Or\", \"value\": 970},\r\n    {\"name\": \"Query\", \"value\": 13896},\r\n    {\"name\": \"Range\", \"value\": 1594},\r\n    {\"name\": \"StringUtil\", \"value\": 4130},\r\n    {\"name\": \"Sum\", \"value\": 791},\r\n    {\"name\": \"Variable\", \"value\": 1124},\r\n    {\"name\": \"Variance\", \"value\": 1876},\r\n    {\"name\": \"Xor\", \"value\": 1101}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"scale\",\r\n   \"children\": [\r\n    {\"name\": \"IScaleMap\", \"value\": 2105},\r\n    {\"name\": \"LinearScale\", \"value\": 1316},\r\n    {\"name\": \"LogScale\", \"value\": 3151},\r\n    {\"name\": \"OrdinalScale\", \"value\": 3770},\r\n    {\"name\": \"QuantileScale\", \"value\": 2435},\r\n    {\"name\": \"QuantitativeScale\", \"value\": 4839},\r\n    {\"name\": \"RootScale\", \"value\": 1756},\r\n    {\"name\": \"Scale\", \"value\": 4268},\r\n    {\"name\": \"ScaleType\", \"value\": 1821},\r\n    {\"name\": \"TimeScale\", \"value\": 5833}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"util\",\r\n   \"children\": [\r\n    {\"name\": \"Arrays\", \"value\": 8258},\r\n    {\"name\": \"Colors\", \"value\": 10001},\r\n    {\"name\": \"Dates\", \"value\": 8217},\r\n    {\"name\": \"Displays\", \"value\": 12555},\r\n    {\"name\": \"Filter\", \"value\": 2324},\r\n    {\"name\": \"Geometry\", \"value\": 10993},\r\n    {\r\n     \"name\": \"heap\",\r\n     \"children\": [\r\n      {\"name\": \"FibonacciHeap\", \"value\": 9354},\r\n      {\"name\": \"HeapNode\", \"value\": 1233}\r\n     ]\r\n    },\r\n    {\"name\": \"IEvaluable\", \"value\": 335},\r\n    {\"name\": \"IPredicate\", \"value\": 383},\r\n    {\"name\": \"IValueProxy\", \"value\": 874},\r\n    {\r\n     \"name\": \"math\",\r\n     \"children\": [\r\n      {\"name\": \"DenseMatrix\", \"value\": 3165},\r\n      {\"name\": \"IMatrix\", \"value\": 2815},\r\n      {\"name\": \"SparseMatrix\", \"value\": 3366}\r\n     ]\r\n    },\r\n    {\"name\": \"Maths\", \"value\": 17705},\r\n    {\"name\": \"Orientation\", \"value\": 1486},\r\n    {\r\n     \"name\": \"palette\",\r\n     \"children\": [\r\n      {\"name\": \"ColorPalette\", \"value\": 6367},\r\n      {\"name\": \"Palette\", \"value\": 1229},\r\n      {\"name\": \"ShapePalette\", \"value\": 2059},\r\n      {\"name\": \"SizePalette\", \"value\": 2291}\r\n     ]\r\n    },\r\n    {\"name\": \"Property\", \"value\": 5559},\r\n    {\"name\": \"Shapes\", \"value\": 19118},\r\n    {\"name\": \"Sort\", \"value\": 6887},\r\n    {\"name\": \"Stats\", \"value\": 6557},\r\n    {\"name\": \"Strings\", \"value\": 22026}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"vis\",\r\n   \"children\": [\r\n    {\r\n     \"name\": \"axis\",\r\n     \"children\": [\r\n      {\"name\": \"Axes\", \"value\": 1302},\r\n      {\"name\": \"Axis\", \"value\": 24593},\r\n      {\"name\": \"AxisGridLine\", \"value\": 652},\r\n      {\"name\": \"AxisLabel\", \"value\": 636},\r\n      {\"name\": \"CartesianAxes\", \"value\": 6703}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"controls\",\r\n     \"children\": [\r\n      {\"name\": \"AnchorControl\", \"value\": 2138},\r\n      {\"name\": \"ClickControl\", \"value\": 3824},\r\n      {\"name\": \"Control\", \"value\": 1353},\r\n      {\"name\": \"ControlList\", \"value\": 4665},\r\n      {\"name\": \"DragControl\", \"value\": 2649},\r\n      {\"name\": \"ExpandControl\", \"value\": 2832},\r\n      {\"name\": \"HoverControl\", \"value\": 4896},\r\n      {\"name\": \"IControl\", \"value\": 763},\r\n      {\"name\": \"PanZoomControl\", \"value\": 5222},\r\n      {\"name\": \"SelectionControl\", \"value\": 7862},\r\n      {\"name\": \"TooltipControl\", \"value\": 8435}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"data\",\r\n     \"children\": [\r\n      {\"name\": \"Data\", \"value\": 20544},\r\n      {\"name\": \"DataList\", \"value\": 19788},\r\n      {\"name\": \"DataSprite\", \"value\": 10349},\r\n      {\"name\": \"EdgeSprite\", \"value\": 3301},\r\n      {\"name\": \"NodeSprite\", \"value\": 19382},\r\n      {\r\n       \"name\": \"render\",\r\n       \"children\": [\r\n        {\"name\": \"ArrowType\", \"value\": 698},\r\n        {\"name\": \"EdgeRenderer\", \"value\": 5569},\r\n        {\"name\": \"IRenderer\", \"value\": 353},\r\n        {\"name\": \"ShapeRenderer\", \"value\": 2247}\r\n       ]\r\n      },\r\n      {\"name\": \"ScaleBinding\", \"value\": 11275},\r\n      {\"name\": \"Tree\", \"value\": 7147},\r\n      {\"name\": \"TreeBuilder\", \"value\": 9930}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"events\",\r\n     \"children\": [\r\n      {\"name\": \"DataEvent\", \"value\": 2313},\r\n      {\"name\": \"SelectionEvent\", \"value\": 1880},\r\n      {\"name\": \"TooltipEvent\", \"value\": 1701},\r\n      {\"name\": \"VisualizationEvent\", \"value\": 1117}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"legend\",\r\n     \"children\": [\r\n      {\"name\": \"Legend\", \"value\": 20859},\r\n      {\"name\": \"LegendItem\", \"value\": 4614},\r\n      {\"name\": \"LegendRange\", \"value\": 10530}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"operator\",\r\n     \"children\": [\r\n      {\r\n       \"name\": \"distortion\",\r\n       \"children\": [\r\n        {\"name\": \"BifocalDistortion\", \"value\": 4461},\r\n        {\"name\": \"Distortion\", \"value\": 6314},\r\n        {\"name\": \"FisheyeDistortion\", \"value\": 3444}\r\n       ]\r\n      },\r\n      {\r\n       \"name\": \"encoder\",\r\n       \"children\": [\r\n        {\"name\": \"ColorEncoder\", \"value\": 3179},\r\n        {\"name\": \"Encoder\", \"value\": 4060},\r\n        {\"name\": \"PropertyEncoder\", \"value\": 4138},\r\n        {\"name\": \"ShapeEncoder\", \"value\": 1690},\r\n        {\"name\": \"SizeEncoder\", \"value\": 1830}\r\n       ]\r\n      },\r\n      {\r\n       \"name\": \"filter\",\r\n       \"children\": [\r\n        {\"name\": \"FisheyeTreeFilter\", \"value\": 5219},\r\n        {\"name\": \"GraphDistanceFilter\", \"value\": 3165},\r\n        {\"name\": \"VisibilityFilter\", \"value\": 3509}\r\n       ]\r\n      },\r\n      {\"name\": \"IOperator\", \"value\": 1286},\r\n      {\r\n       \"name\": \"label\",\r\n       \"children\": [\r\n        {\"name\": \"Labeler\", \"value\": 9956},\r\n        {\"name\": \"RadialLabeler\", \"value\": 3899},\r\n        {\"name\": \"StackedAreaLabeler\", \"value\": 3202}\r\n       ]\r\n      },\r\n      {\r\n       \"name\": \"layout\",\r\n       \"children\": [\r\n        {\"name\": \"AxisLayout\", \"value\": 6725},\r\n        {\"name\": \"BundledEdgeRouter\", \"value\": 3727},\r\n        {\"name\": \"CircleLayout\", \"value\": 9317},\r\n        {\"name\": \"CirclePackingLayout\", \"value\": 12003},\r\n        {\"name\": \"DendrogramLayout\", \"value\": 4853},\r\n        {\"name\": \"ForceDirectedLayout\", \"value\": 8411},\r\n        {\"name\": \"IcicleTreeLayout\", \"value\": 4864},\r\n        {\"name\": \"IndentedTreeLayout\", \"value\": 3174},\r\n        {\"name\": \"Layout\", \"value\": 7881},\r\n        {\"name\": \"NodeLinkTreeLayout\", \"value\": 12870},\r\n        {\"name\": \"PieLayout\", \"value\": 2728},\r\n        {\"name\": \"RadialTreeLayout\", \"value\": 12348},\r\n        {\"name\": \"RandomLayout\", \"value\": 870},\r\n        {\"name\": \"StackedAreaLayout\", \"value\": 9121},\r\n        {\"name\": \"TreeMapLayout\", \"value\": 9191}\r\n       ]\r\n      },\r\n      {\"name\": \"Operator\", \"value\": 2490},\r\n      {\"name\": \"OperatorList\", \"value\": 5248},\r\n      {\"name\": \"OperatorSequence\", \"value\": 4190},\r\n      {\"name\": \"OperatorSwitch\", \"value\": 2581},\r\n      {\"name\": \"SortOperator\", \"value\": 2023}\r\n     ]\r\n    },\r\n    {\"name\": \"Visualization\", \"value\": 16540}\r\n   ]\r\n  }\r\n ]\r\n}\r\n  },\r\n  mounted() {\r\n    this.runInteractiveD3(this.chartData);\r\n  },\r\n  methods: {\r\n    runInteractiveD3(data) {\r\n      const width = 928;\r\n      const height = width;\r\n      const radius = width / 6;\r\n\r\n      const color = d3.scaleOrdinal(d3.quantize(d3.interpolateRainbow, data.children.length + 1));\r\n\r\n      const hierarchy = d3.hierarchy(data).sum(d => d.value).sort((a, b) => b.value - a.value);\r\n      const root = d3.partition().size([2 * Math.PI, hierarchy.height + 1])(hierarchy);\r\n      root.each(d => (d.current = d));\r\n\r\n      const arc = d3\r\n        .arc()\r\n        .startAngle(d => d.x0)\r\n        .endAngle(d => d.x1)\r\n        .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\r\n        .padRadius(radius * 1.5)\r\n        .innerRadius(d => d.y0 * radius)\r\n        .outerRadius(d => Math.max(d.y0 * radius, d.y1 * radius - 1));\r\n\r\n      const svg = d3\r\n        .create(\"svg\")\r\n        .attr(\"viewBox\", [-width / 2, -height / 2, width, width])\r\n        .style(\"font\", \"10px sans-serif\");\r\n\r\n      const path = svg\r\n        .append(\"g\")\r\n        .selectAll(\"path\")\r\n        .data(root.descendants().slice(1))\r\n        .join(\"path\")\r\n        .attr(\"fill\", d => {\r\n          while (d.depth > 1) d = d.parent;\r\n          return color(d.data.name);\r\n        })\r\n        .attr(\"fill-opacity\", d => (this.arcVisible(d.current) ? (d.children ? 0.6 : 0.4) : 0))\r\n        .attr(\"pointer-events\", d => (this.arcVisible(d.current) ? \"auto\" : \"none\"))\r\n        .attr(\"d\", d => arc(d.current));\r\n\r\n      path.filter(d => d.children).style(\"cursor\", \"pointer\").on(\"click\", clicked);\r\n\r\n      const format = d3.format(\",d\");\r\n      path.append(\"title\").text(d => `${d.ancestors().map(d => d.data.name).reverse().join(\"/\")}\\n${format(d.value)}`);\r\n\r\n      const label = svg\r\n        .append(\"g\")\r\n        .attr(\"pointer-events\", \"none\")\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .style(\"user-select\", \"none\")\r\n        .selectAll(\"text\")\r\n        .data(root.descendants().slice(1))\r\n        .join(\"text\")\r\n        .attr(\"dy\", \"0.35em\")\r\n        .attr(\"fill-opacity\", d => +this.labelVisible(d.current))\r\n        .attr(\"transform\", d => this.labelTransform(d.current))\r\n        .text(d => d.data.name);\r\n\r\n      const parent = svg\r\n        .append(\"circle\")\r\n        .datum(root)\r\n        .attr(\"r\", radius)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"pointer-events\", \"all\")\r\n        .on(\"click\", clicked);\r\n\r\n      function clicked(event, p) {\r\n        parent.datum(p.parent || root);\r\n        root.each(d => {\r\n          d.target = {\r\n            x0: Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\r\n            x1: Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\r\n            y0: Math.max(0, d.y0 - p.depth),\r\n            y1: Math.max(0, d.y1 - p.depth)\r\n          };\r\n        });\r\n\r\n        const t = svg.transition().duration(750);\r\n        path\r\n          .transition(t)\r\n          .tween(\"data\", d => {\r\n            const i = d3.interpolate(d.current, d.target);\r\n            return t => (d.current = i(t));\r\n          })\r\n          .filter(function(d) {\r\n            return +this.getAttribute(\"fill-opacity\") || arcVisible(d.target);\r\n          })\r\n          .attr(\"fill-opacity\", d => (arcVisible(d.target) ? (d.children ? 0.6 : 0.4) : 0))\r\n          .attr(\"pointer-events\", d => (arcVisible(d.target) ? \"auto\" : \"none\"))\r\n          .attrTween(\"d\", d => () => arc(d.current));\r\n\r\n        label\r\n          .filter(function(d) {\r\n            return +this.getAttribute(\"fill-opacity\") || labelVisible(d.target);\r\n          })\r\n          .transition(t)\r\n          .attr(\"fill-opacity\", d => +labelVisible(d.target))\r\n          .attrTween(\"transform\", d => () => labelTransform(d.current));\r\n      }\r\n\r\n      this.parent = parent; // Store reference for later use\r\n      this.svg = svg; // Store reference for later use\r\n      document.getElementById(\"chart\").appendChild(svg.node());\r\n    },\r\n\r\n    arcVisible(d) {\r\n      return d.y1 <= 3 && d.y0 >= 1 && d.x1 > d.x0;\r\n    },\r\n\r\n    labelVisible(d) {\r\n      return d.y1 <= 3 && d.y0 >= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) > 0.03;\r\n    },\r\n\r\n    labelTransform(d) {\r\n      const x = ((d.x0 + d.x1) / 2) * 180 / Math.PI;\r\n      const y = ((d.y0 + d.y1) / 2) * radius;\r\n      return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* Add any styles you want for your chart */\r\n</style>\r\n"],"mappings":"AAQA;EACAA,KAAA;IACAC,SAAA;MACA;MACA,aACA;QACA;QACA,aACA;UACA;UACA,aACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA;QAEA,GACA;UACA;UACA,aACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA;QAEA,GACA;UACA;UACA,aACA;YAAA;YAAA;UAAA;QAEA;MAEA,GACA;QACA;QACA,aACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UACA;UACA,aACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA;QAEA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA;MAEA,GACA;QACA;QACA,aACA;UACA;UACA,aACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA;QAEA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA;MAEA,GACA;QACA;QACA,aACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA;MAEA,GACA;QACA;QACA,aACA;UAAA;UAAA;QAAA;MAEA,GACA;QACA;QACA,aACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA;MAEA,GACA;QACA;QACA,aACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UACA;UACA,aaACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA;MAEA,GACA;QACA;QACA,aACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UACA;UACA,aACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA;QAEA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UACA;UACA,aACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA;QAEA,GACA;UAAA;UAAA;QAAA,GACA;UAAA;UAAA;QAAA,GACA;UACA;UACA,aACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UAAA,GACA;YAAA;YAAA;UA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}