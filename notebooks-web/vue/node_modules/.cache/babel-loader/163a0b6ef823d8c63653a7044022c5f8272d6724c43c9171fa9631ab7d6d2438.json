{"ast":null,"code":"import { create } from \"../context.js\";\nimport { Mark } from \"../mark.js\";\nimport { hasXY, identity, indexOf } from \"../options.js\";\nimport { isCollapsed } from \"../scales.js\";\nimport { applyAttr, applyChannelStyles, applyDirectStyles, applyIndirectStyles, applyTransform } from \"../style.js\";\nimport { maybeIdentityX, maybeIdentityY } from \"../transforms/identity.js\";\nimport { maybeIntervalX, maybeIntervalY } from \"../transforms/interval.js\";\nimport { maybeStackX, maybeStackY } from \"../transforms/stack.js\";\nimport { applyRoundedRect, rectInsets, rectRadii } from \"./rect.js\";\nconst barDefaults = {\n  ariaLabel: \"bar\"\n};\nexport class AbstractBar extends Mark {\n  constructor(data, channels, options = {}, defaults = barDefaults) {\n    super(data, channels, options, defaults);\n    rectInsets(this, options);\n    rectRadii(this, options);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      rx,\n      ry,\n      rx1y1,\n      rx1y2,\n      rx2y1,\n      rx2y2\n    } = this;\n    const x = this._x(scales, channels, dimensions);\n    const y = this._y(scales, channels, dimensions);\n    const w = this._width(scales, channels, dimensions);\n    const h = this._height(scales, channels, dimensions);\n    return create(\"svg:g\", context).call(applyIndirectStyles, this, dimensions, context).call(this._transform, this, scales).call(g => g.selectAll().data(index).enter().call(rx1y1 || rx1y2 || rx2y1 || rx2y2 ? g => g.append(\"path\").call(applyDirectStyles, this).call(applyRoundedRect, x, y, add(x, w), add(y, h), this).call(applyChannelStyles, this, channels) : g => g.append(\"rect\").call(applyDirectStyles, this).attr(\"x\", x).attr(\"width\", w).attr(\"y\", y).attr(\"height\", h).call(applyAttr, \"rx\", rx).call(applyAttr, \"ry\", ry).call(applyChannelStyles, this, channels))).node();\n  }\n  _x(scales, {\n    x: X\n  }, {\n    marginLeft\n  }) {\n    const {\n      insetLeft\n    } = this;\n    return X ? i => X[i] + insetLeft : marginLeft + insetLeft;\n  }\n  _y(scales, {\n    y: Y\n  }, {\n    marginTop\n  }) {\n    const {\n      insetTop\n    } = this;\n    return Y ? i => Y[i] + insetTop : marginTop + insetTop;\n  }\n  _width({\n    x\n  }, {\n    x: X\n  }, {\n    marginRight,\n    marginLeft,\n    width\n  }) {\n    const {\n      insetLeft,\n      insetRight\n    } = this;\n    const bandwidth = X && x ? x.bandwidth() : width - marginRight - marginLeft;\n    return Math.max(0, bandwidth - insetLeft - insetRight);\n  }\n  _height({\n    y\n  }, {\n    y: Y\n  }, {\n    marginTop,\n    marginBottom,\n    height\n  }) {\n    const {\n      insetTop,\n      insetBottom\n    } = this;\n    const bandwidth = Y && y ? y.bandwidth() : height - marginTop - marginBottom;\n    return Math.max(0, bandwidth - insetTop - insetBottom);\n  }\n}\nfunction add(a, b) {\n  return typeof a === \"function\" && typeof b === \"function\" ? i => a(i) + b(i) : typeof a === \"function\" ? i => a(i) + b : typeof b === \"function\" ? i => a + b(i) : a + b;\n}\nexport class BarX extends AbstractBar {\n  constructor(data, options = {}, defaults) {\n    const {\n      x1,\n      x2,\n      y\n    } = options;\n    super(data, {\n      x1: {\n        value: x1,\n        scale: \"x\"\n      },\n      x2: {\n        value: x2,\n        scale: \"x\"\n      },\n      y: {\n        value: y,\n        scale: \"y\",\n        type: \"band\",\n        optional: true\n      }\n    }, options, defaults);\n  }\n  _transform(selection, mark, {\n    x\n  }) {\n    selection.call(applyTransform, mark, {\n      x\n    }, 0, 0);\n  }\n  _x({\n    x\n  }, {\n    x1: X1,\n    x2: X2\n  }, {\n    marginLeft\n  }) {\n    const {\n      insetLeft\n    } = this;\n    return isCollapsed(x) ? marginLeft + insetLeft : i => Math.min(X1[i], X2[i]) + insetLeft;\n  }\n  _width({\n    x\n  }, {\n    x1: X1,\n    x2: X2\n  }, {\n    marginRight,\n    marginLeft,\n    width\n  }) {\n    const {\n      insetLeft,\n      insetRight\n    } = this;\n    return isCollapsed(x) ? width - marginRight - marginLeft - insetLeft - insetRight : i => Math.max(0, Math.abs(X2[i] - X1[i]) - insetLeft - insetRight);\n  }\n}\nexport class BarY extends AbstractBar {\n  constructor(data, options = {}, defaults) {\n    const {\n      x,\n      y1,\n      y2\n    } = options;\n    super(data, {\n      y1: {\n        value: y1,\n        scale: \"y\"\n      },\n      y2: {\n        value: y2,\n        scale: \"y\"\n      },\n      x: {\n        value: x,\n        scale: \"x\",\n        type: \"band\",\n        optional: true\n      }\n    }, options, defaults);\n  }\n  _transform(selection, mark, {\n    y\n  }) {\n    selection.call(applyTransform, mark, {\n      y\n    }, 0, 0);\n  }\n  _y({\n    y\n  }, {\n    y1: Y1,\n    y2: Y2\n  }, {\n    marginTop\n  }) {\n    const {\n      insetTop\n    } = this;\n    return isCollapsed(y) ? marginTop + insetTop : i => Math.min(Y1[i], Y2[i]) + insetTop;\n  }\n  _height({\n    y\n  }, {\n    y1: Y1,\n    y2: Y2\n  }, {\n    marginTop,\n    marginBottom,\n    height\n  }) {\n    const {\n      insetTop,\n      insetBottom\n    } = this;\n    return isCollapsed(y) ? height - marginTop - marginBottom - insetTop - insetBottom : i => Math.max(0, Math.abs(Y2[i] - Y1[i]) - insetTop - insetBottom);\n  }\n}\nexport function barX(data, options = {}) {\n  if (!hasXY(options)) options = {\n    ...options,\n    y: indexOf,\n    x2: identity\n  };\n  return new BarX(data, maybeStackX(maybeIntervalX(maybeIdentityX(options))));\n}\nexport function barY(data, options = {}) {\n  if (!hasXY(options)) options = {\n    ...options,\n    x: indexOf,\n    y2: identity\n  };\n  return new BarY(data, maybeStackY(maybeIntervalY(maybeIdentityY(options))));\n}","map":{"version":3,"names":["create","Mark","hasXY","identity","indexOf","isCollapsed","applyAttr","applyChannelStyles","applyDirectStyles","applyIndirectStyles","applyTransform","maybeIdentityX","maybeIdentityY","maybeIntervalX","maybeIntervalY","maybeStackX","maybeStackY","applyRoundedRect","rectInsets","rectRadii","barDefaults","ariaLabel","AbstractBar","constructor","data","channels","options","defaults","render","index","scales","dimensions","context","rx","ry","rx1y1","rx1y2","rx2y1","rx2y2","x","_x","y","_y","w","_width","h","_height","call","_transform","g","selectAll","enter","append","add","attr","node","X","marginLeft","insetLeft","i","Y","marginTop","insetTop","marginRight","width","insetRight","bandwidth","Math","max","marginBottom","height","insetBottom","a","b","BarX","x1","x2","value","scale","type","optional","selection","mark","X1","X2","min","abs","BarY","y1","y2","Y1","Y2","barX","barY"],"sources":["D:/Notebooks/notebooks-web/vue/node_modules/@observablehq/plot/src/marks/bar.js"],"sourcesContent":["import {create} from \"../context.js\";\nimport {Mark} from \"../mark.js\";\nimport {hasXY, identity, indexOf} from \"../options.js\";\nimport {isCollapsed} from \"../scales.js\";\nimport {applyAttr, applyChannelStyles, applyDirectStyles, applyIndirectStyles, applyTransform} from \"../style.js\";\nimport {maybeIdentityX, maybeIdentityY} from \"../transforms/identity.js\";\nimport {maybeIntervalX, maybeIntervalY} from \"../transforms/interval.js\";\nimport {maybeStackX, maybeStackY} from \"../transforms/stack.js\";\nimport {applyRoundedRect, rectInsets, rectRadii} from \"./rect.js\";\n\nconst barDefaults = {\n  ariaLabel: \"bar\"\n};\n\nexport class AbstractBar extends Mark {\n  constructor(data, channels, options = {}, defaults = barDefaults) {\n    super(data, channels, options, defaults);\n    rectInsets(this, options);\n    rectRadii(this, options);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {rx, ry, rx1y1, rx1y2, rx2y1, rx2y2} = this;\n    const x = this._x(scales, channels, dimensions);\n    const y = this._y(scales, channels, dimensions);\n    const w = this._width(scales, channels, dimensions);\n    const h = this._height(scales, channels, dimensions);\n    return create(\"svg:g\", context)\n      .call(applyIndirectStyles, this, dimensions, context)\n      .call(this._transform, this, scales)\n      .call((g) =>\n        g\n          .selectAll()\n          .data(index)\n          .enter()\n          .call(\n            rx1y1 || rx1y2 || rx2y1 || rx2y2\n              ? (g) =>\n                  g\n                    .append(\"path\")\n                    .call(applyDirectStyles, this)\n                    .call(applyRoundedRect, x, y, add(x, w), add(y, h), this)\n                    .call(applyChannelStyles, this, channels)\n              : (g) =>\n                  g\n                    .append(\"rect\")\n                    .call(applyDirectStyles, this)\n                    .attr(\"x\", x)\n                    .attr(\"width\", w)\n                    .attr(\"y\", y)\n                    .attr(\"height\", h)\n                    .call(applyAttr, \"rx\", rx)\n                    .call(applyAttr, \"ry\", ry)\n                    .call(applyChannelStyles, this, channels)\n          )\n      )\n      .node();\n  }\n  _x(scales, {x: X}, {marginLeft}) {\n    const {insetLeft} = this;\n    return X ? (i) => X[i] + insetLeft : marginLeft + insetLeft;\n  }\n  _y(scales, {y: Y}, {marginTop}) {\n    const {insetTop} = this;\n    return Y ? (i) => Y[i] + insetTop : marginTop + insetTop;\n  }\n  _width({x}, {x: X}, {marginRight, marginLeft, width}) {\n    const {insetLeft, insetRight} = this;\n    const bandwidth = X && x ? x.bandwidth() : width - marginRight - marginLeft;\n    return Math.max(0, bandwidth - insetLeft - insetRight);\n  }\n  _height({y}, {y: Y}, {marginTop, marginBottom, height}) {\n    const {insetTop, insetBottom} = this;\n    const bandwidth = Y && y ? y.bandwidth() : height - marginTop - marginBottom;\n    return Math.max(0, bandwidth - insetTop - insetBottom);\n  }\n}\n\nfunction add(a, b) {\n  return typeof a === \"function\" && typeof b === \"function\"\n    ? (i) => a(i) + b(i)\n    : typeof a === \"function\"\n    ? (i) => a(i) + b\n    : typeof b === \"function\"\n    ? (i) => a + b(i)\n    : a + b;\n}\n\nexport class BarX extends AbstractBar {\n  constructor(data, options = {}, defaults) {\n    const {x1, x2, y} = options;\n    super(\n      data,\n      {\n        x1: {value: x1, scale: \"x\"},\n        x2: {value: x2, scale: \"x\"},\n        y: {value: y, scale: \"y\", type: \"band\", optional: true}\n      },\n      options,\n      defaults\n    );\n  }\n  _transform(selection, mark, {x}) {\n    selection.call(applyTransform, mark, {x}, 0, 0);\n  }\n  _x({x}, {x1: X1, x2: X2}, {marginLeft}) {\n    const {insetLeft} = this;\n    return isCollapsed(x) ? marginLeft + insetLeft : (i) => Math.min(X1[i], X2[i]) + insetLeft;\n  }\n  _width({x}, {x1: X1, x2: X2}, {marginRight, marginLeft, width}) {\n    const {insetLeft, insetRight} = this;\n    return isCollapsed(x)\n      ? width - marginRight - marginLeft - insetLeft - insetRight\n      : (i) => Math.max(0, Math.abs(X2[i] - X1[i]) - insetLeft - insetRight);\n  }\n}\n\nexport class BarY extends AbstractBar {\n  constructor(data, options = {}, defaults) {\n    const {x, y1, y2} = options;\n    super(\n      data,\n      {\n        y1: {value: y1, scale: \"y\"},\n        y2: {value: y2, scale: \"y\"},\n        x: {value: x, scale: \"x\", type: \"band\", optional: true}\n      },\n      options,\n      defaults\n    );\n  }\n  _transform(selection, mark, {y}) {\n    selection.call(applyTransform, mark, {y}, 0, 0);\n  }\n  _y({y}, {y1: Y1, y2: Y2}, {marginTop}) {\n    const {insetTop} = this;\n    return isCollapsed(y) ? marginTop + insetTop : (i) => Math.min(Y1[i], Y2[i]) + insetTop;\n  }\n  _height({y}, {y1: Y1, y2: Y2}, {marginTop, marginBottom, height}) {\n    const {insetTop, insetBottom} = this;\n    return isCollapsed(y)\n      ? height - marginTop - marginBottom - insetTop - insetBottom\n      : (i) => Math.max(0, Math.abs(Y2[i] - Y1[i]) - insetTop - insetBottom);\n  }\n}\n\nexport function barX(data, options = {}) {\n  if (!hasXY(options)) options = {...options, y: indexOf, x2: identity};\n  return new BarX(data, maybeStackX(maybeIntervalX(maybeIdentityX(options))));\n}\n\nexport function barY(data, options = {}) {\n  if (!hasXY(options)) options = {...options, x: indexOf, y2: identity};\n  return new BarY(data, maybeStackY(maybeIntervalY(maybeIdentityY(options))));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}