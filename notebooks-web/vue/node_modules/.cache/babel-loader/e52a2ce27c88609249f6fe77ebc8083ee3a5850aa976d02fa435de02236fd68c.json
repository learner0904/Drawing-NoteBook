{"ast":null,"code":"import { quantize, interpolateNumber, piecewise, format, scaleBand, scaleLinear, axisBottom } from \"d3\";\nimport { inferFontVariant } from \"../axes.js\";\nimport { createContext, create } from \"../context.js\";\nimport { map, maybeNumberChannel } from \"../options.js\";\nimport { interpolatePiecewise } from \"../scales/quantitative.js\";\nimport { applyInlineStyles, impliedString, maybeClassName } from \"../style.js\";\nexport function legendRamp(color, options) {\n  let {\n    label = color.label,\n    tickSize = 6,\n    width = 240,\n    height = 44 + tickSize,\n    marginTop = 18,\n    marginRight = 0,\n    marginBottom = 16 + tickSize,\n    marginLeft = 0,\n    style,\n    ticks = (width - marginLeft - marginRight) / 64,\n    tickFormat,\n    fontVariant = inferFontVariant(color),\n    round = true,\n    opacity,\n    className\n  } = options;\n  const context = createContext(options);\n  className = maybeClassName(className);\n  opacity = maybeNumberChannel(opacity)[1];\n  if (tickFormat === null) tickFormat = () => null;\n  const svg = create(\"svg\", context).attr(\"class\", `${className}-ramp`).attr(\"font-family\", \"system-ui, sans-serif\").attr(\"font-size\", 10).attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", `0 0 ${width} ${height}`).call(svg =>\n  // Warning: if you edit this, change defaultClassName.\n  svg.append(\"style\").text(`:where(.${className}-ramp) {\n  display: block;\n  height: auto;\n  height: intrinsic;\n  max-width: 100%;\n  overflow: visible;\n}\n:where(.${className}-ramp text) {\n  white-space: pre;\n}`)).call(applyInlineStyles, style);\n  let tickAdjust = g => g.selectAll(\".tick line\").attr(\"y1\", marginTop + marginBottom - height);\n  let x;\n\n  // Some D3 scales use scale.interpolate, some scale.interpolator, and some\n  // scale.round; this normalizes the API so it works with all scale types.\n  const applyRange = round ? (x, range) => x.rangeRound(range) : (x, range) => x.range(range);\n  const {\n    type,\n    domain,\n    range,\n    interpolate,\n    scale,\n    pivot\n  } = color;\n\n  // Continuous\n  if (interpolate) {\n    // Often interpolate is a “fixed” interpolator on the [0, 1] interval, as\n    // with a built-in color scheme, but sometimes it is a function that takes\n    // two arguments and is used in conjunction with the range.\n    const interpolator = range === undefined ? interpolate : piecewise(interpolate.length === 1 ? interpolatePiecewise(interpolate) : interpolate, range);\n\n    // Construct a D3 scale of the same type, but with a range that evenly\n    // divides the horizontal extent of the legend. (In the common case, the\n    // domain.length is two, and so the range is simply the extent.) For a\n    // diverging scale, we need an extra point in the range for the pivot such\n    // that the pivot is always drawn in the middle.\n    x = applyRange(scale.copy(), quantize(interpolateNumber(marginLeft, width - marginRight), Math.min(domain.length + (pivot !== undefined), range === undefined ? Infinity : range.length)));\n\n    // Construct a 256×1 canvas, filling each pixel using the interpolator.\n    const n = 256;\n    const canvas = context.document.createElement(\"canvas\");\n    canvas.width = n;\n    canvas.height = 1;\n    const context2 = canvas.getContext(\"2d\");\n    for (let i = 0, j = n - 1; i < n; ++i) {\n      context2.fillStyle = interpolator(i / j);\n      context2.fillRect(i, 0, 1, 1);\n    }\n    svg.append(\"image\").attr(\"opacity\", opacity).attr(\"x\", marginLeft).attr(\"y\", marginTop).attr(\"width\", width - marginLeft - marginRight).attr(\"height\", height - marginTop - marginBottom).attr(\"preserveAspectRatio\", \"none\").attr(\"xlink:href\", canvas.toDataURL());\n  }\n\n  // Threshold\n  else if (type === \"threshold\") {\n    const thresholds = domain;\n    const thresholdFormat = tickFormat === undefined ? d => d : typeof tickFormat === \"string\" ? format(tickFormat) : tickFormat;\n\n    // Construct a linear scale with evenly-spaced ticks for each of the\n    // thresholds; the domain extends one beyond the threshold extent.\n    x = applyRange(scaleLinear().domain([-1, range.length - 1]), [marginLeft, width - marginRight]);\n    svg.append(\"g\").attr(\"fill-opacity\", opacity).selectAll().data(range).enter().append(\"rect\").attr(\"x\", (d, i) => x(i - 1)).attr(\"y\", marginTop).attr(\"width\", (d, i) => x(i) - x(i - 1)).attr(\"height\", height - marginTop - marginBottom).attr(\"fill\", d => d);\n    ticks = map(thresholds, (_, i) => i);\n    tickFormat = i => thresholdFormat(thresholds[i], i);\n  }\n\n  // Ordinal (hopefully!)\n  else {\n    x = applyRange(scaleBand().domain(domain), [marginLeft, width - marginRight]);\n    svg.append(\"g\").attr(\"fill-opacity\", opacity).selectAll().data(domain).enter().append(\"rect\").attr(\"x\", x).attr(\"y\", marginTop).attr(\"width\", Math.max(0, x.bandwidth() - 1)).attr(\"height\", height - marginTop - marginBottom).attr(\"fill\", scale);\n    tickAdjust = () => {};\n  }\n  svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(axisBottom(x).ticks(Array.isArray(ticks) ? null : ticks, typeof tickFormat === \"string\" ? tickFormat : undefined).tickFormat(typeof tickFormat === \"function\" ? tickFormat : undefined).tickSize(tickSize).tickValues(Array.isArray(ticks) ? ticks : null)).attr(\"font-size\", null).attr(\"font-family\", null).attr(\"font-variant\", impliedString(fontVariant, \"normal\")).call(tickAdjust).call(g => g.select(\".domain\").remove());\n  if (label !== undefined) {\n    svg.append(\"text\").attr(\"x\", marginLeft).attr(\"y\", marginTop - 6).attr(\"fill\", \"currentColor\") // TODO move to stylesheet?\n    .attr(\"font-weight\", \"bold\").text(label);\n  }\n  return svg.node();\n}","map":{"version":3,"names":["quantize","interpolateNumber","piecewise","format","scaleBand","scaleLinear","axisBottom","inferFontVariant","createContext","create","map","maybeNumberChannel","interpolatePiecewise","applyInlineStyles","impliedString","maybeClassName","legendRamp","color","options","label","tickSize","width","height","marginTop","marginRight","marginBottom","marginLeft","style","ticks","tickFormat","fontVariant","round","opacity","className","context","svg","attr","call","append","text","tickAdjust","g","selectAll","x","applyRange","range","rangeRound","type","domain","interpolate","scale","pivot","interpolator","undefined","length","copy","Math","min","Infinity","n","canvas","document","createElement","context2","getContext","i","j","fillStyle","fillRect","toDataURL","thresholds","thresholdFormat","d","data","enter","_","max","bandwidth","Array","isArray","tickValues","select","remove","node"],"sources":["D:/Notebooks/notebooks-web/vue/node_modules/@observablehq/plot/src/legends/ramp.js"],"sourcesContent":["import {quantize, interpolateNumber, piecewise, format, scaleBand, scaleLinear, axisBottom} from \"d3\";\nimport {inferFontVariant} from \"../axes.js\";\nimport {createContext, create} from \"../context.js\";\nimport {map, maybeNumberChannel} from \"../options.js\";\nimport {interpolatePiecewise} from \"../scales/quantitative.js\";\nimport {applyInlineStyles, impliedString, maybeClassName} from \"../style.js\";\n\nexport function legendRamp(color, options) {\n  let {\n    label = color.label,\n    tickSize = 6,\n    width = 240,\n    height = 44 + tickSize,\n    marginTop = 18,\n    marginRight = 0,\n    marginBottom = 16 + tickSize,\n    marginLeft = 0,\n    style,\n    ticks = (width - marginLeft - marginRight) / 64,\n    tickFormat,\n    fontVariant = inferFontVariant(color),\n    round = true,\n    opacity,\n    className\n  } = options;\n  const context = createContext(options);\n  className = maybeClassName(className);\n  opacity = maybeNumberChannel(opacity)[1];\n  if (tickFormat === null) tickFormat = () => null;\n\n  const svg = create(\"svg\", context)\n    .attr(\"class\", `${className}-ramp`)\n    .attr(\"font-family\", \"system-ui, sans-serif\")\n    .attr(\"font-size\", 10)\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .attr(\"viewBox\", `0 0 ${width} ${height}`)\n    .call((svg) =>\n      // Warning: if you edit this, change defaultClassName.\n      svg.append(\"style\").text(\n        `:where(.${className}-ramp) {\n  display: block;\n  height: auto;\n  height: intrinsic;\n  max-width: 100%;\n  overflow: visible;\n}\n:where(.${className}-ramp text) {\n  white-space: pre;\n}`\n      )\n    )\n    .call(applyInlineStyles, style);\n\n  let tickAdjust = (g) => g.selectAll(\".tick line\").attr(\"y1\", marginTop + marginBottom - height);\n\n  let x;\n\n  // Some D3 scales use scale.interpolate, some scale.interpolator, and some\n  // scale.round; this normalizes the API so it works with all scale types.\n  const applyRange = round ? (x, range) => x.rangeRound(range) : (x, range) => x.range(range);\n\n  const {type, domain, range, interpolate, scale, pivot} = color;\n\n  // Continuous\n  if (interpolate) {\n    // Often interpolate is a “fixed” interpolator on the [0, 1] interval, as\n    // with a built-in color scheme, but sometimes it is a function that takes\n    // two arguments and is used in conjunction with the range.\n    const interpolator =\n      range === undefined\n        ? interpolate\n        : piecewise(interpolate.length === 1 ? interpolatePiecewise(interpolate) : interpolate, range);\n\n    // Construct a D3 scale of the same type, but with a range that evenly\n    // divides the horizontal extent of the legend. (In the common case, the\n    // domain.length is two, and so the range is simply the extent.) For a\n    // diverging scale, we need an extra point in the range for the pivot such\n    // that the pivot is always drawn in the middle.\n    x = applyRange(\n      scale.copy(),\n      quantize(\n        interpolateNumber(marginLeft, width - marginRight),\n        Math.min(domain.length + (pivot !== undefined), range === undefined ? Infinity : range.length)\n      )\n    );\n\n    // Construct a 256×1 canvas, filling each pixel using the interpolator.\n    const n = 256;\n    const canvas = context.document.createElement(\"canvas\");\n    canvas.width = n;\n    canvas.height = 1;\n    const context2 = canvas.getContext(\"2d\");\n    for (let i = 0, j = n - 1; i < n; ++i) {\n      context2.fillStyle = interpolator(i / j);\n      context2.fillRect(i, 0, 1, 1);\n    }\n\n    svg\n      .append(\"image\")\n      .attr(\"opacity\", opacity)\n      .attr(\"x\", marginLeft)\n      .attr(\"y\", marginTop)\n      .attr(\"width\", width - marginLeft - marginRight)\n      .attr(\"height\", height - marginTop - marginBottom)\n      .attr(\"preserveAspectRatio\", \"none\")\n      .attr(\"xlink:href\", canvas.toDataURL());\n  }\n\n  // Threshold\n  else if (type === \"threshold\") {\n    const thresholds = domain;\n\n    const thresholdFormat =\n      tickFormat === undefined ? (d) => d : typeof tickFormat === \"string\" ? format(tickFormat) : tickFormat;\n\n    // Construct a linear scale with evenly-spaced ticks for each of the\n    // thresholds; the domain extends one beyond the threshold extent.\n    x = applyRange(scaleLinear().domain([-1, range.length - 1]), [marginLeft, width - marginRight]);\n\n    svg\n      .append(\"g\")\n      .attr(\"fill-opacity\", opacity)\n      .selectAll()\n      .data(range)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (d, i) => x(i - 1))\n      .attr(\"y\", marginTop)\n      .attr(\"width\", (d, i) => x(i) - x(i - 1))\n      .attr(\"height\", height - marginTop - marginBottom)\n      .attr(\"fill\", (d) => d);\n\n    ticks = map(thresholds, (_, i) => i);\n    tickFormat = (i) => thresholdFormat(thresholds[i], i);\n  }\n\n  // Ordinal (hopefully!)\n  else {\n    x = applyRange(scaleBand().domain(domain), [marginLeft, width - marginRight]);\n\n    svg\n      .append(\"g\")\n      .attr(\"fill-opacity\", opacity)\n      .selectAll()\n      .data(domain)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", x)\n      .attr(\"y\", marginTop)\n      .attr(\"width\", Math.max(0, x.bandwidth() - 1))\n      .attr(\"height\", height - marginTop - marginBottom)\n      .attr(\"fill\", scale);\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .append(\"g\")\n    .attr(\"transform\", `translate(0,${height - marginBottom})`)\n    .call(\n      axisBottom(x)\n        .ticks(Array.isArray(ticks) ? null : ticks, typeof tickFormat === \"string\" ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === \"function\" ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(Array.isArray(ticks) ? ticks : null)\n    )\n    .attr(\"font-size\", null)\n    .attr(\"font-family\", null)\n    .attr(\"font-variant\", impliedString(fontVariant, \"normal\"))\n    .call(tickAdjust)\n    .call((g) => g.select(\".domain\").remove());\n\n  if (label !== undefined) {\n    svg\n      .append(\"text\")\n      .attr(\"x\", marginLeft)\n      .attr(\"y\", marginTop - 6)\n      .attr(\"fill\", \"currentColor\") // TODO move to stylesheet?\n      .attr(\"font-weight\", \"bold\")\n      .text(label);\n  }\n\n  return svg.node();\n}\n"],"mappings":"AAAA,SAAQA,QAAQ,EAAEC,iBAAiB,EAAEC,SAAS,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAO,IAAI;AACrG,SAAQC,gBAAgB,QAAO,YAAY;AAC3C,SAAQC,aAAa,EAAEC,MAAM,QAAO,eAAe;AACnD,SAAQC,GAAG,EAAEC,kBAAkB,QAAO,eAAe;AACrD,SAAQC,oBAAoB,QAAO,2BAA2B;AAC9D,SAAQC,iBAAiB,EAAEC,aAAa,EAAEC,cAAc,QAAO,aAAa;AAE5E,OAAO,SAASC,UAAUA,CAACC,KAAK,EAAEC,OAAO,EAAE;EACzC,IAAI;IACFC,KAAK,GAAGF,KAAK,CAACE,KAAK;IACnBC,QAAQ,GAAG,CAAC;IACZC,KAAK,GAAG,GAAG;IACXC,MAAM,GAAG,EAAE,GAAGF,QAAQ;IACtBG,SAAS,GAAG,EAAE;IACdC,WAAW,GAAG,CAAC;IACfC,YAAY,GAAG,EAAE,GAAGL,QAAQ;IAC5BM,UAAU,GAAG,CAAC;IACdC,KAAK;IACLC,KAAK,GAAG,CAACP,KAAK,GAAGK,UAAU,GAAGF,WAAW,IAAI,EAAE;IAC/CK,UAAU;IACVC,WAAW,GAAGvB,gBAAgB,CAACU,KAAK,CAAC;IACrCc,KAAK,GAAG,IAAI;IACZC,OAAO;IACPC;EACF,CAAC,GAAGf,OAAO;EACX,MAAMgB,OAAO,GAAG1B,aAAa,CAACU,OAAO,CAAC;EACtCe,SAAS,GAAGlB,cAAc,CAACkB,SAAS,CAAC;EACrCD,OAAO,GAAGrB,kBAAkB,CAACqB,OAAO,CAAC,CAAC,CAAC,CAAC;EACxC,IAAIH,UAAU,KAAK,IAAI,EAAEA,UAAU,GAAGA,CAAA,KAAM,IAAI;EAEhD,MAAMM,GAAG,GAAG1B,MAAM,CAAC,KAAK,EAAEyB,OAAO,CAAC,CAC/BE,IAAI,CAAC,OAAO,EAAG,GAAEH,SAAU,OAAM,CAAC,CAClCG,IAAI,CAAC,aAAa,EAAE,uBAAuB,CAAC,CAC5CA,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CACrBA,IAAI,CAAC,OAAO,EAAEf,KAAK,CAAC,CACpBe,IAAI,CAAC,QAAQ,EAAEd,MAAM,CAAC,CACtBc,IAAI,CAAC,SAAS,EAAG,OAAMf,KAAM,IAAGC,MAAO,EAAC,CAAC,CACzCe,IAAI,CAAEF,GAAG;EACR;EACAA,GAAG,CAACG,MAAM,CAAC,OAAO,CAAC,CAACC,IAAI,CACrB,WAAUN,SAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,UAAUA,SAAU;AACpB;AACA,EACM,CACF,CAAC,CACAI,IAAI,CAACxB,iBAAiB,EAAEc,KAAK,CAAC;EAEjC,IAAIa,UAAU,GAAIC,CAAC,IAAKA,CAAC,CAACC,SAAS,CAAC,YAAY,CAAC,CAACN,IAAI,CAAC,IAAI,EAAEb,SAAS,GAAGE,YAAY,GAAGH,MAAM,CAAC;EAE/F,IAAIqB,CAAC;;EAEL;EACA;EACA,MAAMC,UAAU,GAAGb,KAAK,GAAG,CAACY,CAAC,EAAEE,KAAK,KAAKF,CAAC,CAACG,UAAU,CAACD,KAAK,CAAC,GAAG,CAACF,CAAC,EAAEE,KAAK,KAAKF,CAAC,CAACE,KAAK,CAACA,KAAK,CAAC;EAE3F,MAAM;IAACE,IAAI;IAAEC,MAAM;IAAEH,KAAK;IAAEI,WAAW;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGlC,KAAK;;EAE9D;EACA,IAAIgC,WAAW,EAAE;IACf;IACA;IACA;IACA,MAAMG,YAAY,GAChBP,KAAK,KAAKQ,SAAS,GACfJ,WAAW,GACX/C,SAAS,CAAC+C,WAAW,CAACK,MAAM,KAAK,CAAC,GAAG1C,oBAAoB,CAACqC,WAAW,CAAC,GAAGA,WAAW,EAAEJ,KAAK,CAAC;;IAElG;IACA;IACA;IACA;IACA;IACAF,CAAC,GAAGC,UAAU,CACZM,KAAK,CAACK,IAAI,CAAC,CAAC,EACZvD,QAAQ,CACNC,iBAAiB,CAACyB,UAAU,EAAEL,KAAK,GAAGG,WAAW,CAAC,EAClDgC,IAAI,CAACC,GAAG,CAACT,MAAM,CAACM,MAAM,IAAIH,KAAK,KAAKE,SAAS,CAAC,EAAER,KAAK,KAAKQ,SAAS,GAAGK,QAAQ,GAAGb,KAAK,CAACS,MAAM,CAC/F,CACF,CAAC;;IAED;IACA,MAAMK,CAAC,GAAG,GAAG;IACb,MAAMC,MAAM,GAAG1B,OAAO,CAAC2B,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IACvDF,MAAM,CAACvC,KAAK,GAAGsC,CAAC;IAChBC,MAAM,CAACtC,MAAM,GAAG,CAAC;IACjB,MAAMyC,QAAQ,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IACxC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGP,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAGN,CAAC,EAAE,EAAEM,CAAC,EAAE;MACrCF,QAAQ,CAACI,SAAS,GAAGf,YAAY,CAACa,CAAC,GAAGC,CAAC,CAAC;MACxCH,QAAQ,CAACK,QAAQ,CAACH,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/B;IAEA9B,GAAG,CACAG,MAAM,CAAC,OAAO,CAAC,CACfF,IAAI,CAAC,SAAS,EAAEJ,OAAO,CAAC,CACxBI,IAAI,CAAC,GAAG,EAAEV,UAAU,CAAC,CACrBU,IAAI,CAAC,GAAG,EAAEb,SAAS,CAAC,CACpBa,IAAI,CAAC,OAAO,EAAEf,KAAK,GAAGK,UAAU,GAAGF,WAAW,CAAC,CAC/CY,IAAI,CAAC,QAAQ,EAAEd,MAAM,GAAGC,SAAS,GAAGE,YAAY,CAAC,CACjDW,IAAI,CAAC,qBAAqB,EAAE,MAAM,CAAC,CACnCA,IAAI,CAAC,YAAY,EAAEwB,MAAM,CAACS,SAAS,CAAC,CAAC,CAAC;EAC3C;;EAEA;EAAA,KACK,IAAItB,IAAI,KAAK,WAAW,EAAE;IAC7B,MAAMuB,UAAU,GAAGtB,MAAM;IAEzB,MAAMuB,eAAe,GACnB1C,UAAU,KAAKwB,SAAS,GAAImB,CAAC,IAAKA,CAAC,GAAG,OAAO3C,UAAU,KAAK,QAAQ,GAAG1B,MAAM,CAAC0B,UAAU,CAAC,GAAGA,UAAU;;IAExG;IACA;IACAc,CAAC,GAAGC,UAAU,CAACvC,WAAW,CAAC,CAAC,CAAC2C,MAAM,CAAC,CAAC,CAAC,CAAC,EAAEH,KAAK,CAACS,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC5B,UAAU,EAAEL,KAAK,GAAGG,WAAW,CAAC,CAAC;IAE/FW,GAAG,CACAG,MAAM,CAAC,GAAG,CAAC,CACXF,IAAI,CAAC,cAAc,EAAEJ,OAAO,CAAC,CAC7BU,SAAS,CAAC,CAAC,CACX+B,IAAI,CAAC5B,KAAK,CAAC,CACX6B,KAAK,CAAC,CAAC,CACPpC,MAAM,CAAC,MAAM,CAAC,CACdF,IAAI,CAAC,GAAG,EAAE,CAACoC,CAAC,EAAEP,CAAC,KAAKtB,CAAC,CAACsB,CAAC,GAAG,CAAC,CAAC,CAAC,CAC7B7B,IAAI,CAAC,GAAG,EAAEb,SAAS,CAAC,CACpBa,IAAI,CAAC,OAAO,EAAE,CAACoC,CAAC,EAAEP,CAAC,KAAKtB,CAAC,CAACsB,CAAC,CAAC,GAAGtB,CAAC,CAACsB,CAAC,GAAG,CAAC,CAAC,CAAC,CACxC7B,IAAI,CAAC,QAAQ,EAAEd,MAAM,GAAGC,SAAS,GAAGE,YAAY,CAAC,CACjDW,IAAI,CAAC,MAAM,EAAGoC,CAAC,IAAKA,CAAC,CAAC;IAEzB5C,KAAK,GAAGlB,GAAG,CAAC4D,UAAU,EAAE,CAACK,CAAC,EAAEV,CAAC,KAAKA,CAAC,CAAC;IACpCpC,UAAU,GAAIoC,CAAC,IAAKM,eAAe,CAACD,UAAU,CAACL,CAAC,CAAC,EAAEA,CAAC,CAAC;EACvD;;EAEA;EAAA,KACK;IACHtB,CAAC,GAAGC,UAAU,CAACxC,SAAS,CAAC,CAAC,CAAC4C,MAAM,CAACA,MAAM,CAAC,EAAE,CAACtB,UAAU,EAAEL,KAAK,GAAGG,WAAW,CAAC,CAAC;IAE7EW,GAAG,CACAG,MAAM,CAAC,GAAG,CAAC,CACXF,IAAI,CAAC,cAAc,EAAEJ,OAAO,CAAC,CAC7BU,SAAS,CAAC,CAAC,CACX+B,IAAI,CAACzB,MAAM,CAAC,CACZ0B,KAAK,CAAC,CAAC,CACPpC,MAAM,CAAC,MAAM,CAAC,CACdF,IAAI,CAAC,GAAG,EAAEO,CAAC,CAAC,CACZP,IAAI,CAAC,GAAG,EAAEb,SAAS,CAAC,CACpBa,IAAI,CAAC,OAAO,EAAEoB,IAAI,CAACoB,GAAG,CAAC,CAAC,EAAEjC,CAAC,CAACkC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAC7CzC,IAAI,CAAC,QAAQ,EAAEd,MAAM,GAAGC,SAAS,GAAGE,YAAY,CAAC,CACjDW,IAAI,CAAC,MAAM,EAAEc,KAAK,CAAC;IAEtBV,UAAU,GAAGA,CAAA,KAAM,CAAC,CAAC;EACvB;EAEAL,GAAG,CACAG,MAAM,CAAC,GAAG,CAAC,CACXF,IAAI,CAAC,WAAW,EAAG,eAAcd,MAAM,GAAGG,YAAa,GAAE,CAAC,CAC1DY,IAAI,CACH/B,UAAU,CAACqC,CAAC,CAAC,CACVf,KAAK,CAACkD,KAAK,CAACC,OAAO,CAACnD,KAAK,CAAC,GAAG,IAAI,GAAGA,KAAK,EAAE,OAAOC,UAAU,KAAK,QAAQ,GAAGA,UAAU,GAAGwB,SAAS,CAAC,CACnGxB,UAAU,CAAC,OAAOA,UAAU,KAAK,UAAU,GAAGA,UAAU,GAAGwB,SAAS,CAAC,CACrEjC,QAAQ,CAACA,QAAQ,CAAC,CAClB4D,UAAU,CAACF,KAAK,CAACC,OAAO,CAACnD,KAAK,CAAC,GAAGA,KAAK,GAAG,IAAI,CACnD,CAAC,CACAQ,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CACvBA,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CACzBA,IAAI,CAAC,cAAc,EAAEtB,aAAa,CAACgB,WAAW,EAAE,QAAQ,CAAC,CAAC,CAC1DO,IAAI,CAACG,UAAU,CAAC,CAChBH,IAAI,CAAEI,CAAC,IAAKA,CAAC,CAACwC,MAAM,CAAC,SAAS,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;EAE5C,IAAI/D,KAAK,KAAKkC,SAAS,EAAE;IACvBlB,GAAG,CACAG,MAAM,CAAC,MAAM,CAAC,CACdF,IAAI,CAAC,GAAG,EAAEV,UAAU,CAAC,CACrBU,IAAI,CAAC,GAAG,EAAEb,SAAS,GAAG,CAAC,CAAC,CACxBa,IAAI,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;IAAA,CAC7BA,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,CAC3BG,IAAI,CAACpB,KAAK,CAAC;EAChB;EAEA,OAAOgB,GAAG,CAACgD,IAAI,CAAC,CAAC;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}