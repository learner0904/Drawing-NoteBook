{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport * as d3 from 'd3';\nimport axios from 'axios';\nimport * as Plot from '@observablehq/plot'; // 导入 Plot\nimport { h } from \"vue\"; // 确保在此处导入 h 函数\n\nexport default {\n  name: \"D3Runner\",\n  data() {\n    return {\n      d3Code: this.$route.query.code || \"\",\n      // 存储用户输入的 D3.js 代码\n      pictureUrl: this.$route.query.picture || \"\",\n      // 存储图片URL\n      noteId: this.$route.query.id || null // 从路由获取 noteId，若无则为新建\n    };\n  },\n\n  created() {\n    if (this.noteId) {\n      this.fetchNoteDetails();\n    }\n  },\n  methods: {\n    fetchNoteDetails() {\n      // 将请求 URL 修改为路径变量形式\n      this.$request.get(`/notes/selectById/${this.noteId}`).then(res => {\n        if (res.code === '200' && res.data) {\n          this.d3Code = res.data.code || \"\"; // 将 code 放入 d3Code\n          this.pictureUrl = res.data.picture || \"\"; // 将图片 URL 放入 pictureUrl\n        } else {\n          this.$message.error(res.msg || '无法加载Note详情');\n        }\n      }).catch(error => {\n        console.error(\"获取 Note 详情失败:\", error);\n        this.$message.error('获取 Note 详情失败');\n      });\n    },\n    runD3Code() {\n      const svgContainer = this.$refs.d3Output;\n\n      // 清空以前的图像\n      while (svgContainer.firstChild) {\n        svgContainer.removeChild(svgContainer.firstChild);\n      }\n\n      // 运行用户输入的代码\n      try {\n        if (this.d3Code.includes('Plot')) {\n          if (this.d3Code.includes('data')) {\n            function parseCSV(csvData, delimiter = ',') {\n              const rows = csvData.trim().split('\\n');\n              const headers = rows[0].split(delimiter).map(header => header.trim());\n              const data = rows.slice(1).map(row => {\n                const values = row.split(delimiter).map(value => value.trim());\n                const obj = {};\n                headers.forEach((header, index) => {\n                  obj[header] = isNaN(values[index]) ? values[index] : parseFloat(values[index]);\n                });\n                return obj;\n              });\n              return data;\n            }\n            const filenameMatch = this.d3Code.match(/data\\s*=\\s*\"([^\"]+)\"/);\n            const filename = filenameMatch ? filenameMatch[1] : null;\n            const code = this.d3Code.split('\\n').slice(1).join('\\n').trim();\n            console.log('filename:', filename); // 调试输出\n            console.log('code:', code); // 调试输出\n            // 确保在请求成功后再调用 userFunc\n\n            const fileUrl = 'http://localhost:9090' + '/files/' + filename;\n            console.log('fileUrl:', fileUrl); // 调试输出\n            axios.get(fileUrl).then(response => {\n              console.log('CSV data:', response.data); // 调试输出\n              const csvdata = parseCSV(response.data, ',');\n              console.log('CSV data:', csvdata); // 调试输出\n              console.log(`Generated function code: const plot = Plot.plot(${code});`);\n              const userFunc = new Function('Plot', 'container', 'data', `\n                  const plot = Plot.plot({${code}});\n                  container.appendChild(plot);\n                `);\n              userFunc(Plot, svgContainer, csvdata); // 在这里调用 userFunc，确保 csvdata 已赋值\n            }).catch(error => {\n              console.error('Error fetching CSV data:', error); // 错误处理\n            });\n          } else {\n            // 包装用户输入的代码\n            const userFunc = new Function('Plot', 'container', `const plot = Plot.plot(${this.d3Code});\n              container.appendChild(plot);`);\n            userFunc(Plot, svgContainer);\n          }\n        } else {\n          const userFunc = new Function('d3', 'container', this.d3Code);\n          userFunc(d3, svgContainer);\n        }\n      } catch (error) {\n        console.error(\"代码执行出错:\", error);\n        alert(\"代码执行出错，请检查代码。\");\n      }\n    },\n    runInteractiveD3() {\n      const svgContainer = this.$refs.d3Output;\n\n      // 清空以前的图像\n      while (svgContainer.firstChild) {\n        svgContainer.removeChild(svgContainer.firstChild);\n      }\n      try {\n        const userFunc = new Function('d3', 'container', 'data', this.d3Code);\n        // Example Data (可以替换为实际数据)\n        const sampleData = {\n          \"name\": \"flare\",\n          \"children\": [{\n            \"name\": \"analytics\",\n            \"children\": [{\n              \"name\": \"cluster\",\n              \"children\": [{\n                \"name\": \"AgglomerativeCluster\",\n                \"value\": 3938\n              }, {\n                \"name\": \"CommunityStructure\",\n                \"value\": 3812\n              }, {\n                \"name\": \"HierarchicalCluster\",\n                \"value\": 6714\n              }, {\n                \"name\": \"MergeEdge\",\n                \"value\": 743\n              }]\n            }, {\n              \"name\": \"graph\",\n              \"children\": [{\n                \"name\": \"BetweennessCentrality\",\n                \"value\": 3534\n              }, {\n                \"name\": \"LinkDistance\",\n                \"value\": 5731\n              }, {\n                \"name\": \"MaxFlowMinCut\",\n                \"value\": 7840\n              }, {\n                \"name\": \"ShortestPaths\",\n                \"value\": 5914\n              }, {\n                \"name\": \"SpanningTree\",\n                \"value\": 3416\n              }]\n            }, {\n              \"name\": \"optimization\",\n              \"children\": [{\n                \"name\": \"AspectRatioBanker\",\n                \"value\": 7074\n              }]\n            }]\n          }, {\n            \"name\": \"animate\",\n            \"children\": [{\n              \"name\": \"Easing\",\n              \"value\": 17010\n            }, {\n              \"name\": \"FunctionSequence\",\n              \"value\": 5842\n            }, {\n              \"name\": \"interpolate\",\n              \"children\": [{\n                \"name\": \"ArrayInterpolator\",\n                \"value\": 1983\n              }, {\n                \"name\": \"ColorInterpolator\",\n                \"value\": 2047\n              }, {\n                \"name\": \"DateInterpolator\",\n                \"value\": 1375\n              }, {\n                \"name\": \"Interpolator\",\n                \"value\": 8746\n              }, {\n                \"name\": \"MatrixInterpolator\",\n                \"value\": 2202\n              }, {\n                \"name\": \"NumberInterpolator\",\n                \"value\": 1382\n              }, {\n                \"name\": \"ObjectInterpolator\",\n                \"value\": 1629\n              }, {\n                \"name\": \"PointInterpolator\",\n                \"value\": 1675\n              }, {\n                \"name\": \"RectangleInterpolator\",\n                \"value\": 2042\n              }]\n            }, {\n              \"name\": \"ISchedulable\",\n              \"value\": 1041\n            }, {\n              \"name\": \"Parallel\",\n              \"value\": 5176\n            }, {\n              \"name\": \"Pause\",\n              \"value\": 449\n            }, {\n              \"name\": \"Scheduler\",\n              \"value\": 5593\n            }, {\n              \"name\": \"Sequence\",\n              \"value\": 5534\n            }, {\n              \"name\": \"Transition\",\n              \"value\": 9201\n            }, {\n              \"name\": \"Transitioner\",\n              \"value\": 19975\n            }, {\n              \"name\": \"TransitionEvent\",\n              \"value\": 1116\n            }, {\n              \"name\": \"Tween\",\n              \"value\": 6006\n            }]\n          }, {\n            \"name\": \"data\",\n            \"children\": [{\n              \"name\": \"converters\",\n              \"children\": [{\n                \"name\": \"Converters\",\n                \"value\": 721\n              }, {\n                \"name\": \"DelimitedTextConverter\",\n                \"value\": 4294\n              }, {\n                \"name\": \"GraphMLConverter\",\n                \"value\": 9800\n              }, {\n                \"name\": \"IDataConverter\",\n                \"value\": 1314\n              }, {\n                \"name\": \"JSONConverter\",\n                \"value\": 2220\n              }]\n            }, {\n              \"name\": \"DataField\",\n              \"value\": 1759\n            }, {\n              \"name\": \"DataSchema\",\n              \"value\": 2165\n            }, {\n              \"name\": \"DataSet\",\n              \"value\": 586\n            }, {\n              \"name\": \"DataSource\",\n              \"value\": 3331\n            }, {\n              \"name\": \"DataTable\",\n              \"value\": 772\n            }, {\n              \"name\": \"DataUtil\",\n              \"value\": 3322\n            }]\n          }, {\n            \"name\": \"display\",\n            \"children\": [{\n              \"name\": \"DirtySprite\",\n              \"value\": 8833\n            }, {\n              \"name\": \"LineSprite\",\n              \"value\": 1732\n            }, {\n              \"name\": \"RectSprite\",\n              \"value\": 3623\n            }, {\n              \"name\": \"TextSprite\",\n              \"value\": 10066\n            }]\n          }, {\n            \"name\": \"flex\",\n            \"children\": [{\n              \"name\": \"FlareVis\",\n              \"value\": 4116\n            }]\n          }, {\n            \"name\": \"physics\",\n            \"children\": [{\n              \"name\": \"DragForce\",\n              \"value\": 1082\n            }, {\n              \"name\": \"GravityForce\",\n              \"value\": 1336\n            }, {\n              \"name\": \"IForce\",\n              \"value\": 319\n            }, {\n              \"name\": \"NBodyForce\",\n              \"value\": 10498\n            }, {\n              \"name\": \"Particle\",\n              \"value\": 2822\n            }, {\n              \"name\": \"Simulation\",\n              \"value\": 9983\n            }, {\n              \"name\": \"Spring\",\n              \"value\": 2213\n            }, {\n              \"name\": \"SpringForce\",\n              \"value\": 1681\n            }]\n          }, {\n            \"name\": \"query\",\n            \"children\": [{\n              \"name\": \"AggregateExpression\",\n              \"value\": 1616\n            }, {\n              \"name\": \"And\",\n              \"value\": 1027\n            }, {\n              \"name\": \"Arithmetic\",\n              \"value\": 3891\n            }, {\n              \"name\": \"Average\",\n              \"value\": 891\n            }, {\n              \"name\": \"BinaryExpression\",\n              \"value\": 2893\n            }, {\n              \"name\": \"Comparison\",\n              \"value\": 5103\n            }, {\n              \"name\": \"CompositeExpression\",\n              \"value\": 3677\n            }, {\n              \"name\": \"Count\",\n              \"value\": 781\n            }, {\n              \"name\": \"DateUtil\",\n              \"value\": 4141\n            }, {\n              \"name\": \"Distinct\",\n              \"value\": 933\n            }, {\n              \"name\": \"Expression\",\n              \"value\": 5130\n            }, {\n              \"name\": \"ExpressionIterator\",\n              \"value\": 3617\n            }, {\n              \"name\": \"Fn\",\n              \"value\": 3240\n            }, {\n              \"name\": \"If\",\n              \"value\": 2732\n            }, {\n              \"name\": \"IsA\",\n              \"value\": 2039\n            }, {\n              \"name\": \"Literal\",\n              \"value\": 1214\n            }, {\n              \"name\": \"Match\",\n              \"value\": 3748\n            }, {\n              \"name\": \"Maximum\",\n              \"value\": 843\n            }, {\n              \"name\": \"methods\",\n              \"children\": [{\n                \"name\": \"add\",\n                \"value\": 593\n              }, {\n                \"name\": \"and\",\n                \"value\": 330\n              }, {\n                \"name\": \"average\",\n                \"value\": 287\n              }, {\n                \"name\": \"count\",\n                \"value\": 277\n              }, {\n                \"name\": \"distinct\",\n                \"value\": 292\n              }, {\n                \"name\": \"div\",\n                \"value\": 595\n              }, {\n                \"name\": \"eq\",\n                \"value\": 594\n              }, {\n                \"name\": \"fn\",\n                \"value\": 460\n              }, {\n                \"name\": \"gt\",\n                \"value\": 603\n              }, {\n                \"name\": \"gte\",\n                \"value\": 625\n              }, {\n                \"name\": \"iff\",\n                \"value\": 748\n              }, {\n                \"name\": \"isa\",\n                \"value\": 461\n              }, {\n                \"name\": \"lt\",\n                \"value\": 597\n              }, {\n                \"name\": \"lte\",\n                \"value\": 619\n              }, {\n                \"name\": \"max\",\n                \"value\": 283\n              }, {\n                \"name\": \"min\",\n                \"value\": 283\n              }, {\n                \"name\": \"mod\",\n                \"value\": 591\n              }, {\n                \"name\": \"mul\",\n                \"value\": 603\n              }, {\n                \"name\": \"neq\",\n                \"value\": 599\n              }, {\n                \"name\": \"not\",\n                \"value\": 386\n              }, {\n                \"name\": \"or\",\n                \"value\": 323\n              }, {\n                \"name\": \"orderby\",\n                \"value\": 307\n              }, {\n                \"name\": \"range\",\n                \"value\": 772\n              }, {\n                \"name\": \"select\",\n                \"value\": 296\n              }, {\n                \"name\": \"stddev\",\n                \"value\": 363\n              }, {\n                \"name\": \"sub\",\n                \"value\": 600\n              }, {\n                \"name\": \"sum\",\n                \"value\": 280\n              }, {\n                \"name\": \"update\",\n                \"value\": 307\n              }, {\n                \"name\": \"variance\",\n                \"value\": 335\n              }, {\n                \"name\": \"where\",\n                \"value\": 299\n              }, {\n                \"name\": \"xor\",\n                \"value\": 354\n              }, {\n                \"name\": \"_\",\n                \"value\": 264\n              }]\n            }, {\n              \"name\": \"Minimum\",\n              \"value\": 843\n            }, {\n              \"name\": \"Not\",\n              \"value\": 1554\n            }, {\n              \"name\": \"Or\",\n              \"value\": 970\n            }, {\n              \"name\": \"Query\",\n              \"value\": 13896\n            }, {\n              \"name\": \"Range\",\n              \"value\": 1594\n            }, {\n              \"name\": \"StringUtil\",\n              \"value\": 4130\n            }, {\n              \"name\": \"Sum\",\n              \"value\": 791\n            }, {\n              \"name\": \"Variable\",\n              \"value\": 1124\n            }, {\n              \"name\": \"Variance\",\n              \"value\": 1876\n            }, {\n              \"name\": \"Xor\",\n              \"value\": 1101\n            }]\n          }, {\n            \"name\": \"scale\",\n            \"children\": [{\n              \"name\": \"IScaleMap\",\n              \"value\": 2105\n            }, {\n              \"name\": \"LinearScale\",\n              \"value\": 1316\n            }, {\n              \"name\": \"LogScale\",\n              \"value\": 3151\n            }, {\n              \"name\": \"OrdinalScale\",\n              \"value\": 3770\n            }, {\n              \"name\": \"QuantileScale\",\n              \"value\": 2435\n            }, {\n              \"name\": \"QuantitativeScale\",\n              \"value\": 4839\n            }, {\n              \"name\": \"RootScale\",\n              \"value\": 1756\n            }, {\n              \"name\": \"Scale\",\n              \"value\": 4268\n            }, {\n              \"name\": \"ScaleType\",\n              \"value\": 1821\n            }, {\n              \"name\": \"TimeScale\",\n              \"value\": 5833\n            }]\n          }, {\n            \"name\": \"util\",\n            \"children\": [{\n              \"name\": \"Arrays\",\n              \"value\": 8258\n            }, {\n              \"name\": \"Colors\",\n              \"value\": 10001\n            }, {\n              \"name\": \"Dates\",\n              \"value\": 8217\n            }, {\n              \"name\": \"Displays\",\n              \"value\": 12555\n            }, {\n              \"name\": \"Filter\",\n              \"value\": 2324\n            }, {\n              \"name\": \"Geometry\",\n              \"value\": 10993\n            }, {\n              \"name\": \"heap\",\n              \"children\": [{\n                \"name\": \"FibonacciHeap\",\n                \"value\": 9354\n              }, {\n                \"name\": \"HeapNode\",\n                \"value\": 1233\n              }]\n            }, {\n              \"name\": \"IEvaluable\",\n              \"value\": 335\n            }, {\n              \"name\": \"IPredicate\",\n              \"value\": 383\n            }, {\n              \"name\": \"IValueProxy\",\n              \"value\": 874\n            }, {\n              \"name\": \"math\",\n              \"children\": [{\n                \"name\": \"DenseMatrix\",\n                \"value\": 3165\n              }, {\n                \"name\": \"IMatrix\",\n                \"value\": 2815\n              }, {\n                \"name\": \"SparseMatrix\",\n                \"value\": 3366\n              }]\n            }, {\n              \"name\": \"Maths\",\n              \"value\": 17705\n            }, {\n              \"name\": \"Orientation\",\n              \"value\": 1486\n            }, {\n              \"name\": \"palette\",\n              \"children\": [{\n                \"name\": \"ColorPalette\",\n                \"value\": 6367\n              }, {\n                \"name\": \"Palette\",\n                \"value\": 1229\n              }, {\n                \"name\": \"ShapePalette\",\n                \"value\": 2059\n              }, {\n                \"name\": \"SizePalette\",\n                \"value\": 2291\n              }]\n            }, {\n              \"name\": \"Property\",\n              \"value\": 5559\n            }, {\n              \"name\": \"Shapes\",\n              \"value\": 19118\n            }, {\n              \"name\": \"Sort\",\n              \"value\": 6887\n            }, {\n              \"name\": \"Stats\",\n              \"value\": 6557\n            }, {\n              \"name\": \"Strings\",\n              \"value\": 22026\n            }]\n          }, {\n            \"name\": \"vis\",\n            \"children\": [{\n              \"name\": \"axis\",\n              \"children\": [{\n                \"name\": \"Axes\",\n                \"value\": 1302\n              }, {\n                \"name\": \"Axis\",\n                \"value\": 24593\n              }, {\n                \"name\": \"AxisGridLine\",\n                \"value\": 652\n              }, {\n                \"name\": \"AxisLabel\",\n                \"value\": 636\n              }, {\n                \"name\": \"CartesianAxes\",\n                \"value\": 6703\n              }]\n            }, {\n              \"name\": \"controls\",\n              \"children\": [{\n                \"name\": \"AnchorControl\",\n                \"value\": 2138\n              }, {\n                \"name\": \"ClickControl\",\n                \"value\": 3824\n              }, {\n                \"name\": \"Control\",\n                \"value\": 1353\n              }, {\n                \"name\": \"ControlList\",\n                \"value\": 4665\n              }, {\n                \"name\": \"DragControl\",\n                \"value\": 2649\n              }, {\n                \"name\": \"ExpandControl\",\n                \"value\": 2832\n              }, {\n                \"name\": \"HoverControl\",\n                \"value\": 4896\n              }, {\n                \"name\": \"IControl\",\n                \"value\": 763\n              }, {\n                \"name\": \"PanZoomControl\",\n                \"value\": 5222\n              }, {\n                \"name\": \"SelectionControl\",\n                \"value\": 7862\n              }, {\n                \"name\": \"TooltipControl\",\n                \"value\": 8435\n              }]\n            }, {\n              \"name\": \"data\",\n              \"children\": [{\n                \"name\": \"Data\",\n                \"value\": 20544\n              }, {\n                \"name\": \"DataList\",\n                \"value\": 19788\n              }, {\n                \"name\": \"DataSprite\",\n                \"value\": 10349\n              }, {\n                \"name\": \"EdgeSprite\",\n                \"value\": 3301\n              }, {\n                \"name\": \"NodeSprite\",\n                \"value\": 19382\n              }, {\n                \"name\": \"render\",\n                \"children\": [{\n                  \"name\": \"ArrowType\",\n                  \"value\": 698\n                }, {\n                  \"name\": \"EdgeRenderer\",\n                  \"value\": 5569\n                }, {\n                  \"name\": \"IRenderer\",\n                  \"value\": 353\n                }, {\n                  \"name\": \"ShapeRenderer\",\n                  \"value\": 2247\n                }]\n              }, {\n                \"name\": \"ScaleBinding\",\n                \"value\": 11275\n              }, {\n                \"name\": \"Tree\",\n                \"value\": 7147\n              }, {\n                \"name\": \"TreeBuilder\",\n                \"value\": 9930\n              }]\n            }, {\n              \"name\": \"events\",\n              \"children\": [{\n                \"name\": \"DataEvent\",\n                \"value\": 2313\n              }, {\n                \"name\": \"SelectionEvent\",\n                \"value\": 1880\n              }, {\n                \"name\": \"TooltipEvent\",\n                \"value\": 1701\n              }, {\n                \"name\": \"VisualizationEvent\",\n                \"value\": 1117\n              }]\n            }, {\n              \"name\": \"legend\",\n              \"children\": [{\n                \"name\": \"Legend\",\n                \"value\": 20859\n              }, {\n                \"name\": \"LegendItem\",\n                \"value\": 4614\n              }, {\n                \"name\": \"LegendRange\",\n                \"value\": 10530\n              }]\n            }, {\n              \"name\": \"operator\",\n              \"children\": [{\n                \"name\": \"distortion\",\n                \"children\": [{\n                  \"name\": \"BifocalDistortion\",\n                  \"value\": 4461\n                }, {\n                  \"name\": \"Distortion\",\n                  \"value\": 6314\n                }, {\n                  \"name\": \"FisheyeDistortion\",\n                  \"value\": 3444\n                }]\n              }, {\n                \"name\": \"encoder\",\n                \"children\": [{\n                  \"name\": \"ColorEncoder\",\n                  \"value\": 3179\n                }, {\n                  \"name\": \"Encoder\",\n                  \"value\": 4060\n                }, {\n                  \"name\": \"PropertyEncoder\",\n                  \"value\": 4138\n                }, {\n                  \"name\": \"ShapeEncoder\",\n                  \"value\": 1690\n                }, {\n                  \"name\": \"SizeEncoder\",\n                  \"value\": 1830\n                }]\n              }, {\n                \"name\": \"filter\",\n                \"children\": [{\n                  \"name\": \"FisheyeTreeFilter\",\n                  \"value\": 5219\n                }, {\n                  \"name\": \"GraphDistanceFilter\",\n                  \"value\": 3165\n                }, {\n                  \"name\": \"VisibilityFilter\",\n                  \"value\": 3509\n                }]\n              }, {\n                \"name\": \"IOperator\",\n                \"value\": 1286\n              }, {\n                \"name\": \"label\",\n                \"children\": [{\n                  \"name\": \"Labeler\",\n                  \"value\": 9956\n                }, {\n                  \"name\": \"RadialLabeler\",\n                  \"value\": 3899\n                }, {\n                  \"name\": \"StackedAreaLabeler\",\n                  \"value\": 3202\n                }]\n              }, {\n                \"name\": \"layout\",\n                \"children\": [{\n                  \"name\": \"AxisLayout\",\n                  \"value\": 6725\n                }, {\n                  \"name\": \"BundledEdgeRouter\",\n                  \"value\": 3727\n                }, {\n                  \"name\": \"CircleLayout\",\n                  \"value\": 9317\n                }, {\n                  \"name\": \"CirclePackingLayout\",\n                  \"value\": 12003\n                }, {\n                  \"name\": \"DendrogramLayout\",\n                  \"value\": 4853\n                }, {\n                  \"name\": \"ForceDirectedLayout\",\n                  \"value\": 8411\n                }, {\n                  \"name\": \"IcicleTreeLayout\",\n                  \"value\": 4864\n                }, {\n                  \"name\": \"IndentedTreeLayout\",\n                  \"value\": 3174\n                }, {\n                  \"name\": \"Layout\",\n                  \"value\": 7881\n                }, {\n                  \"name\": \"NodeLinkTreeLayout\",\n                  \"value\": 12870\n                }, {\n                  \"name\": \"PieLayout\",\n                  \"value\": 2728\n                }, {\n                  \"name\": \"RadialTreeLayout\",\n                  \"value\": 12348\n                }, {\n                  \"name\": \"RandomLayout\",\n                  \"value\": 870\n                }, {\n                  \"name\": \"StackedAreaLayout\",\n                  \"value\": 9121\n                }, {\n                  \"name\": \"TreeMapLayout\",\n                  \"value\": 9191\n                }]\n              }, {\n                \"name\": \"Operator\",\n                \"value\": 2490\n              }, {\n                \"name\": \"OperatorList\",\n                \"value\": 5248\n              }, {\n                \"name\": \"OperatorSequence\",\n                \"value\": 4190\n              }, {\n                \"name\": \"OperatorSwitch\",\n                \"value\": 2581\n              }, {\n                \"name\": \"SortOperator\",\n                \"value\": 2023\n              }]\n            }, {\n              \"name\": \"Visualization\",\n              \"value\": 16540\n            }]\n          }]\n        };\n        userFunc(d3, svgContainer, sampleData);\n      } catch (error) {\n        console.error(\"代码执行出错:\", error);\n        alert(\"代码执行出错，请检查代码。\");\n      }\n    },\n    saveD3Output() {\n      const svgElement = this.$refs.d3Output.querySelector('svg');\n      if (!svgElement) {\n        alert(\"没有可保存的 D3.js 图形，请先运行代码。\");\n        return;\n      }\n\n      // 将 SVG 转换为 PNG 图片\n      const svgData = new XMLSerializer().serializeToString(svgElement);\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n      const svgBlob = new Blob([svgData], {\n        type: 'image/svg+xml;charset=utf-8'\n      });\n      const url = URL.createObjectURL(svgBlob);\n      img.onload = () => {\n        // 设置 canvas 大小与 SVG 一致\n        canvas.width = img.width;\n        canvas.height = img.height;\n\n        // 将 SVG 绘制到 canvas 上\n        ctx.drawImage(img, 0, 0);\n\n        // 将 canvas 转换为 PNG\n        canvas.toBlob(blob => {\n          const formData = new FormData();\n          formData.append('file', blob, 'd3-output.png');\n\n          // 上传图片到服务器\n          axios.post(this.$baseUrl + '/files/upload', formData).then(response => {\n            const pictureUrl = response.data.data;\n            console.log('Picture URL:', pictureUrl); // 调试输出\n            // 保存或者更新 notes\n            const noteData = {\n              id: this.noteId,\n              comment: 'D3.js 图形',\n              code: this.d3Code,\n              picture: pictureUrl\n            };\n            this.$request({\n              method: this.noteId ? 'put' : 'post',\n              url: this.noteId ? '/notes/update' : '/notes/add',\n              data: noteData\n            }).then(res => {\n              if (res.code === '200') {\n                this.$message.success(this.noteId ? 'Note 更新成功' : 'Note 创建成功');\n              } else {\n                this.$message.error(res.msg || '操作失败');\n              }\n            }).catch(error => {\n              console.error(this.noteId ? '更新 Note 失败:' : '创建 Note 失败:', error);\n              this.$message.error('操作失败，请稍后再试');\n            });\n          }).catch(error => {\n            console.error(\"上传图片失败:\", error);\n          });\n        });\n      };\n      img.src = url; // 触发图像加载\n    }\n  }\n};","map":{"version":3,"names":["d3","axios","Plot","h","name","data","d3Code","$route","query","code","pictureUrl","picture","noteId","id","created","fetchNoteDetails","methods","$request","get","then","res","$message","error","msg","catch","console","runD3Code","svgContainer","$refs","d3Output","firstChild","removeChild","includes","parseCSV","csvData","delimiter","rows","trim","split","headers","map","header","slice","row","values","value","obj","forEach","index","isNaN","parseFloat","filenameMatch","match","filename","join","log","fileUrl","response","csvdata","userFunc","Function","alert","runInteractiveD3","sampleData","saveD3Output","svgElement","querySelector","svgData","XMLSerializer","serializeToString","canvas","document","createElement","ctx","getContext","img","Image","svgBlob","Blob","type","url","URL","createObjectURL","onload","width","height","drawImage","toBlob","blob","formData","FormData","append","post","$baseUrl","noteData","comment","method","success","src"],"sources":["src/views/manager/D3Runner.vue"],"sourcesContent":["<template>\r\n  <div class=\"d3-runner-container\">\r\n    <h3>D3.js 绘图页面</h3>\r\n    <textarea v-model=\"d3Code\" rows=\"10\" placeholder=\"输入 D3.js 代码\"></textarea>\r\n    <button @click=\"runD3Code\">运行代码</button>\r\n    <button @click=\"runInteractiveD3\">运行互动图</button>\r\n    <button @click=\"saveD3Output\">保存</button>\r\n    <div ref=\"d3Output\" class=\"d3-output\"></div>\r\n\r\n    <!-- 显示图片 -->\r\n    <div v-if=\"pictureUrl\" class=\"note-picture\">\r\n      <img :src=\"pictureUrl\" alt=\"D3 Output\" style=\"max-width: 100%; margin-top: 10px;\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3';\r\nimport axios from 'axios';\r\nimport * as Plot from '@observablehq/plot'; // 导入 Plot\r\nimport { h } from \"vue\";  // 确保在此处导入 h 函数\r\n\r\nexport default {\r\n  name: \"D3Runner\",\r\n  data() {\r\n    return {\r\n      d3Code: this.$route.query.code || \"\", // 存储用户输入的 D3.js 代码\r\n      pictureUrl: this.$route.query.picture || \"\", // 存储图片URL\r\n      noteId: this.$route.query.id || null, // 从路由获取 noteId，若无则为新建\r\n    };\r\n  },\r\n  created() {\r\n    if (this.noteId) {\r\n      this.fetchNoteDetails();\r\n    }\r\n  },\r\n  methods: {\r\n    fetchNoteDetails() {\r\n      // 将请求 URL 修改为路径变量形式\r\n      this.$request.get(`/notes/selectById/${this.noteId}`)\r\n        .then(res => {\r\n          if (res.code === '200' && res.data) {\r\n            this.d3Code = res.data.code || \"\"; // 将 code 放入 d3Code\r\n            this.pictureUrl = res.data.picture || \"\"; // 将图片 URL 放入 pictureUrl\r\n          } else {\r\n            this.$message.error(res.msg || '无法加载Note详情');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error(\"获取 Note 详情失败:\", error);\r\n          this.$message.error('获取 Note 详情失败');\r\n        });\r\n    },\r\n    runD3Code() {\r\n      const svgContainer = this.$refs.d3Output;\r\n\r\n      // 清空以前的图像\r\n      while (svgContainer.firstChild) {\r\n        svgContainer.removeChild(svgContainer.firstChild);\r\n      }\r\n\r\n      // 运行用户输入的代码\r\n      try {\r\n        if (this.d3Code.includes('Plot')) {\r\n          if (this.d3Code.includes('data')) {\r\n            function parseCSV(csvData, delimiter = ',') {\r\n              const rows = csvData.trim().split('\\n');\r\n              const headers = rows[0].split(delimiter).map(header => header.trim());\r\n\r\n              const data = rows.slice(1).map(row => {\r\n                const values = row.split(delimiter).map(value => value.trim());\r\n                const obj = {};\r\n\r\n                headers.forEach((header, index) => {\r\n                  obj[header] = isNaN(values[index]) ? values[index] : parseFloat(values[index]);\r\n                });\r\n\r\n                return obj;\r\n              });\r\n\r\n              return data;\r\n            }\r\n\r\n            const filenameMatch = this.d3Code.match(/data\\s*=\\s*\"([^\"]+)\"/);\r\n            const filename = filenameMatch ? filenameMatch[1] : null;\r\n            const code = this.d3Code.split('\\n').slice(1).join('\\n').trim();\r\n            console.log('filename:', filename); // 调试输出\r\n            console.log('code:', code); // 调试输出\r\n            // 确保在请求成功后再调用 userFunc\r\n\r\n            const fileUrl = 'http://localhost:9090' + '/files/' + filename;\r\n            console.log('fileUrl:', fileUrl); // 调试输出\r\n            axios.get(fileUrl)\r\n              .then(response => {\r\n                console.log('CSV data:', response.data); // 调试输出\r\n                const csvdata = parseCSV(response.data, ',');\r\n                console.log('CSV data:', csvdata); // 调试输出\r\n                console.log(`Generated function code: const plot = Plot.plot(${code});`);\r\n\r\n                const userFunc = new Function('Plot', 'container', 'data', `\r\n                  const plot = Plot.plot({${code}});\r\n                  container.appendChild(plot);\r\n                `);\r\n                userFunc(Plot, svgContainer, csvdata); // 在这里调用 userFunc，确保 csvdata 已赋值\r\n              })\r\n              .catch(error => {\r\n                console.error('Error fetching CSV data:', error); // 错误处理\r\n              });\r\n\r\n          } else {\r\n            // 包装用户输入的代码\r\n            const userFunc = new Function('Plot', 'container',\r\n              `const plot = Plot.plot(${this.d3Code});\r\n              container.appendChild(plot);`\r\n            );\r\n            userFunc(Plot, svgContainer);\r\n          }\r\n\r\n        } else {\r\n          const userFunc = new Function('d3', 'container', this.d3Code);\r\n          userFunc(d3, svgContainer);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"代码执行出错:\", error);\r\n        alert(\"代码执行出错，请检查代码。\");\r\n      }\r\n    },\r\n    runInteractiveD3() {\r\n    const svgContainer = this.$refs.d3Output;\r\n\r\n    // 清空以前的图像\r\n    while (svgContainer.firstChild) {\r\n      svgContainer.removeChild(svgContainer.firstChild);\r\n    }\r\n\r\n    try {\r\n      const userFunc = new Function('d3', 'container', 'data', this.d3Code);\r\n      // Example Data (可以替换为实际数据)\r\n      const sampleData = {\r\n \"name\": \"flare\",\r\n \"children\": [\r\n  {\r\n   \"name\": \"analytics\",\r\n   \"children\": [\r\n    {\r\n     \"name\": \"cluster\",\r\n     \"children\": [\r\n      {\"name\": \"AgglomerativeCluster\", \"value\": 3938},\r\n      {\"name\": \"CommunityStructure\", \"value\": 3812},\r\n      {\"name\": \"HierarchicalCluster\", \"value\": 6714},\r\n      {\"name\": \"MergeEdge\", \"value\": 743}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"graph\",\r\n     \"children\": [\r\n      {\"name\": \"BetweennessCentrality\", \"value\": 3534},\r\n      {\"name\": \"LinkDistance\", \"value\": 5731},\r\n      {\"name\": \"MaxFlowMinCut\", \"value\": 7840},\r\n      {\"name\": \"ShortestPaths\", \"value\": 5914},\r\n      {\"name\": \"SpanningTree\", \"value\": 3416}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"optimization\",\r\n     \"children\": [\r\n      {\"name\": \"AspectRatioBanker\", \"value\": 7074}\r\n     ]\r\n    }\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"animate\",\r\n   \"children\": [\r\n    {\"name\": \"Easing\", \"value\": 17010},\r\n    {\"name\": \"FunctionSequence\", \"value\": 5842},\r\n    {\r\n     \"name\": \"interpolate\",\r\n     \"children\": [\r\n      {\"name\": \"ArrayInterpolator\", \"value\": 1983},\r\n      {\"name\": \"ColorInterpolator\", \"value\": 2047},\r\n      {\"name\": \"DateInterpolator\", \"value\": 1375},\r\n      {\"name\": \"Interpolator\", \"value\": 8746},\r\n      {\"name\": \"MatrixInterpolator\", \"value\": 2202},\r\n      {\"name\": \"NumberInterpolator\", \"value\": 1382},\r\n      {\"name\": \"ObjectInterpolator\", \"value\": 1629},\r\n      {\"name\": \"PointInterpolator\", \"value\": 1675},\r\n      {\"name\": \"RectangleInterpolator\", \"value\": 2042}\r\n     ]\r\n    },\r\n    {\"name\": \"ISchedulable\", \"value\": 1041},\r\n    {\"name\": \"Parallel\", \"value\": 5176},\r\n    {\"name\": \"Pause\", \"value\": 449},\r\n    {\"name\": \"Scheduler\", \"value\": 5593},\r\n    {\"name\": \"Sequence\", \"value\": 5534},\r\n    {\"name\": \"Transition\", \"value\": 9201},\r\n    {\"name\": \"Transitioner\", \"value\": 19975},\r\n    {\"name\": \"TransitionEvent\", \"value\": 1116},\r\n    {\"name\": \"Tween\", \"value\": 6006}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"data\",\r\n   \"children\": [\r\n    {\r\n     \"name\": \"converters\",\r\n     \"children\": [\r\n      {\"name\": \"Converters\", \"value\": 721},\r\n      {\"name\": \"DelimitedTextConverter\", \"value\": 4294},\r\n      {\"name\": \"GraphMLConverter\", \"value\": 9800},\r\n      {\"name\": \"IDataConverter\", \"value\": 1314},\r\n      {\"name\": \"JSONConverter\", \"value\": 2220}\r\n     ]\r\n    },\r\n    {\"name\": \"DataField\", \"value\": 1759},\r\n    {\"name\": \"DataSchema\", \"value\": 2165},\r\n    {\"name\": \"DataSet\", \"value\": 586},\r\n    {\"name\": \"DataSource\", \"value\": 3331},\r\n    {\"name\": \"DataTable\", \"value\": 772},\r\n    {\"name\": \"DataUtil\", \"value\": 3322}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"display\",\r\n   \"children\": [\r\n    {\"name\": \"DirtySprite\", \"value\": 8833},\r\n    {\"name\": \"LineSprite\", \"value\": 1732},\r\n    {\"name\": \"RectSprite\", \"value\": 3623},\r\n    {\"name\": \"TextSprite\", \"value\": 10066}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"flex\",\r\n   \"children\": [\r\n    {\"name\": \"FlareVis\", \"value\": 4116}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"physics\",\r\n   \"children\": [\r\n    {\"name\": \"DragForce\", \"value\": 1082},\r\n    {\"name\": \"GravityForce\", \"value\": 1336},\r\n    {\"name\": \"IForce\", \"value\": 319},\r\n    {\"name\": \"NBodyForce\", \"value\": 10498},\r\n    {\"name\": \"Particle\", \"value\": 2822},\r\n    {\"name\": \"Simulation\", \"value\": 9983},\r\n    {\"name\": \"Spring\", \"value\": 2213},\r\n    {\"name\": \"SpringForce\", \"value\": 1681}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"query\",\r\n   \"children\": [\r\n    {\"name\": \"AggregateExpression\", \"value\": 1616},\r\n    {\"name\": \"And\", \"value\": 1027},\r\n    {\"name\": \"Arithmetic\", \"value\": 3891},\r\n    {\"name\": \"Average\", \"value\": 891},\r\n    {\"name\": \"BinaryExpression\", \"value\": 2893},\r\n    {\"name\": \"Comparison\", \"value\": 5103},\r\n    {\"name\": \"CompositeExpression\", \"value\": 3677},\r\n    {\"name\": \"Count\", \"value\": 781},\r\n    {\"name\": \"DateUtil\", \"value\": 4141},\r\n    {\"name\": \"Distinct\", \"value\": 933},\r\n    {\"name\": \"Expression\", \"value\": 5130},\r\n    {\"name\": \"ExpressionIterator\", \"value\": 3617},\r\n    {\"name\": \"Fn\", \"value\": 3240},\r\n    {\"name\": \"If\", \"value\": 2732},\r\n    {\"name\": \"IsA\", \"value\": 2039},\r\n    {\"name\": \"Literal\", \"value\": 1214},\r\n    {\"name\": \"Match\", \"value\": 3748},\r\n    {\"name\": \"Maximum\", \"value\": 843},\r\n    {\r\n     \"name\": \"methods\",\r\n     \"children\": [\r\n      {\"name\": \"add\", \"value\": 593},\r\n      {\"name\": \"and\", \"value\": 330},\r\n      {\"name\": \"average\", \"value\": 287},\r\n      {\"name\": \"count\", \"value\": 277},\r\n      {\"name\": \"distinct\", \"value\": 292},\r\n      {\"name\": \"div\", \"value\": 595},\r\n      {\"name\": \"eq\", \"value\": 594},\r\n      {\"name\": \"fn\", \"value\": 460},\r\n      {\"name\": \"gt\", \"value\": 603},\r\n      {\"name\": \"gte\", \"value\": 625},\r\n      {\"name\": \"iff\", \"value\": 748},\r\n      {\"name\": \"isa\", \"value\": 461},\r\n      {\"name\": \"lt\", \"value\": 597},\r\n      {\"name\": \"lte\", \"value\": 619},\r\n      {\"name\": \"max\", \"value\": 283},\r\n      {\"name\": \"min\", \"value\": 283},\r\n      {\"name\": \"mod\", \"value\": 591},\r\n      {\"name\": \"mul\", \"value\": 603},\r\n      {\"name\": \"neq\", \"value\": 599},\r\n      {\"name\": \"not\", \"value\": 386},\r\n      {\"name\": \"or\", \"value\": 323},\r\n      {\"name\": \"orderby\", \"value\": 307},\r\n      {\"name\": \"range\", \"value\": 772},\r\n      {\"name\": \"select\", \"value\": 296},\r\n      {\"name\": \"stddev\", \"value\": 363},\r\n      {\"name\": \"sub\", \"value\": 600},\r\n      {\"name\": \"sum\", \"value\": 280},\r\n      {\"name\": \"update\", \"value\": 307},\r\n      {\"name\": \"variance\", \"value\": 335},\r\n      {\"name\": \"where\", \"value\": 299},\r\n      {\"name\": \"xor\", \"value\": 354},\r\n      {\"name\": \"_\", \"value\": 264}\r\n     ]\r\n    },\r\n    {\"name\": \"Minimum\", \"value\": 843},\r\n    {\"name\": \"Not\", \"value\": 1554},\r\n    {\"name\": \"Or\", \"value\": 970},\r\n    {\"name\": \"Query\", \"value\": 13896},\r\n    {\"name\": \"Range\", \"value\": 1594},\r\n    {\"name\": \"StringUtil\", \"value\": 4130},\r\n    {\"name\": \"Sum\", \"value\": 791},\r\n    {\"name\": \"Variable\", \"value\": 1124},\r\n    {\"name\": \"Variance\", \"value\": 1876},\r\n    {\"name\": \"Xor\", \"value\": 1101}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"scale\",\r\n   \"children\": [\r\n    {\"name\": \"IScaleMap\", \"value\": 2105},\r\n    {\"name\": \"LinearScale\", \"value\": 1316},\r\n    {\"name\": \"LogScale\", \"value\": 3151},\r\n    {\"name\": \"OrdinalScale\", \"value\": 3770},\r\n    {\"name\": \"QuantileScale\", \"value\": 2435},\r\n    {\"name\": \"QuantitativeScale\", \"value\": 4839},\r\n    {\"name\": \"RootScale\", \"value\": 1756},\r\n    {\"name\": \"Scale\", \"value\": 4268},\r\n    {\"name\": \"ScaleType\", \"value\": 1821},\r\n    {\"name\": \"TimeScale\", \"value\": 5833}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"util\",\r\n   \"children\": [\r\n    {\"name\": \"Arrays\", \"value\": 8258},\r\n    {\"name\": \"Colors\", \"value\": 10001},\r\n    {\"name\": \"Dates\", \"value\": 8217},\r\n    {\"name\": \"Displays\", \"value\": 12555},\r\n    {\"name\": \"Filter\", \"value\": 2324},\r\n    {\"name\": \"Geometry\", \"value\": 10993},\r\n    {\r\n     \"name\": \"heap\",\r\n     \"children\": [\r\n      {\"name\": \"FibonacciHeap\", \"value\": 9354},\r\n      {\"name\": \"HeapNode\", \"value\": 1233}\r\n     ]\r\n    },\r\n    {\"name\": \"IEvaluable\", \"value\": 335},\r\n    {\"name\": \"IPredicate\", \"value\": 383},\r\n    {\"name\": \"IValueProxy\", \"value\": 874},\r\n    {\r\n     \"name\": \"math\",\r\n     \"children\": [\r\n      {\"name\": \"DenseMatrix\", \"value\": 3165},\r\n      {\"name\": \"IMatrix\", \"value\": 2815},\r\n      {\"name\": \"SparseMatrix\", \"value\": 3366}\r\n     ]\r\n    },\r\n    {\"name\": \"Maths\", \"value\": 17705},\r\n    {\"name\": \"Orientation\", \"value\": 1486},\r\n    {\r\n     \"name\": \"palette\",\r\n     \"children\": [\r\n      {\"name\": \"ColorPalette\", \"value\": 6367},\r\n      {\"name\": \"Palette\", \"value\": 1229},\r\n      {\"name\": \"ShapePalette\", \"value\": 2059},\r\n      {\"name\": \"SizePalette\", \"value\": 2291}\r\n     ]\r\n    },\r\n    {\"name\": \"Property\", \"value\": 5559},\r\n    {\"name\": \"Shapes\", \"value\": 19118},\r\n    {\"name\": \"Sort\", \"value\": 6887},\r\n    {\"name\": \"Stats\", \"value\": 6557},\r\n    {\"name\": \"Strings\", \"value\": 22026}\r\n   ]\r\n  },\r\n  {\r\n   \"name\": \"vis\",\r\n   \"children\": [\r\n    {\r\n     \"name\": \"axis\",\r\n     \"children\": [\r\n      {\"name\": \"Axes\", \"value\": 1302},\r\n      {\"name\": \"Axis\", \"value\": 24593},\r\n      {\"name\": \"AxisGridLine\", \"value\": 652},\r\n      {\"name\": \"AxisLabel\", \"value\": 636},\r\n      {\"name\": \"CartesianAxes\", \"value\": 6703}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"controls\",\r\n     \"children\": [\r\n      {\"name\": \"AnchorControl\", \"value\": 2138},\r\n      {\"name\": \"ClickControl\", \"value\": 3824},\r\n      {\"name\": \"Control\", \"value\": 1353},\r\n      {\"name\": \"ControlList\", \"value\": 4665},\r\n      {\"name\": \"DragControl\", \"value\": 2649},\r\n      {\"name\": \"ExpandControl\", \"value\": 2832},\r\n      {\"name\": \"HoverControl\", \"value\": 4896},\r\n      {\"name\": \"IControl\", \"value\": 763},\r\n      {\"name\": \"PanZoomControl\", \"value\": 5222},\r\n      {\"name\": \"SelectionControl\", \"value\": 7862},\r\n      {\"name\": \"TooltipControl\", \"value\": 8435}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"data\",\r\n     \"children\": [\r\n      {\"name\": \"Data\", \"value\": 20544},\r\n      {\"name\": \"DataList\", \"value\": 19788},\r\n      {\"name\": \"DataSprite\", \"value\": 10349},\r\n      {\"name\": \"EdgeSprite\", \"value\": 3301},\r\n      {\"name\": \"NodeSprite\", \"value\": 19382},\r\n      {\r\n       \"name\": \"render\",\r\n       \"children\": [\r\n        {\"name\": \"ArrowType\", \"value\": 698},\r\n        {\"name\": \"EdgeRenderer\", \"value\": 5569},\r\n        {\"name\": \"IRenderer\", \"value\": 353},\r\n        {\"name\": \"ShapeRenderer\", \"value\": 2247}\r\n       ]\r\n      },\r\n      {\"name\": \"ScaleBinding\", \"value\": 11275},\r\n      {\"name\": \"Tree\", \"value\": 7147},\r\n      {\"name\": \"TreeBuilder\", \"value\": 9930}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"events\",\r\n     \"children\": [\r\n      {\"name\": \"DataEvent\", \"value\": 2313},\r\n      {\"name\": \"SelectionEvent\", \"value\": 1880},\r\n      {\"name\": \"TooltipEvent\", \"value\": 1701},\r\n      {\"name\": \"VisualizationEvent\", \"value\": 1117}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"legend\",\r\n     \"children\": [\r\n      {\"name\": \"Legend\", \"value\": 20859},\r\n      {\"name\": \"LegendItem\", \"value\": 4614},\r\n      {\"name\": \"LegendRange\", \"value\": 10530}\r\n     ]\r\n    },\r\n    {\r\n     \"name\": \"operator\",\r\n     \"children\": [\r\n      {\r\n       \"name\": \"distortion\",\r\n       \"children\": [\r\n        {\"name\": \"BifocalDistortion\", \"value\": 4461},\r\n        {\"name\": \"Distortion\", \"value\": 6314},\r\n        {\"name\": \"FisheyeDistortion\", \"value\": 3444}\r\n       ]\r\n      },\r\n      {\r\n       \"name\": \"encoder\",\r\n       \"children\": [\r\n        {\"name\": \"ColorEncoder\", \"value\": 3179},\r\n        {\"name\": \"Encoder\", \"value\": 4060},\r\n        {\"name\": \"PropertyEncoder\", \"value\": 4138},\r\n        {\"name\": \"ShapeEncoder\", \"value\": 1690},\r\n        {\"name\": \"SizeEncoder\", \"value\": 1830}\r\n       ]\r\n      },\r\n      {\r\n       \"name\": \"filter\",\r\n       \"children\": [\r\n        {\"name\": \"FisheyeTreeFilter\", \"value\": 5219},\r\n        {\"name\": \"GraphDistanceFilter\", \"value\": 3165},\r\n        {\"name\": \"VisibilityFilter\", \"value\": 3509}\r\n       ]\r\n      },\r\n      {\"name\": \"IOperator\", \"value\": 1286},\r\n      {\r\n       \"name\": \"label\",\r\n       \"children\": [\r\n        {\"name\": \"Labeler\", \"value\": 9956},\r\n        {\"name\": \"RadialLabeler\", \"value\": 3899},\r\n        {\"name\": \"StackedAreaLabeler\", \"value\": 3202}\r\n       ]\r\n      },\r\n      {\r\n       \"name\": \"layout\",\r\n       \"children\": [\r\n        {\"name\": \"AxisLayout\", \"value\": 6725},\r\n        {\"name\": \"BundledEdgeRouter\", \"value\": 3727},\r\n        {\"name\": \"CircleLayout\", \"value\": 9317},\r\n        {\"name\": \"CirclePackingLayout\", \"value\": 12003},\r\n        {\"name\": \"DendrogramLayout\", \"value\": 4853},\r\n        {\"name\": \"ForceDirectedLayout\", \"value\": 8411},\r\n        {\"name\": \"IcicleTreeLayout\", \"value\": 4864},\r\n        {\"name\": \"IndentedTreeLayout\", \"value\": 3174},\r\n        {\"name\": \"Layout\", \"value\": 7881},\r\n        {\"name\": \"NodeLinkTreeLayout\", \"value\": 12870},\r\n        {\"name\": \"PieLayout\", \"value\": 2728},\r\n        {\"name\": \"RadialTreeLayout\", \"value\": 12348},\r\n        {\"name\": \"RandomLayout\", \"value\": 870},\r\n        {\"name\": \"StackedAreaLayout\", \"value\": 9121},\r\n        {\"name\": \"TreeMapLayout\", \"value\": 9191}\r\n       ]\r\n      },\r\n      {\"name\": \"Operator\", \"value\": 2490},\r\n      {\"name\": \"OperatorList\", \"value\": 5248},\r\n      {\"name\": \"OperatorSequence\", \"value\": 4190},\r\n      {\"name\": \"OperatorSwitch\", \"value\": 2581},\r\n      {\"name\": \"SortOperator\", \"value\": 2023}\r\n     ]\r\n    },\r\n    {\"name\": \"Visualization\", \"value\": 16540}\r\n   ]\r\n  }\r\n ]\r\n};\r\n      \r\n      userFunc(d3, svgContainer, sampleData);\r\n    } catch (error) {\r\n      console.error(\"代码执行出错:\", error);\r\n      alert(\"代码执行出错，请检查代码。\");\r\n    }\r\n  },\r\n    saveD3Output() {\r\n      const svgElement = this.$refs.d3Output.querySelector('svg');\r\n\r\n      if (!svgElement) {\r\n        alert(\"没有可保存的 D3.js 图形，请先运行代码。\");\r\n        return;\r\n      }\r\n\r\n      // 将 SVG 转换为 PNG 图片\r\n      const svgData = new XMLSerializer().serializeToString(svgElement);\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n      const img = new Image();\r\n\r\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' });\r\n      const url = URL.createObjectURL(svgBlob);\r\n\r\n      img.onload = () => {\r\n        // 设置 canvas 大小与 SVG 一致\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n\r\n        // 将 SVG 绘制到 canvas 上\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        // 将 canvas 转换为 PNG\r\n        canvas.toBlob((blob) => {\r\n          const formData = new FormData();\r\n          formData.append('file', blob, 'd3-output.png');\r\n\r\n          // 上传图片到服务器\r\n          axios.post(this.$baseUrl + '/files/upload', formData)\r\n            .then(response => {\r\n              const pictureUrl = response.data.data;\r\n              console.log('Picture URL:', pictureUrl); // 调试输出\r\n              // 保存或者更新 notes\r\n              const noteData = {\r\n                id: this.noteId,\r\n                comment: 'D3.js 图形',\r\n                code: this.d3Code,\r\n                picture: pictureUrl\r\n              };\r\n\r\n              this.$request({\r\n                method: this.noteId ? 'put' : 'post',\r\n                url: this.noteId ? '/notes/update' : '/notes/add',\r\n                data: noteData\r\n              }).then(res => {\r\n                if (res.code === '200') {\r\n                  this.$message.success(this.noteId ? 'Note 更新成功' : 'Note 创建成功');\r\n                } else {\r\n                  this.$message.error(res.msg || '操作失败');\r\n                }\r\n              }).catch(error => {\r\n                console.error(this.noteId ? '更新 Note 失败:' : '创建 Note 失败:', error);\r\n                this.$message.error('操作失败，请稍后再试');\r\n              });\r\n\r\n            })\r\n            .catch(error => {\r\n              console.error(\"上传图片失败:\", error);\r\n            });\r\n        });\r\n      };\r\n\r\n      img.src = url; // 触发图像加载\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ntextarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  font-family: monospace;\r\n  font-size: 14px;\r\n}\r\n\r\n.d3-runner-container {\r\n  background-color: white; /* 设置背景颜色为白色 */\r\n  padding: 20px; /* 可选：添加一些内边距 */\r\n  border-radius: 8px; /* 可选：圆角 */\r\n}\r\n\r\n.d3-output {\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  margin-top: 10px;\r\n  min-height: 300px;\r\n}\r\n\r\nbutton {\r\n  margin-right: 10px;\r\n}\r\n\r\n.note-picture img {\r\n  max-width: 100%;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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A;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA;UAEA,GACA;YACA;YACA,aACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA;UAEA,GACA;YACA;YACA,aACA;cAAA;cAAA;YAAA;UAEA,GACA;YACA;YACA,aACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA;UAEA,GACA;YACA;YACA,aACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cACA;cACA,aACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA;YAEA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA;UAEA,GACA;YACA;YACA,aACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA;UAEA,GACA;YACA;YACA,aACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cACA;cACA,aACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA;YAEA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cACA;cACA,aACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA;YAEA,GACA;cAAA;cAAA;YAAA,GACA;cAAA;cAAA;YAAA,GACA;cACA;cACA,aACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA,GACA;gBAAA;gBAAA;cAAA;YAEA,GACA;c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"},"metadata":{},"sourceType":"module","externalDependencies":[]}