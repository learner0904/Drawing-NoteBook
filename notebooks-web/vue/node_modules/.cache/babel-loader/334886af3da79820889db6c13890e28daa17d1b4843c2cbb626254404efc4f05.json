{"ast":null,"code":"import { extent, range, sum, area as shapeArea, namespaces } from \"d3\";\nimport { create } from \"../context.js\";\nimport { Mark } from \"../mark.js\";\nimport { identity, indexOf, isNone, isNoneish, maybeZ } from \"../options.js\";\nimport { qt } from \"../stats.js\";\nimport { applyDirectStyles, applyGroupedChannelStyles, applyIndirectStyles, applyTransform, groupZ } from \"../style.js\";\nimport { maybeDenseIntervalX, maybeDenseIntervalY } from \"../transforms/bin.js\";\nconst defaults = {\n  ariaLabel: \"linear-regression\",\n  fill: \"currentColor\",\n  fillOpacity: 0.1,\n  stroke: \"currentColor\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  strokeMiterlimit: 1\n};\nclass LinearRegression extends Mark {\n  constructor(data, options = {}) {\n    const {\n      x,\n      y,\n      z,\n      ci = 0.95,\n      precision = 4\n    } = options;\n    super(data, {\n      x: {\n        value: x,\n        scale: \"x\"\n      },\n      y: {\n        value: y,\n        scale: \"y\"\n      },\n      z: {\n        value: maybeZ(options),\n        optional: true\n      }\n    }, options, defaults);\n    this.z = z;\n    this.ci = +ci;\n    this.precision = +precision;\n    if (!(0 <= this.ci && this.ci < 1)) throw new Error(`invalid ci; not in [0, 1): ${ci}`);\n    if (!(this.precision > 0)) throw new Error(`invalid precision: ${precision}`);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {\n      x: X,\n      y: Y,\n      z: Z\n    } = channels;\n    const {\n      ci\n    } = this;\n    return create(\"svg:g\", context).call(applyIndirectStyles, this, dimensions, context).call(applyTransform, this, scales).call(g => g.selectAll().data(Z ? groupZ(index, Z, this.z) : [index]).enter().call(enter => enter.append(\"path\").attr(\"fill\", \"none\").call(applyDirectStyles, this).call(applyGroupedChannelStyles, this, {\n      ...channels,\n      fill: null,\n      fillOpacity: null\n    }).attr(\"d\", I => this._renderLine(I, X, Y)).call(ci && !isNone(this.fill) ? path => path.select(pathBefore).attr(\"stroke\", \"none\").call(applyDirectStyles, this).call(applyGroupedChannelStyles, this, {\n      ...channels,\n      stroke: null,\n      strokeOpacity: null,\n      strokeWidth: null\n    }).attr(\"d\", I => this._renderBand(I, X, Y)) : () => {}))).node();\n  }\n}\nfunction pathBefore() {\n  return this.parentNode.insertBefore(this.ownerDocument.createElementNS(namespaces.svg, \"path\"), this);\n}\nclass LinearRegressionX extends LinearRegression {\n  constructor(data, options) {\n    super(data, options);\n  }\n  _renderBand(I, X, Y) {\n    const {\n      ci,\n      precision\n    } = this;\n    const [y1, y2] = extent(I, i => Y[i]);\n    const f = linearRegressionF(I, Y, X);\n    const g = confidenceIntervalF(I, Y, X, (1 - ci) / 2, f);\n    return shapeArea().y(y => y).x0(y => g(y, -1)).x1(y => g(y, +1))(range(y1, y2 - precision / 2, precision).concat(y2));\n  }\n  _renderLine(I, X, Y) {\n    const [y1, y2] = extent(I, i => Y[i]);\n    const f = linearRegressionF(I, Y, X);\n    return `M${f(y1)},${y1}L${f(y2)},${y2}`;\n  }\n}\nclass LinearRegressionY extends LinearRegression {\n  constructor(data, options) {\n    super(data, options);\n  }\n  _renderBand(I, X, Y) {\n    const {\n      ci,\n      precision\n    } = this;\n    const [x1, x2] = extent(I, i => X[i]);\n    const f = linearRegressionF(I, X, Y);\n    const g = confidenceIntervalF(I, X, Y, (1 - ci) / 2, f);\n    return shapeArea().x(x => x).y0(x => g(x, -1)).y1(x => g(x, +1))(range(x1, x2 - precision / 2, precision).concat(x2));\n  }\n  _renderLine(I, X, Y) {\n    const [x1, x2] = extent(I, i => X[i]);\n    const f = linearRegressionF(I, X, Y);\n    return `M${x1},${f(x1)}L${x2},${f(x2)}`;\n  }\n}\nexport function linearRegressionX(data, {\n  y = indexOf,\n  x = identity,\n  stroke,\n  fill = isNoneish(stroke) ? \"currentColor\" : stroke,\n  ...options\n} = {}) {\n  return new LinearRegressionX(data, maybeDenseIntervalY({\n    ...options,\n    x,\n    y,\n    fill,\n    stroke\n  }));\n}\nexport function linearRegressionY(data, {\n  x = indexOf,\n  y = identity,\n  stroke,\n  fill = isNoneish(stroke) ? \"currentColor\" : stroke,\n  ...options\n} = {}) {\n  return new LinearRegressionY(data, maybeDenseIntervalX({\n    ...options,\n    x,\n    y,\n    fill,\n    stroke\n  }));\n}\nfunction linearRegressionF(I, X, Y) {\n  let sumX = 0,\n    sumY = 0,\n    sumXY = 0,\n    sumX2 = 0;\n  for (const i of I) {\n    const xi = X[i];\n    const yi = Y[i];\n    sumX += xi;\n    sumY += yi;\n    sumXY += xi * yi;\n    sumX2 += xi * xi;\n  }\n  const n = I.length;\n  const slope = (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);\n  const intercept = (sumY - slope * sumX) / n;\n  return x => slope * x + intercept;\n}\nfunction confidenceIntervalF(I, X, Y, p, f) {\n  const mean = sum(I, i => X[i]) / I.length;\n  let a = 0,\n    b = 0;\n  for (const i of I) {\n    a += (X[i] - mean) ** 2;\n    b += (Y[i] - f(X[i])) ** 2;\n  }\n  const sy = Math.sqrt(b / (I.length - 2));\n  const t = qt(p, I.length - 2);\n  return (x, k) => {\n    const Y = f(x);\n    const se = sy * Math.sqrt(1 / I.length + (x - mean) ** 2 / a);\n    return Y + k * t * se;\n  };\n}","map":{"version":3,"names":["extent","range","sum","area","shapeArea","namespaces","create","Mark","identity","indexOf","isNone","isNoneish","maybeZ","qt","applyDirectStyles","applyGroupedChannelStyles","applyIndirectStyles","applyTransform","groupZ","maybeDenseIntervalX","maybeDenseIntervalY","defaults","ariaLabel","fill","fillOpacity","stroke","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","LinearRegression","constructor","data","options","x","y","z","ci","precision","value","scale","optional","Error","render","index","scales","channels","dimensions","context","X","Y","Z","call","g","selectAll","enter","append","attr","I","_renderLine","path","select","pathBefore","strokeOpacity","_renderBand","node","parentNode","insertBefore","ownerDocument","createElementNS","svg","LinearRegressionX","y1","y2","i","f","linearRegressionF","confidenceIntervalF","x0","x1","concat","LinearRegressionY","x2","y0","linearRegressionX","linearRegressionY","sumX","sumY","sumXY","sumX2","xi","yi","n","length","slope","intercept","p","mean","a","b","sy","Math","sqrt","t","k","se"],"sources":["D:/Notebooks/notebooks-web/vue/node_modules/@observablehq/plot/src/marks/linearRegression.js"],"sourcesContent":["import {extent, range, sum, area as shapeArea, namespaces} from \"d3\";\nimport {create} from \"../context.js\";\nimport {Mark} from \"../mark.js\";\nimport {identity, indexOf, isNone, isNoneish, maybeZ} from \"../options.js\";\nimport {qt} from \"../stats.js\";\nimport {applyDirectStyles, applyGroupedChannelStyles, applyIndirectStyles, applyTransform, groupZ} from \"../style.js\";\nimport {maybeDenseIntervalX, maybeDenseIntervalY} from \"../transforms/bin.js\";\n\nconst defaults = {\n  ariaLabel: \"linear-regression\",\n  fill: \"currentColor\",\n  fillOpacity: 0.1,\n  stroke: \"currentColor\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  strokeMiterlimit: 1\n};\n\nclass LinearRegression extends Mark {\n  constructor(data, options = {}) {\n    const {x, y, z, ci = 0.95, precision = 4} = options;\n    super(\n      data,\n      {\n        x: {value: x, scale: \"x\"},\n        y: {value: y, scale: \"y\"},\n        z: {value: maybeZ(options), optional: true}\n      },\n      options,\n      defaults\n    );\n    this.z = z;\n    this.ci = +ci;\n    this.precision = +precision;\n    if (!(0 <= this.ci && this.ci < 1)) throw new Error(`invalid ci; not in [0, 1): ${ci}`);\n    if (!(this.precision > 0)) throw new Error(`invalid precision: ${precision}`);\n  }\n  render(index, scales, channels, dimensions, context) {\n    const {x: X, y: Y, z: Z} = channels;\n    const {ci} = this;\n    return create(\"svg:g\", context)\n      .call(applyIndirectStyles, this, dimensions, context)\n      .call(applyTransform, this, scales)\n      .call((g) =>\n        g\n          .selectAll()\n          .data(Z ? groupZ(index, Z, this.z) : [index])\n          .enter()\n          .call((enter) =>\n            enter\n              .append(\"path\")\n              .attr(\"fill\", \"none\")\n              .call(applyDirectStyles, this)\n              .call(applyGroupedChannelStyles, this, {...channels, fill: null, fillOpacity: null})\n              .attr(\"d\", (I) => this._renderLine(I, X, Y))\n              .call(\n                ci && !isNone(this.fill)\n                  ? (path) =>\n                      path\n                        .select(pathBefore)\n                        .attr(\"stroke\", \"none\")\n                        .call(applyDirectStyles, this)\n                        .call(applyGroupedChannelStyles, this, {\n                          ...channels,\n                          stroke: null,\n                          strokeOpacity: null,\n                          strokeWidth: null\n                        })\n                        .attr(\"d\", (I) => this._renderBand(I, X, Y))\n                  : () => {}\n              )\n          )\n      )\n      .node();\n  }\n}\n\nfunction pathBefore() {\n  return this.parentNode.insertBefore(this.ownerDocument.createElementNS(namespaces.svg, \"path\"), this);\n}\n\nclass LinearRegressionX extends LinearRegression {\n  constructor(data, options) {\n    super(data, options);\n  }\n  _renderBand(I, X, Y) {\n    const {ci, precision} = this;\n    const [y1, y2] = extent(I, (i) => Y[i]);\n    const f = linearRegressionF(I, Y, X);\n    const g = confidenceIntervalF(I, Y, X, (1 - ci) / 2, f);\n    return shapeArea()\n      .y((y) => y)\n      .x0((y) => g(y, -1))\n      .x1((y) => g(y, +1))(range(y1, y2 - precision / 2, precision).concat(y2));\n  }\n  _renderLine(I, X, Y) {\n    const [y1, y2] = extent(I, (i) => Y[i]);\n    const f = linearRegressionF(I, Y, X);\n    return `M${f(y1)},${y1}L${f(y2)},${y2}`;\n  }\n}\n\nclass LinearRegressionY extends LinearRegression {\n  constructor(data, options) {\n    super(data, options);\n  }\n  _renderBand(I, X, Y) {\n    const {ci, precision} = this;\n    const [x1, x2] = extent(I, (i) => X[i]);\n    const f = linearRegressionF(I, X, Y);\n    const g = confidenceIntervalF(I, X, Y, (1 - ci) / 2, f);\n    return shapeArea()\n      .x((x) => x)\n      .y0((x) => g(x, -1))\n      .y1((x) => g(x, +1))(range(x1, x2 - precision / 2, precision).concat(x2));\n  }\n  _renderLine(I, X, Y) {\n    const [x1, x2] = extent(I, (i) => X[i]);\n    const f = linearRegressionF(I, X, Y);\n    return `M${x1},${f(x1)}L${x2},${f(x2)}`;\n  }\n}\n\nexport function linearRegressionX(\n  data,\n  {y = indexOf, x = identity, stroke, fill = isNoneish(stroke) ? \"currentColor\" : stroke, ...options} = {}\n) {\n  return new LinearRegressionX(data, maybeDenseIntervalY({...options, x, y, fill, stroke}));\n}\n\nexport function linearRegressionY(\n  data,\n  {x = indexOf, y = identity, stroke, fill = isNoneish(stroke) ? \"currentColor\" : stroke, ...options} = {}\n) {\n  return new LinearRegressionY(data, maybeDenseIntervalX({...options, x, y, fill, stroke}));\n}\n\nfunction linearRegressionF(I, X, Y) {\n  let sumX = 0,\n    sumY = 0,\n    sumXY = 0,\n    sumX2 = 0;\n  for (const i of I) {\n    const xi = X[i];\n    const yi = Y[i];\n    sumX += xi;\n    sumY += yi;\n    sumXY += xi * yi;\n    sumX2 += xi * xi;\n  }\n  const n = I.length;\n  const slope = (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);\n  const intercept = (sumY - slope * sumX) / n;\n  return (x) => slope * x + intercept;\n}\n\nfunction confidenceIntervalF(I, X, Y, p, f) {\n  const mean = sum(I, (i) => X[i]) / I.length;\n  let a = 0,\n    b = 0;\n  for (const i of I) {\n    a += (X[i] - mean) ** 2;\n    b += (Y[i] - f(X[i])) ** 2;\n  }\n  const sy = Math.sqrt(b / (I.length - 2));\n  const t = qt(p, I.length - 2);\n  return (x, k) => {\n    const Y = f(x);\n    const se = sy * Math.sqrt(1 / I.length + (x - mean) ** 2 / a);\n    return Y + k * t * se;\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}