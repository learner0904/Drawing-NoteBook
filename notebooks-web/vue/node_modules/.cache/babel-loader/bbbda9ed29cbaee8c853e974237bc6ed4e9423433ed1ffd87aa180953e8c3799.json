{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      notes: [],\n      exampleDialogVisible: false,\n      examples: [{\n        id: 1,\n        name: \"柱状图\",\n        picture: \"http://localhost:9090/files/1728994611990-d3-output.png\",\n        code: `{\n                  marks: [\n                    Plot.barY(\n                      [\n                        { name: 'A', value: 30 },\n                        { name: 'B', value: 80 },\n                        { name: 'C', value: 45 },\n                        { name: 'D', value: 60 },\n                        { name: 'E', value: 20 },\n                        { name: 'F', value: 90 },\n                        { name: 'G', value: 55 }\n                      ],\n                      { x: \"name\", y: \"value\" }\n                    )\n                  ],\n                  y: { label: \"Value\" },\n                  x: { label: \"Category\" },\n                  height: 300,\n                  width: 500\n                }\n                `\n      }, {\n        id: 2,\n        name: \"折线图\",\n        picture: \"http://localhost:9090/files/1728922638251-d3-output.png\",\n        code: `data = \"earthquake2.csv\"\n                grid: true,\n                marks: [\n                Plot.line(data, Plot.binX({y:\"proportion\"},{x: \"Magnitude\"})),\n                Plot.ruleY([0]),\n                Plot.ruleX([5.5])\n                ]\n                `\n      }, {\n        id: 3,\n        name: \"散点图\",\n        picture: \"http://localhost:9090/files/1728922455594-d3-output.png\",\n        code: `// 创建SVG画布\nconst svg = d3.select(container)\n  .append('svg')\n  .attr('width', 500)\n  .attr('height', 500)\n  .style('background-color', 'white');  // 设置背景为白色\n\n// 数据集\nconst data = [\n  {name: \"孙\", yuwen: 90, shuxue: 89, yingyu: 88},\n  {name: \"赵\", yuwen: 78, shuxue: 88, yingyu: 66},\n  {name: \"周\", yuwen: 93, shuxue: 79, yingyu: 83},\n  {name: \"李\", yuwen: 96, shuxue: 77, yingyu: 89},\n  {name: \"王\", yuwen: 87, shuxue: 75, yingyu: 72},\n  {name: \"章\", yuwen: 92, shuxue: 83, yingyu: 90},\n  {name: \"刘\", yuwen: 92, shuxue: 85, yingyu: 98},\n  {name: \"陈\", yuwen: 79, shuxue: 91, yingyu: 86},\n  {name: \"杨\", yuwen: 84, shuxue: 89, yingyu: 90},\n  {name: \"黄\", yuwen: 95, shuxue: 90, yingyu: 92},\n  {name: \"吴\", yuwen: 86, shuxue: 89, yingyu: 80},\n  {name: \"徐\", yuwen: 77, shuxue: 93, yingyu: 90},\n  {name: \"马\", yuwen: 85, shuxue: 87, yingyu: 80},\n  {name: \"胡\", yuwen: 89, shuxue: 93, yingyu: 91},\n  {name: \"朱\", yuwen: 75, shuxue: 89, yingyu: 91},\n  {name: \"郭\", yuwen: 91, shuxue: 93, yingyu: 87},\n  {name: \"何\", yuwen: 87, shuxue: 85, yingyu: 76},\n  {name: \"罗\", yuwen: 82, shuxue: 85, yingyu: 90},\n  {name: \"高\", yuwen: 88, shuxue: 91, yingyu: 74},\n  {name: \"林\", yuwen: 80, shuxue: 85, yingyu: 90},\n  {name: \"姚\", yuwen: 69, shuxue: 90, yingyu: 84},\n  {name: \"姜\", yuwen: 74, shuxue: 88, yingyu: 76},\n  {name: \"夏\", yuwen: 83, shuxue: 80, yingyu: 85},\n  {name: \"任\", yuwen: 71, shuxue: 91, yingyu: 89},\n];\n\n// 定义x和y的比例尺\nconst xScale = d3.scaleLinear()\n  .domain([60, 100])  // 假设成绩范围为60到100\n  .range([50, 450]);  // 对应SVG中的坐标范围\n\nconst yScale = d3.scaleLinear()\n  .domain([60, 100])\n  .range([450, 50]);\n\n// 添加虚线网格线\nconst xAxisGrid = d3.axisBottom(xScale).tickSize(-400).tickFormat('');\nconst yAxisGrid = d3.axisLeft(yScale).tickSize(-400).tickFormat('');\n\nsvg.append('g')\n  .attr('class', 'x grid')\n  .attr('transform', 'translate(0, 450)')\n  .call(xAxisGrid)\n  .selectAll('line')\n  .style('stroke', 'lightgray')\n  .style('stroke-dasharray', '4,4');  // 将网格线设置为虚线\n\nsvg.append('g')\n  .attr('class', 'y grid')\n  .attr('transform', 'translate(50, 0)')\n  .call(yAxisGrid)\n  .selectAll('line')\n  .style('stroke', 'lightgray')\n  .style('stroke-dasharray', '4,4');  // 将网格线设置为虚线\n\n// 在图中绘制散点\nsvg.selectAll('circle')\n  .data(data)\n  .enter()\n  .append('circle')\n  .attr('cx', d => xScale(d.shuxue))  // 将数学成绩映射为x坐标\n  .attr('cy', d => yScale(d.yuwen))   // 将语文成绩映射为y坐标\n  .attr('r', 5)  // 点的半径\n  .attr('fill', '#555');  // 将点的颜色设置为黑色偏灰\n\n// 添加轴\nconst xAxis = d3.axisBottom(xScale);\nconst yAxis = d3.axisLeft(yScale);\n\nsvg.append('g')\n  .attr('transform', 'translate(0, 450)')\n  .call(xAxis);\n\nsvg.append('g')\n  .attr('transform', 'translate(50, 0)')\n  .call(yAxis);\n`\n      }]\n    };\n  },\n  created() {\n    this.fetchNotes();\n  },\n  methods: {\n    fetchNotes() {\n      this.$request.get('/notes/selectAll').then(res => {\n        this.notes = res.data || []; // 假设后端返回的数据结构是正确的\n        console.log(\"Fetched notes:\", this.notes);\n        console.log(\"Fetched notes:\", this.res);\n      }).catch(error => {\n        console.error(\"Error fetching notes:\", error);\n      });\n    },\n    openExamplePage() {\n      this.exampleDialogVisible = true;\n    },\n    showExample(example) {\n      this.$router.push({\n        path: '/d3runner',\n        query: {\n          id: null,\n          code: example.code,\n          picture: example.picture\n        }\n      });\n    },\n    goToD3Runner(noteId) {\n      this.$router.push({\n        path: '/d3runner',\n        query: {\n          id: noteId\n        }\n      });\n    },\n    goToD3RunnerWithoutId() {\n      this.$router.push({\n        path: '/d3runner'\n      });\n    },\n    getPictureUrl(picture) {\n      // 如果 picture 已经是完整 URL，则直接返回\n      if (picture.startsWith('http')) {\n        return picture;\n      }\n      // 否则使用 baseUrl 拼接图片路径\n      return this.$baseUrl + picture;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","notes","exampleDialogVisible","examples","id","name","picture","code","created","fetchNotes","methods","$request","get","then","res","console","log","catch","error","openExamplePage","showExample","example","$router","push","path","query","goToD3Runner","noteId","goToD3RunnerWithoutId","getPictureUrl","startsWith","$baseUrl"],"sources":["src/views/manager/Notes.vue"],"sourcesContent":["<template>\r\n    <div class=\"notes-container\">\r\n      <el-row :gutter=\"20\">\r\n        <!-- Card with plus sign -->\r\n        <el-col :span=\"8\">\r\n          <div class=\"add-card\" @click=\"openExamplePage\">\r\n            <div class=\"plus-sign\">+</div>\r\n          </div>\r\n        </el-col>\r\n  \r\n        <!-- Existing notes -->\r\n        <el-col :span=\"8\" v-for=\"note in notes.slice().reverse()\" :key=\"note.id\">\r\n          <el-card class=\"note-card\" shadow=\"hover\" style=\"margin-bottom: 20px; position: relative;\">\r\n            <!-- Note Picture -->\r\n            <img :src=\"note.picture\" alt=\"\" style=\"max-height: 250px; width: 100%; object-fit: cover; display: block; margin: 0 auto;\">\r\n            \r\n            <!-- Note Content -->\r\n            <div class=\"note-content\" style=\"background-color: rgba(0, 0, 0, 0.7); color: white; width: 100%; padding: 10px; position: absolute; bottom: 0; left: 0; display: flex; flex-direction: column; justify-content: space-between; align-items: flex-start;\">\r\n              <div style=\"display: flex; justify-content: space-between; width: 100%; align-items: center;\">\r\n                <p style=\"margin: 0;\">{{ note.comment }}</p>\r\n                <el-button type=\"primary\" @click=\"goToD3Runner(note.id)\" size=\"mini\">查看详情</el-button>\r\n              </div>\r\n              <small style=\"color: #ccc; font-size: 12px; margin-top: 5px;\">{{ note.date }}</small>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n\r\n\r\n\r\n\r\n      </el-row>\r\n\r\n      <!-- Example modal -->\r\n    <el-dialog\r\n      title=\"示例选择\"\r\n      :visible.sync=\"exampleDialogVisible\"\r\n      width=\"60%\"\r\n    >\r\n      <el-row :gutter=\"20\">\r\n        <!-- Add new D3 chart -->\r\n        <el-col :span=\"8\">\r\n          <div class=\"add-new-card\" @click=\"goToD3RunnerWithoutId\">\r\n            <div class=\"plus-sign\">+</div>\r\n          </div>\r\n        </el-col>\r\n\r\n        <!-- Example cards -->\r\n        <el-col :span=\"8\" v-for=\"example in examples\" :key=\"example.id\">\r\n          <el-card class=\"example-card\"  shadow=\"hover\" style=\"margin-bottom: 20px; position: relative;\">\r\n            <img :src=\"example.picture\" alt=\"Example Image\" style=\"max-height: 100px; width: 100%; object-fit: cover;\">\r\n            <div class=\"example-content\" style=\"text-align: center; margin-top: 10px;\">\r\n              <p>{{ example.name }}</p>\r\n            </div>\r\n            <!-- 添加按钮 -->\r\n            <div style=\"text-align: center; margin-top: 10px;\">\r\n              <el-button type=\"primary\" @click=\"showExample(example)\">Show Example</el-button>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n      </el-row>\r\n    </el-dialog>\r\n\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        notes: [],\r\n        exampleDialogVisible: false,\r\n      examples: [\r\n        {\r\n          id: 1,\r\n          name: \"柱状图\",\r\n          picture: \"http://localhost:9090/files/1728994611990-d3-output.png\",\r\n          code: `{\r\n                  marks: [\r\n                    Plot.barY(\r\n                      [\r\n                        { name: 'A', value: 30 },\r\n                        { name: 'B', value: 80 },\r\n                        { name: 'C', value: 45 },\r\n                        { name: 'D', value: 60 },\r\n                        { name: 'E', value: 20 },\r\n                        { name: 'F', value: 90 },\r\n                        { name: 'G', value: 55 }\r\n                      ],\r\n                      { x: \"name\", y: \"value\" }\r\n                    )\r\n                  ],\r\n                  y: { label: \"Value\" },\r\n                  x: { label: \"Category\" },\r\n                  height: 300,\r\n                  width: 500\r\n                }\r\n                `\r\n        },\r\n        {\r\n          id: 2,\r\n          name: \"折线图\",\r\n          picture: \"http://localhost:9090/files/1728922638251-d3-output.png\",\r\n          code: `data = \"earthquake2.csv\"\r\n                grid: true,\r\n                marks: [\r\n                Plot.line(data, Plot.binX({y:\"proportion\"},{x: \"Magnitude\"})),\r\n                Plot.ruleY([0]),\r\n                Plot.ruleX([5.5])\r\n                ]\r\n                `\r\n        },\r\n        {\r\n          id: 3,\r\n          name: \"散点图\",\r\n          picture: \"http://localhost:9090/files/1728922455594-d3-output.png\",\r\n          code: `// 创建SVG画布\r\nconst svg = d3.select(container)\r\n  .append('svg')\r\n  .attr('width', 500)\r\n  .attr('height', 500)\r\n  .style('background-color', 'white');  // 设置背景为白色\r\n\r\n// 数据集\r\nconst data = [\r\n  {name: \"孙\", yuwen: 90, shuxue: 89, yingyu: 88},\r\n  {name: \"赵\", yuwen: 78, shuxue: 88, yingyu: 66},\r\n  {name: \"周\", yuwen: 93, shuxue: 79, yingyu: 83},\r\n  {name: \"李\", yuwen: 96, shuxue: 77, yingyu: 89},\r\n  {name: \"王\", yuwen: 87, shuxue: 75, yingyu: 72},\r\n  {name: \"章\", yuwen: 92, shuxue: 83, yingyu: 90},\r\n  {name: \"刘\", yuwen: 92, shuxue: 85, yingyu: 98},\r\n  {name: \"陈\", yuwen: 79, shuxue: 91, yingyu: 86},\r\n  {name: \"杨\", yuwen: 84, shuxue: 89, yingyu: 90},\r\n  {name: \"黄\", yuwen: 95, shuxue: 90, yingyu: 92},\r\n  {name: \"吴\", yuwen: 86, shuxue: 89, yingyu: 80},\r\n  {name: \"徐\", yuwen: 77, shuxue: 93, yingyu: 90},\r\n  {name: \"马\", yuwen: 85, shuxue: 87, yingyu: 80},\r\n  {name: \"胡\", yuwen: 89, shuxue: 93, yingyu: 91},\r\n  {name: \"朱\", yuwen: 75, shuxue: 89, yingyu: 91},\r\n  {name: \"郭\", yuwen: 91, shuxue: 93, yingyu: 87},\r\n  {name: \"何\", yuwen: 87, shuxue: 85, yingyu: 76},\r\n  {name: \"罗\", yuwen: 82, shuxue: 85, yingyu: 90},\r\n  {name: \"高\", yuwen: 88, shuxue: 91, yingyu: 74},\r\n  {name: \"林\", yuwen: 80, shuxue: 85, yingyu: 90},\r\n  {name: \"姚\", yuwen: 69, shuxue: 90, yingyu: 84},\r\n  {name: \"姜\", yuwen: 74, shuxue: 88, yingyu: 76},\r\n  {name: \"夏\", yuwen: 83, shuxue: 80, yingyu: 85},\r\n  {name: \"任\", yuwen: 71, shuxue: 91, yingyu: 89},\r\n];\r\n\r\n// 定义x和y的比例尺\r\nconst xScale = d3.scaleLinear()\r\n  .domain([60, 100])  // 假设成绩范围为60到100\r\n  .range([50, 450]);  // 对应SVG中的坐标范围\r\n\r\nconst yScale = d3.scaleLinear()\r\n  .domain([60, 100])\r\n  .range([450, 50]);\r\n\r\n// 添加虚线网格线\r\nconst xAxisGrid = d3.axisBottom(xScale).tickSize(-400).tickFormat('');\r\nconst yAxisGrid = d3.axisLeft(yScale).tickSize(-400).tickFormat('');\r\n\r\nsvg.append('g')\r\n  .attr('class', 'x grid')\r\n  .attr('transform', 'translate(0, 450)')\r\n  .call(xAxisGrid)\r\n  .selectAll('line')\r\n  .style('stroke', 'lightgray')\r\n  .style('stroke-dasharray', '4,4');  // 将网格线设置为虚线\r\n\r\nsvg.append('g')\r\n  .attr('class', 'y grid')\r\n  .attr('transform', 'translate(50, 0)')\r\n  .call(yAxisGrid)\r\n  .selectAll('line')\r\n  .style('stroke', 'lightgray')\r\n  .style('stroke-dasharray', '4,4');  // 将网格线设置为虚线\r\n\r\n// 在图中绘制散点\r\nsvg.selectAll('circle')\r\n  .data(data)\r\n  .enter()\r\n  .append('circle')\r\n  .attr('cx', d => xScale(d.shuxue))  // 将数学成绩映射为x坐标\r\n  .attr('cy', d => yScale(d.yuwen))   // 将语文成绩映射为y坐标\r\n  .attr('r', 5)  // 点的半径\r\n  .attr('fill', '#555');  // 将点的颜色设置为黑色偏灰\r\n\r\n// 添加轴\r\nconst xAxis = d3.axisBottom(xScale);\r\nconst yAxis = d3.axisLeft(yScale);\r\n\r\nsvg.append('g')\r\n  .attr('transform', 'translate(0, 450)')\r\n  .call(xAxis);\r\n\r\nsvg.append('g')\r\n  .attr('transform', 'translate(50, 0)')\r\n  .call(yAxis);\r\n`\r\n        },\r\n      ]\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchNotes();\r\n    },\r\n    methods: {\r\n        fetchNotes() {\r\n            this.$request.get('/notes/selectAll')\r\n              .then(res => {\r\n                this.notes = res.data || []; // 假设后端返回的数据结构是正确的\r\n                console.log(\"Fetched notes:\", this.notes);\r\n                console.log(\"Fetched notes:\", this.res);\r\n              })\r\n              .catch(error => {\r\n                console.error(\"Error fetching notes:\", error);\r\n              });\r\n          },\r\n          openExamplePage() {\r\n      this.exampleDialogVisible = true;\r\n    },\r\n    showExample(example) {\r\n      this.$router.push({ path: '/d3runner', query: { id: null, code: example.code, picture: example.picture } });\r\n    },\r\n        goToD3Runner(noteId) {\r\n          this.$router.push({ path: '/d3runner', query: { id: noteId } });\r\n        },\r\n        goToD3RunnerWithoutId() {\r\n          this.$router.push({ path: '/d3runner' });\r\n        },\r\n        getPictureUrl(picture) {\r\n          // 如果 picture 已经是完整 URL，则直接返回\r\n          if (picture.startsWith('http')) {\r\n            return picture;\r\n          }\r\n          // 否则使用 baseUrl 拼接图片路径\r\n          return this.$baseUrl + picture;\r\n        }\r\n      }\r\n    };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .notes-container {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .note-picture {\r\n    width: 100%;\r\n    height: 250px;\r\n    object-fit: cover;\r\n    border-radius: 15px;\r\n  }\r\n  \r\n  .note-content {\r\n    margin-top: 10px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .note-card {\r\n    border-radius: 15px;\r\n    width: 100%;\r\n    height: 350px; /* 调整卡片高度 */\r\n  }\r\n  \r\n  .add-card {\r\n    border: 2px dashed #d9d9d9;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 350px;\r\n    width: 100%; /* 同 note-card 保持一致的大小 */\r\n    border-radius: 15px;\r\n    cursor: pointer;\r\n    transition: border-color 0.3s ease;\r\n  }\r\n  \r\n  .add-card:hover {\r\n    border-color: #080f17;\r\n  }\r\n  \r\n  .add-new-card {\r\n    border: 2px dashed #d9d9d9;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 220px;\r\n    width: 100%; /* 同 note-card 保持一致的大小 */\r\n    border-radius: 15px;\r\n    cursor: pointer;\r\n    transition: border-color 0.3s ease;\r\n  }\r\n  \r\n  .add-new-card:hover {\r\n    border-color: #080f17;\r\n  }\r\n  .plus-sign {\r\n    font-size: 60px;\r\n    color: #9db5cd;\r\n  }\r\n  </style>\r\n  "],"mappings":";AAoEA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,oBAAA;MACAC,QAAA,GACA;QACAC,EAAA;QACAC,IAAA;QACAC,OAAA;QACAC,IAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACA,GACA;QACAH,EAAA;QACAC,IAAA;QACAC,OAAA;QACAC,IAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACA,GACA;QACAH,EAAA;QACAC,IAAA;QACAC,OAAA;QACAC,IAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;MACA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACAD,WAAA;MACA,KAAAE,QAAA,CAAAC,GAAA,qBACAC,IAAA,CAAAC,GAAA;QACA,KAAAb,KAAA,GAAAa,GAAA,CAAAd,IAAA;QACAe,OAAA,CAAAC,GAAA,wBAAAf,KAAA;QACAc,OAAA,CAAAC,GAAA,wBAAAF,GAAA;MACA,GACAG,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAG,KAAA,0BAAAA,KAAA;MACA;IACA;IACAC,gBAAA;MACA,KAAAjB,oBAAA;IACA;IACAkB,YAAAC,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;QAAAC,KAAA;UAAArB,EAAA;UAAAG,IAAA,EAAAc,OAAA,CAAAd,IAAA;UAAAD,OAAA,EAAAe,OAAA,CAAAf;QAAA;MAAA;IACA;IACAoB,aAAAC,MAAA;MACA,KAAAL,OAAA,CAAAC,IAAA;QAAAC,IAAA;QAAAC,KAAA;UAAArB,EAAA,EAAAuB;QAAA;MAAA;IACA;IACAC,sBAAA;MACA,KAAAN,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;IACAK,cAAAvB,OAAA;MACA;MACA,IAAAA,OAAA,CAAAwB,UAAA;QACA,OAAAxB,OAAA;MACA;MACA;MACA,YAAAyB,QAAA,GAAAzB,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}